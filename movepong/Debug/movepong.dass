
Debug/movepong.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 #include "draw.h"
 
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 fafc 	bl	20000600 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <delay_250ns>:
#define STK_CTRL_END ((volatile unsigned char*) (STK + 2))	// (De)activation and status of SysTick
#define STK_LOAD	 ((volatile unsigned int*) (STK + 4))	// Start value
#define STK_VAL		 ((volatile unsigned int*) (STK + 8))	// Current value
#define SIMULATOR

void delay_250ns(void){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	*STK_CTRL = 0;			// Reset SysTick
20000014:	4b08      	ldr	r3, [pc, #32]	; (20000038 <delay_250ns+0x28>)
20000016:	2200      	movs	r2, #0
20000018:	601a      	str	r2, [r3, #0]
	*STK_LOAD = 0x00000029; // Set load value, 42 Hz = 250 ns, 42 (dec) = 29 (hex)
2000001a:	4b08      	ldr	r3, [pc, #32]	; (2000003c <delay_250ns+0x2c>)
2000001c:	2229      	movs	r2, #41	; 0x29
2000001e:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;			// Reset counter register
20000020:	4b07      	ldr	r3, [pc, #28]	; (20000040 <delay_250ns+0x30>)
20000022:	2200      	movs	r2, #0
20000024:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;			// Set SysTick and enable counter
20000026:	4b04      	ldr	r3, [pc, #16]	; (20000038 <delay_250ns+0x28>)
20000028:	2205      	movs	r2, #5
2000002a:	601a      	str	r2, [r3, #0]
	
	// Run until counter == 0
	while(!*STK_CTRL_END){
2000002c:	46c0      	nop			; (mov r8, r8)
2000002e:	4b05      	ldr	r3, [pc, #20]	; (20000044 <delay_250ns+0x34>)
20000030:	781b      	ldrb	r3, [r3, #0]
		break;
	}
}
20000032:	46c0      	nop			; (mov r8, r8)
20000034:	46bd      	mov	sp, r7
20000036:	bd80      	pop	{r7, pc}
20000038:	e000e010 	and	lr, r0, r0, lsl r0
2000003c:	e000e014 	and	lr, r0, r4, lsl r0
20000040:	e000e018 	and	lr, r0, r8, lsl r0
20000044:	e000e012 	and	lr, r0, r2, lsl r0

20000048 <delay_micro>:

void delay_micro(unsigned int us){
20000048:	b580      	push	{r7, lr}
2000004a:	b084      	sub	sp, #16
2000004c:	af00      	add	r7, sp, #0
2000004e:	6078      	str	r0, [r7, #4]
	for(unsigned int i = 0; i <= us; i++){
20000050:	2300      	movs	r3, #0
20000052:	60fb      	str	r3, [r7, #12]
20000054:	e00a      	b.n	2000006c <delay_micro+0x24>
		delay_250ns();
20000056:	f7ff ffdb 	bl	20000010 <delay_250ns>
		delay_250ns();
2000005a:	f7ff ffd9 	bl	20000010 <delay_250ns>
		delay_250ns();
2000005e:	f7ff ffd7 	bl	20000010 <delay_250ns>
		delay_250ns();
20000062:	f7ff ffd5 	bl	20000010 <delay_250ns>
	for(unsigned int i = 0; i <= us; i++){
20000066:	68fb      	ldr	r3, [r7, #12]
20000068:	3301      	adds	r3, #1
2000006a:	60fb      	str	r3, [r7, #12]
2000006c:	68fa      	ldr	r2, [r7, #12]
2000006e:	687b      	ldr	r3, [r7, #4]
20000070:	429a      	cmp	r2, r3
20000072:	d9f0      	bls.n	20000056 <delay_micro+0xe>
	}
}
20000074:	46c0      	nop			; (mov r8, r8)
20000076:	46c0      	nop			; (mov r8, r8)
20000078:	46bd      	mov	sp, r7
2000007a:	b004      	add	sp, #16
2000007c:	bd80      	pop	{r7, pc}

2000007e <delay_milli>:

void delay_milli(unsigned int ms){
2000007e:	b580      	push	{r7, lr}
20000080:	b084      	sub	sp, #16
20000082:	af00      	add	r7, sp, #0
20000084:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR
		ms = ms/250;
20000086:	687b      	ldr	r3, [r7, #4]
20000088:	21fa      	movs	r1, #250	; 0xfa
2000008a:	0018      	movs	r0, r3
2000008c:	f000 fae0 	bl	20000650 <__udivsi3>
20000090:	0003      	movs	r3, r0
20000092:	607b      	str	r3, [r7, #4]
		ms++;
20000094:	687b      	ldr	r3, [r7, #4]
20000096:	3301      	adds	r3, #1
20000098:	607b      	str	r3, [r7, #4]
	#endif
	for(unsigned int i = 0; i < ms; i++)
2000009a:	2300      	movs	r3, #0
2000009c:	60fb      	str	r3, [r7, #12]
2000009e:	e007      	b.n	200000b0 <delay_milli+0x32>
		delay_micro(1000);
200000a0:	23fa      	movs	r3, #250	; 0xfa
200000a2:	009b      	lsls	r3, r3, #2
200000a4:	0018      	movs	r0, r3
200000a6:	f7ff ffcf 	bl	20000048 <delay_micro>
	for(unsigned int i = 0; i < ms; i++)
200000aa:	68fb      	ldr	r3, [r7, #12]
200000ac:	3301      	adds	r3, #1
200000ae:	60fb      	str	r3, [r7, #12]
200000b0:	68fa      	ldr	r2, [r7, #12]
200000b2:	687b      	ldr	r3, [r7, #4]
200000b4:	429a      	cmp	r2, r3
200000b6:	d3f3      	bcc.n	200000a0 <delay_milli+0x22>

200000b8:	46c0      	nop			; (mov r8, r8)
200000ba:	46c0      	nop			; (mov r8, r8)
200000bc:	46bd      	mov	sp, r7
200000be:	b004      	add	sp, #16
200000c0:	bd80      	pop	{r7, pc}
200000c2:	46c0      	nop			; (mov r8, r8)

200000c4 <swap>:
    void (* set_speed ) (struct tObj *, int, int);
}OBJECT, *POBJECT;

/* ---- Hjälpfunktioner ---- */
/* vvv RÖR INTE vvv */
void swap(unsigned char* a, unsigned char* b){
200000c4:	b580      	push	{r7, lr}
200000c6:	b084      	sub	sp, #16
200000c8:	af00      	add	r7, sp, #0
200000ca:	6078      	str	r0, [r7, #4]
200000cc:	6039      	str	r1, [r7, #0]
	unsigned char tempa = *a;
200000ce:	210f      	movs	r1, #15
200000d0:	187b      	adds	r3, r7, r1
200000d2:	687a      	ldr	r2, [r7, #4]
200000d4:	7812      	ldrb	r2, [r2, #0]
200000d6:	701a      	strb	r2, [r3, #0]
	unsigned char tempb = *b;
200000d8:	200e      	movs	r0, #14
200000da:	183b      	adds	r3, r7, r0
200000dc:	683a      	ldr	r2, [r7, #0]
200000de:	7812      	ldrb	r2, [r2, #0]
200000e0:	701a      	strb	r2, [r3, #0]
	*a = tempb;
200000e2:	687b      	ldr	r3, [r7, #4]
200000e4:	183a      	adds	r2, r7, r0
200000e6:	7812      	ldrb	r2, [r2, #0]
200000e8:	701a      	strb	r2, [r3, #0]
	*b = tempa;
200000ea:	683b      	ldr	r3, [r7, #0]
200000ec:	187a      	adds	r2, r7, r1
200000ee:	7812      	ldrb	r2, [r2, #0]
200000f0:	701a      	strb	r2, [r3, #0]
	
} 
200000f2:	46c0      	nop			; (mov r8, r8)
200000f4:	46bd      	mov	sp, r7
200000f6:	b004      	add	sp, #16
200000f8:	bd80      	pop	{r7, pc}

200000fa <draw_line>:

int draw_line(PLINE l){
200000fa:	b5b0      	push	{r4, r5, r7, lr}
200000fc:	b08c      	sub	sp, #48	; 0x30
200000fe:	af00      	add	r7, sp, #0
20000100:	6078      	str	r0, [r7, #4]
	int deltax, deltay, error, ystep, y; 
	
	LINE l0 = *l;
20000102:	2410      	movs	r4, #16
20000104:	193a      	adds	r2, r7, r4
20000106:	687b      	ldr	r3, [r7, #4]
20000108:	0010      	movs	r0, r2
2000010a:	0019      	movs	r1, r3
2000010c:	2304      	movs	r3, #4
2000010e:	001a      	movs	r2, r3
20000110:	f000 fb2a 	bl	20000768 <memcpy>
	unsigned char x0 = l0.start.x;
20000114:	0021      	movs	r1, r4
20000116:	187b      	adds	r3, r7, r1
20000118:	781a      	ldrb	r2, [r3, #0]
2000011a:	200f      	movs	r0, #15
2000011c:	183b      	adds	r3, r7, r0
2000011e:	701a      	strb	r2, [r3, #0]
	unsigned char y0 = l0.start.y;
20000120:	187b      	adds	r3, r7, r1
20000122:	785a      	ldrb	r2, [r3, #1]
20000124:	240e      	movs	r4, #14
20000126:	193b      	adds	r3, r7, r4
20000128:	701a      	strb	r2, [r3, #0]
	unsigned char x1 = l0.end.x;
2000012a:	187b      	adds	r3, r7, r1
2000012c:	789a      	ldrb	r2, [r3, #2]
2000012e:	250d      	movs	r5, #13
20000130:	197b      	adds	r3, r7, r5
20000132:	701a      	strb	r2, [r3, #0]
	unsigned char y1 = l0.end.y;
20000134:	187b      	adds	r3, r7, r1
20000136:	78da      	ldrb	r2, [r3, #3]
20000138:	210c      	movs	r1, #12
2000013a:	187b      	adds	r3, r7, r1
2000013c:	701a      	strb	r2, [r3, #0]
	
	// Only allow pixels within the display
	if(x0 < 1 || x0 > 128 || x1 < 1 || x1 > 128 || y0 < 1 || y0 > 64 || y1 < 1 || y1 > 64){
2000013e:	183b      	adds	r3, r7, r0
20000140:	781b      	ldrb	r3, [r3, #0]
20000142:	2b00      	cmp	r3, #0
20000144:	d01b      	beq.n	2000017e <draw_line+0x84>
20000146:	183b      	adds	r3, r7, r0
20000148:	781b      	ldrb	r3, [r3, #0]
2000014a:	2b80      	cmp	r3, #128	; 0x80
2000014c:	d817      	bhi.n	2000017e <draw_line+0x84>
2000014e:	197b      	adds	r3, r7, r5
20000150:	781b      	ldrb	r3, [r3, #0]
20000152:	2b00      	cmp	r3, #0
20000154:	d013      	beq.n	2000017e <draw_line+0x84>
20000156:	197b      	adds	r3, r7, r5
20000158:	781b      	ldrb	r3, [r3, #0]
2000015a:	2b80      	cmp	r3, #128	; 0x80
2000015c:	d80f      	bhi.n	2000017e <draw_line+0x84>
2000015e:	193b      	adds	r3, r7, r4
20000160:	781b      	ldrb	r3, [r3, #0]
20000162:	2b00      	cmp	r3, #0
20000164:	d00b      	beq.n	2000017e <draw_line+0x84>
20000166:	193b      	adds	r3, r7, r4
20000168:	781b      	ldrb	r3, [r3, #0]
2000016a:	2b40      	cmp	r3, #64	; 0x40
2000016c:	d807      	bhi.n	2000017e <draw_line+0x84>
2000016e:	187b      	adds	r3, r7, r1
20000170:	781b      	ldrb	r3, [r3, #0]
20000172:	2b00      	cmp	r3, #0
20000174:	d003      	beq.n	2000017e <draw_line+0x84>
20000176:	187b      	adds	r3, r7, r1
20000178:	781b      	ldrb	r3, [r3, #0]
2000017a:	2b40      	cmp	r3, #64	; 0x40
2000017c:	d901      	bls.n	20000182 <draw_line+0x88>
		return 0;
2000017e:	2300      	movs	r3, #0
20000180:	e0a1      	b.n	200002c6 <draw_line+0x1cc>
	}
	
	// Bresenham's algorithm
	bool steep = abs(y1 - y0) > abs(x1 - x0);
20000182:	230c      	movs	r3, #12
20000184:	18fb      	adds	r3, r7, r3
20000186:	781b      	ldrb	r3, [r3, #0]
20000188:	001a      	movs	r2, r3
2000018a:	230e      	movs	r3, #14
2000018c:	18fb      	adds	r3, r7, r3
2000018e:	781b      	ldrb	r3, [r3, #0]
20000190:	1ad3      	subs	r3, r2, r3
20000192:	17da      	asrs	r2, r3, #31
20000194:	1899      	adds	r1, r3, r2
20000196:	4051      	eors	r1, r2
20000198:	230d      	movs	r3, #13
2000019a:	18fb      	adds	r3, r7, r3
2000019c:	781b      	ldrb	r3, [r3, #0]
2000019e:	001a      	movs	r2, r3
200001a0:	230f      	movs	r3, #15
200001a2:	18fb      	adds	r3, r7, r3
200001a4:	781b      	ldrb	r3, [r3, #0]
200001a6:	1ad3      	subs	r3, r2, r3
200001a8:	17d8      	asrs	r0, r3, #31
200001aa:	181a      	adds	r2, r3, r0
200001ac:	4042      	eors	r2, r0
200001ae:	231f      	movs	r3, #31
200001b0:	18fb      	adds	r3, r7, r3
200001b2:	2001      	movs	r0, #1
200001b4:	4291      	cmp	r1, r2
200001b6:	dc01      	bgt.n	200001bc <draw_line+0xc2>
200001b8:	2200      	movs	r2, #0
200001ba:	1c10      	adds	r0, r2, #0
200001bc:	7018      	strb	r0, [r3, #0]
	if (steep){
200001be:	231f      	movs	r3, #31
200001c0:	18fb      	adds	r3, r7, r3
200001c2:	781b      	ldrb	r3, [r3, #0]
200001c4:	2b00      	cmp	r3, #0
200001c6:	d00f      	beq.n	200001e8 <draw_line+0xee>
		swap(&x0,&y0);
200001c8:	230e      	movs	r3, #14
200001ca:	18fa      	adds	r2, r7, r3
200001cc:	230f      	movs	r3, #15
200001ce:	18fb      	adds	r3, r7, r3
200001d0:	0011      	movs	r1, r2
200001d2:	0018      	movs	r0, r3
200001d4:	f7ff ff76 	bl	200000c4 <swap>
		swap(&x1,&y1);
200001d8:	230c      	movs	r3, #12
200001da:	18fa      	adds	r2, r7, r3
200001dc:	230d      	movs	r3, #13
200001de:	18fb      	adds	r3, r7, r3
200001e0:	0011      	movs	r1, r2
200001e2:	0018      	movs	r0, r3
200001e4:	f7ff ff6e 	bl	200000c4 <swap>
	}
	if (x0 > x1){
200001e8:	210f      	movs	r1, #15
200001ea:	187b      	adds	r3, r7, r1
200001ec:	781a      	ldrb	r2, [r3, #0]
200001ee:	200d      	movs	r0, #13
200001f0:	183b      	adds	r3, r7, r0
200001f2:	781b      	ldrb	r3, [r3, #0]
200001f4:	429a      	cmp	r2, r3
200001f6:	d90d      	bls.n	20000214 <draw_line+0x11a>
		swap(&x0,&x1);
200001f8:	183a      	adds	r2, r7, r0
200001fa:	187b      	adds	r3, r7, r1
200001fc:	0011      	movs	r1, r2
200001fe:	0018      	movs	r0, r3
20000200:	f7ff ff60 	bl	200000c4 <swap>
		swap(&y0,&y1);
20000204:	230c      	movs	r3, #12
20000206:	18fa      	adds	r2, r7, r3
20000208:	230e      	movs	r3, #14
2000020a:	18fb      	adds	r3, r7, r3
2000020c:	0011      	movs	r1, r2
2000020e:	0018      	movs	r0, r3
20000210:	f7ff ff58 	bl	200000c4 <swap>
	} 
	
	deltax = x1-x0;
20000214:	230d      	movs	r3, #13
20000216:	18fb      	adds	r3, r7, r3
20000218:	781b      	ldrb	r3, [r3, #0]
2000021a:	001a      	movs	r2, r3
2000021c:	230f      	movs	r3, #15
2000021e:	18fb      	adds	r3, r7, r3
20000220:	781b      	ldrb	r3, [r3, #0]
20000222:	1ad3      	subs	r3, r2, r3
20000224:	61bb      	str	r3, [r7, #24]
	deltay = abs(y1 - y0);
20000226:	200c      	movs	r0, #12
20000228:	183b      	adds	r3, r7, r0
2000022a:	781b      	ldrb	r3, [r3, #0]
2000022c:	001a      	movs	r2, r3
2000022e:	210e      	movs	r1, #14
20000230:	187b      	adds	r3, r7, r1
20000232:	781b      	ldrb	r3, [r3, #0]
20000234:	1ad3      	subs	r3, r2, r3
20000236:	17da      	asrs	r2, r3, #31
20000238:	189b      	adds	r3, r3, r2
2000023a:	4053      	eors	r3, r2
2000023c:	617b      	str	r3, [r7, #20]
	error = 0;
2000023e:	2300      	movs	r3, #0
20000240:	62fb      	str	r3, [r7, #44]	; 0x2c
	y = y0;
20000242:	187b      	adds	r3, r7, r1
20000244:	781b      	ldrb	r3, [r3, #0]
20000246:	627b      	str	r3, [r7, #36]	; 0x24
	
	if (y0 < y1){
20000248:	187b      	adds	r3, r7, r1
2000024a:	781a      	ldrb	r2, [r3, #0]
2000024c:	183b      	adds	r3, r7, r0
2000024e:	781b      	ldrb	r3, [r3, #0]
20000250:	429a      	cmp	r2, r3
20000252:	d202      	bcs.n	2000025a <draw_line+0x160>
		ystep = 1;
20000254:	2301      	movs	r3, #1
20000256:	62bb      	str	r3, [r7, #40]	; 0x28
20000258:	e002      	b.n	20000260 <draw_line+0x166>
	}else{
		ystep = -1;
2000025a:	2301      	movs	r3, #1
2000025c:	425b      	negs	r3, r3
2000025e:	62bb      	str	r3, [r7, #40]	; 0x28
	}
	
	for(int x = x0; x <= x1; x++){
20000260:	230f      	movs	r3, #15
20000262:	18fb      	adds	r3, r7, r3
20000264:	781b      	ldrb	r3, [r3, #0]
20000266:	623b      	str	r3, [r7, #32]
20000268:	e025      	b.n	200002b6 <draw_line+0x1bc>
		if(steep){
2000026a:	231f      	movs	r3, #31
2000026c:	18fb      	adds	r3, r7, r3
2000026e:	781b      	ldrb	r3, [r3, #0]
20000270:	2b00      	cmp	r3, #0
20000272:	d006      	beq.n	20000282 <draw_line+0x188>
			graphic_pixel_set(y, x);
20000274:	6a3a      	ldr	r2, [r7, #32]
20000276:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20000278:	0011      	movs	r1, r2
2000027a:	0018      	movs	r0, r3
2000027c:	f000 f9e1 	bl	20000642 <graphic_pixel_set>
20000280:	e005      	b.n	2000028e <draw_line+0x194>
		}else{
			graphic_pixel_set(x, y);
20000282:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20000284:	6a3b      	ldr	r3, [r7, #32]
20000286:	0011      	movs	r1, r2
20000288:	0018      	movs	r0, r3
2000028a:	f000 f9da 	bl	20000642 <graphic_pixel_set>
		}
		
		error = error+deltay;
2000028e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
20000290:	697b      	ldr	r3, [r7, #20]
20000292:	18d3      	adds	r3, r2, r3
20000294:	62fb      	str	r3, [r7, #44]	; 0x2c
		
		if(2 * error >= deltax){
20000296:	6afb      	ldr	r3, [r7, #44]	; 0x2c
20000298:	005b      	lsls	r3, r3, #1
2000029a:	69ba      	ldr	r2, [r7, #24]
2000029c:	429a      	cmp	r2, r3
2000029e:	dc07      	bgt.n	200002b0 <draw_line+0x1b6>
			y = y + ystep;
200002a0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
200002a2:	6abb      	ldr	r3, [r7, #40]	; 0x28
200002a4:	18d3      	adds	r3, r2, r3
200002a6:	627b      	str	r3, [r7, #36]	; 0x24
			error = error - deltax;
200002a8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
200002aa:	69bb      	ldr	r3, [r7, #24]
200002ac:	1ad3      	subs	r3, r2, r3
200002ae:	62fb      	str	r3, [r7, #44]	; 0x2c
	for(int x = x0; x <= x1; x++){
200002b0:	6a3b      	ldr	r3, [r7, #32]
200002b2:	3301      	adds	r3, #1
200002b4:	623b      	str	r3, [r7, #32]
200002b6:	230d      	movs	r3, #13
200002b8:	18fb      	adds	r3, r7, r3
200002ba:	781b      	ldrb	r3, [r3, #0]
200002bc:	001a      	movs	r2, r3
200002be:	6a3b      	ldr	r3, [r7, #32]
200002c0:	4293      	cmp	r3, r2
200002c2:	ddd2      	ble.n	2000026a <draw_line+0x170>
		}
	}
	
	return 1;
200002c4:	2301      	movs	r3, #1
}
200002c6:	0018      	movs	r0, r3
200002c8:	46bd      	mov	sp, r7
200002ca:	b00c      	add	sp, #48	; 0x30
200002cc:	bdb0      	pop	{r4, r5, r7, pc}

200002ce <draw_rectangle>:

void draw_rectangle(PRECT r){
200002ce:	b5f0      	push	{r4, r5, r6, r7, lr}
200002d0:	b08b      	sub	sp, #44	; 0x2c
200002d2:	af00      	add	r7, sp, #0
200002d4:	6078      	str	r0, [r7, #4]
	RECT r0 = *r;
200002d6:	241c      	movs	r4, #28
200002d8:	193a      	adds	r2, r7, r4
200002da:	687b      	ldr	r3, [r7, #4]
200002dc:	0010      	movs	r0, r2
200002de:	0019      	movs	r1, r3
200002e0:	2304      	movs	r3, #4
200002e2:	001a      	movs	r2, r3
200002e4:	f000 fa40 	bl	20000768 <memcpy>
	unsigned char xs = r0.ulcorner.x;
200002e8:	2023      	movs	r0, #35	; 0x23
200002ea:	183b      	adds	r3, r7, r0
200002ec:	0021      	movs	r1, r4
200002ee:	187a      	adds	r2, r7, r1
200002f0:	7812      	ldrb	r2, [r2, #0]
200002f2:	701a      	strb	r2, [r3, #0]
	unsigned char ys = r0.ulcorner.y;
200002f4:	2422      	movs	r4, #34	; 0x22
200002f6:	193b      	adds	r3, r7, r4
200002f8:	187a      	adds	r2, r7, r1
200002fa:	7852      	ldrb	r2, [r2, #1]
200002fc:	701a      	strb	r2, [r3, #0]
	unsigned char width = r0.width;
200002fe:	2521      	movs	r5, #33	; 0x21
20000300:	197b      	adds	r3, r7, r5
20000302:	187a      	adds	r2, r7, r1
20000304:	7892      	ldrb	r2, [r2, #2]
20000306:	701a      	strb	r2, [r3, #0]
	unsigned char height = r0.height;
20000308:	2620      	movs	r6, #32
2000030a:	19bb      	adds	r3, r7, r6
2000030c:	187a      	adds	r2, r7, r1
2000030e:	78d2      	ldrb	r2, [r2, #3]
20000310:	701a      	strb	r2, [r3, #0]
	
	unsigned char x0, y0, x1, y1;
	
	LINE rlines[] = {
20000312:	210c      	movs	r1, #12
20000314:	187b      	adds	r3, r7, r1
20000316:	183a      	adds	r2, r7, r0
20000318:	7812      	ldrb	r2, [r2, #0]
2000031a:	701a      	strb	r2, [r3, #0]
2000031c:	187b      	adds	r3, r7, r1
2000031e:	193a      	adds	r2, r7, r4
20000320:	7812      	ldrb	r2, [r2, #0]
20000322:	705a      	strb	r2, [r3, #1]
		{xs, ys, xs + width, ys}, // Line 1
20000324:	183a      	adds	r2, r7, r0
20000326:	197b      	adds	r3, r7, r5
20000328:	7812      	ldrb	r2, [r2, #0]
2000032a:	781b      	ldrb	r3, [r3, #0]
2000032c:	18d3      	adds	r3, r2, r3
2000032e:	b2da      	uxtb	r2, r3
	LINE rlines[] = {
20000330:	187b      	adds	r3, r7, r1
20000332:	709a      	strb	r2, [r3, #2]
20000334:	187b      	adds	r3, r7, r1
20000336:	193a      	adds	r2, r7, r4
20000338:	7812      	ldrb	r2, [r2, #0]
2000033a:	70da      	strb	r2, [r3, #3]
2000033c:	187b      	adds	r3, r7, r1
2000033e:	183a      	adds	r2, r7, r0
20000340:	7812      	ldrb	r2, [r2, #0]
20000342:	711a      	strb	r2, [r3, #4]
20000344:	187b      	adds	r3, r7, r1
20000346:	193a      	adds	r2, r7, r4
20000348:	7812      	ldrb	r2, [r2, #0]
2000034a:	715a      	strb	r2, [r3, #5]
2000034c:	187b      	adds	r3, r7, r1
2000034e:	183a      	adds	r2, r7, r0
20000350:	7812      	ldrb	r2, [r2, #0]
20000352:	719a      	strb	r2, [r3, #6]
		{xs, ys, xs, ys + height}, // Line 2
20000354:	193a      	adds	r2, r7, r4
20000356:	19bb      	adds	r3, r7, r6
20000358:	7812      	ldrb	r2, [r2, #0]
2000035a:	781b      	ldrb	r3, [r3, #0]
2000035c:	18d3      	adds	r3, r2, r3
2000035e:	b2da      	uxtb	r2, r3
	LINE rlines[] = {
20000360:	187b      	adds	r3, r7, r1
20000362:	71da      	strb	r2, [r3, #7]
		{xs + width, ys, xs + width, ys + height}, // Line 3
20000364:	183a      	adds	r2, r7, r0
20000366:	197b      	adds	r3, r7, r5
20000368:	7812      	ldrb	r2, [r2, #0]
2000036a:	781b      	ldrb	r3, [r3, #0]
2000036c:	18d3      	adds	r3, r2, r3
2000036e:	b2da      	uxtb	r2, r3
	LINE rlines[] = {
20000370:	187b      	adds	r3, r7, r1
20000372:	721a      	strb	r2, [r3, #8]
20000374:	187b      	adds	r3, r7, r1
20000376:	193a      	adds	r2, r7, r4
20000378:	7812      	ldrb	r2, [r2, #0]
2000037a:	725a      	strb	r2, [r3, #9]
		{xs + width, ys, xs + width, ys + height}, // Line 3
2000037c:	183a      	adds	r2, r7, r0
2000037e:	197b      	adds	r3, r7, r5
20000380:	7812      	ldrb	r2, [r2, #0]
20000382:	781b      	ldrb	r3, [r3, #0]
20000384:	18d3      	adds	r3, r2, r3
20000386:	b2da      	uxtb	r2, r3
	LINE rlines[] = {
20000388:	187b      	adds	r3, r7, r1
2000038a:	729a      	strb	r2, [r3, #10]
		{xs + width, ys, xs + width, ys + height}, // Line 3
2000038c:	193a      	adds	r2, r7, r4
2000038e:	19bb      	adds	r3, r7, r6
20000390:	7812      	ldrb	r2, [r2, #0]
20000392:	781b      	ldrb	r3, [r3, #0]
20000394:	18d3      	adds	r3, r2, r3
20000396:	b2da      	uxtb	r2, r3
	LINE rlines[] = {
20000398:	187b      	adds	r3, r7, r1
2000039a:	72da      	strb	r2, [r3, #11]
		{xs + width, ys + height, xs, ys + height}, // Line 4
2000039c:	183a      	adds	r2, r7, r0
2000039e:	197b      	adds	r3, r7, r5
200003a0:	7812      	ldrb	r2, [r2, #0]
200003a2:	781b      	ldrb	r3, [r3, #0]
200003a4:	18d3      	adds	r3, r2, r3
200003a6:	b2da      	uxtb	r2, r3
	LINE rlines[] = {
200003a8:	187b      	adds	r3, r7, r1
200003aa:	731a      	strb	r2, [r3, #12]
		{xs + width, ys + height, xs, ys + height}, // Line 4
200003ac:	193a      	adds	r2, r7, r4
200003ae:	19bb      	adds	r3, r7, r6
200003b0:	7812      	ldrb	r2, [r2, #0]
200003b2:	781b      	ldrb	r3, [r3, #0]
200003b4:	18d3      	adds	r3, r2, r3
200003b6:	b2da      	uxtb	r2, r3
	LINE rlines[] = {
200003b8:	187b      	adds	r3, r7, r1
200003ba:	735a      	strb	r2, [r3, #13]
200003bc:	187b      	adds	r3, r7, r1
200003be:	183a      	adds	r2, r7, r0
200003c0:	7812      	ldrb	r2, [r2, #0]
200003c2:	739a      	strb	r2, [r3, #14]
		{xs + width, ys + height, xs, ys + height}, // Line 4
200003c4:	193a      	adds	r2, r7, r4
200003c6:	19bb      	adds	r3, r7, r6
200003c8:	7812      	ldrb	r2, [r2, #0]
200003ca:	781b      	ldrb	r3, [r3, #0]
200003cc:	18d3      	adds	r3, r2, r3
200003ce:	b2da      	uxtb	r2, r3
	LINE rlines[] = {
200003d0:	187b      	adds	r3, r7, r1
200003d2:	73da      	strb	r2, [r3, #15]
		};
		
	for(int i=0; i < sizeof(rlines) / sizeof(LINE); i++)
200003d4:	2300      	movs	r3, #0
200003d6:	627b      	str	r3, [r7, #36]	; 0x24
200003d8:	e00a      	b.n	200003f0 <draw_rectangle+0x122>
	{
		draw_line(&rlines[i]);
200003da:	230c      	movs	r3, #12
200003dc:	18fa      	adds	r2, r7, r3
200003de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200003e0:	009b      	lsls	r3, r3, #2
200003e2:	18d3      	adds	r3, r2, r3
200003e4:	0018      	movs	r0, r3
200003e6:	f7ff fe88 	bl	200000fa <draw_line>
	for(int i=0; i < sizeof(rlines) / sizeof(LINE); i++)
200003ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200003ec:	3301      	adds	r3, #1
200003ee:	627b      	str	r3, [r7, #36]	; 0x24
200003f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200003f2:	2b03      	cmp	r3, #3
200003f4:	d9f1      	bls.n	200003da <draw_rectangle+0x10c>
	}
}
200003f6:	46c0      	nop			; (mov r8, r8)
200003f8:	46c0      	nop			; (mov r8, r8)
200003fa:	46bd      	mov	sp, r7
200003fc:	b00b      	add	sp, #44	; 0x2c
200003fe:	bdf0      	pop	{r4, r5, r6, r7, pc}

20000400 <draw_polygon>:

void draw_polygon(PPOLY p){
20000400:	b5f0      	push	{r4, r5, r6, r7, lr}
20000402:	b089      	sub	sp, #36	; 0x24
20000404:	af00      	add	r7, sp, #0
20000406:	6078      	str	r0, [r7, #4]
	POLY p0 = *p;
20000408:	2114      	movs	r1, #20
2000040a:	187b      	adds	r3, r7, r1
2000040c:	687a      	ldr	r2, [r7, #4]
2000040e:	ca11      	ldmia	r2!, {r0, r4}
20000410:	c311      	stmia	r3!, {r0, r4}
	unsigned char x0 = p0.x;
20000412:	231f      	movs	r3, #31
20000414:	18fb      	adds	r3, r7, r3
20000416:	187a      	adds	r2, r7, r1
20000418:	7812      	ldrb	r2, [r2, #0]
2000041a:	701a      	strb	r2, [r3, #0]
	unsigned char y0 = p0.y;
2000041c:	231e      	movs	r3, #30
2000041e:	18fb      	adds	r3, r7, r3
20000420:	187a      	adds	r2, r7, r1
20000422:	7852      	ldrb	r2, [r2, #1]
20000424:	701a      	strb	r2, [r3, #0]
	POLY pnext = *p0.next;
20000426:	187b      	adds	r3, r7, r1
20000428:	685a      	ldr	r2, [r3, #4]
2000042a:	230c      	movs	r3, #12
2000042c:	18fb      	adds	r3, r7, r3
2000042e:	ca03      	ldmia	r2!, {r0, r1}
20000430:	c303      	stmia	r3!, {r0, r1}
	
	while(1){
		unsigned char x1 = pnext.x;
20000432:	201d      	movs	r0, #29
20000434:	183b      	adds	r3, r7, r0
20000436:	240c      	movs	r4, #12
20000438:	193a      	adds	r2, r7, r4
2000043a:	7812      	ldrb	r2, [r2, #0]
2000043c:	701a      	strb	r2, [r3, #0]
		unsigned char y1 = pnext.y;
2000043e:	251c      	movs	r5, #28
20000440:	197b      	adds	r3, r7, r5
20000442:	193a      	adds	r2, r7, r4
20000444:	7852      	ldrb	r2, [r2, #1]
20000446:	701a      	strb	r2, [r3, #0]
		LINE l = {x0, y0, x1, y1};
20000448:	2108      	movs	r1, #8
2000044a:	187b      	adds	r3, r7, r1
2000044c:	261f      	movs	r6, #31
2000044e:	19ba      	adds	r2, r7, r6
20000450:	7812      	ldrb	r2, [r2, #0]
20000452:	701a      	strb	r2, [r3, #0]
20000454:	187b      	adds	r3, r7, r1
20000456:	221e      	movs	r2, #30
20000458:	18ba      	adds	r2, r7, r2
2000045a:	7812      	ldrb	r2, [r2, #0]
2000045c:	705a      	strb	r2, [r3, #1]
2000045e:	187b      	adds	r3, r7, r1
20000460:	183a      	adds	r2, r7, r0
20000462:	7812      	ldrb	r2, [r2, #0]
20000464:	709a      	strb	r2, [r3, #2]
20000466:	187b      	adds	r3, r7, r1
20000468:	197a      	adds	r2, r7, r5
2000046a:	7812      	ldrb	r2, [r2, #0]
2000046c:	70da      	strb	r2, [r3, #3]
		draw_line(&l);
2000046e:	187b      	adds	r3, r7, r1
20000470:	0018      	movs	r0, r3
20000472:	f7ff fe42 	bl	200000fa <draw_line>
		x0 = pnext.x;
20000476:	19bb      	adds	r3, r7, r6
20000478:	193a      	adds	r2, r7, r4
2000047a:	7812      	ldrb	r2, [r2, #0]
2000047c:	701a      	strb	r2, [r3, #0]
		y0 = pnext.y;
2000047e:	221e      	movs	r2, #30
20000480:	18bb      	adds	r3, r7, r2
20000482:	193a      	adds	r2, r7, r4
20000484:	7852      	ldrb	r2, [r2, #1]
20000486:	701a      	strb	r2, [r3, #0]
		
		if(pnext.next == 0){
20000488:	193b      	adds	r3, r7, r4
2000048a:	685b      	ldr	r3, [r3, #4]
2000048c:	2b00      	cmp	r3, #0
2000048e:	d005      	beq.n	2000049c <draw_polygon+0x9c>
			break;
		}
		pnext = *pnext.next;
20000490:	193b      	adds	r3, r7, r4
20000492:	685a      	ldr	r2, [r3, #4]
20000494:	193b      	adds	r3, r7, r4
20000496:	ca03      	ldmia	r2!, {r0, r1}
20000498:	c303      	stmia	r3!, {r0, r1}
	while(1){
2000049a:	e7ca      	b.n	20000432 <draw_polygon+0x32>
	}
}
2000049c:	46c0      	nop			; (mov r8, r8)
2000049e:	46bd      	mov	sp, r7
200004a0:	b009      	add	sp, #36	; 0x24
200004a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

200004a4 <draw_ballobject>:

void draw_ballobject(POBJECT o){
200004a4:	b580      	push	{r7, lr}
200004a6:	b084      	sub	sp, #16
200004a8:	af00      	add	r7, sp, #0
200004aa:	6078      	str	r0, [r7, #4]
	
	// Draw each pixel in the GEOMETRY px list
	for(int i = 0; i < (*o).geo.numpoints; i++)
200004ac:	2300      	movs	r3, #0
200004ae:	60fb      	str	r3, [r7, #12]
200004b0:	e014      	b.n	200004dc <draw_ballobject+0x38>
		graphic_pixel_set((*o).geo.px[i].x, (*o).geo.px[i].y);
200004b2:	687a      	ldr	r2, [r7, #4]
200004b4:	68fb      	ldr	r3, [r7, #12]
200004b6:	3304      	adds	r3, #4
200004b8:	005b      	lsls	r3, r3, #1
200004ba:	18d3      	adds	r3, r2, r3
200004bc:	3304      	adds	r3, #4
200004be:	781b      	ldrb	r3, [r3, #0]
200004c0:	0018      	movs	r0, r3
200004c2:	687a      	ldr	r2, [r7, #4]
200004c4:	68fb      	ldr	r3, [r7, #12]
200004c6:	3304      	adds	r3, #4
200004c8:	005b      	lsls	r3, r3, #1
200004ca:	18d3      	adds	r3, r2, r3
200004cc:	3305      	adds	r3, #5
200004ce:	781b      	ldrb	r3, [r3, #0]
200004d0:	0019      	movs	r1, r3
200004d2:	f000 f8b6 	bl	20000642 <graphic_pixel_set>
	for(int i = 0; i < (*o).geo.numpoints; i++)
200004d6:	68fb      	ldr	r3, [r7, #12]
200004d8:	3301      	adds	r3, #1
200004da:	60fb      	str	r3, [r7, #12]
200004dc:	687b      	ldr	r3, [r7, #4]
200004de:	681b      	ldr	r3, [r3, #0]
200004e0:	68fa      	ldr	r2, [r7, #12]
200004e2:	429a      	cmp	r2, r3
200004e4:	dbe5      	blt.n	200004b2 <draw_ballobject+0xe>
}
200004e6:	46c0      	nop			; (mov r8, r8)
200004e8:	46c0      	nop			; (mov r8, r8)
200004ea:	46bd      	mov	sp, r7
200004ec:	b004      	add	sp, #16
200004ee:	bd80      	pop	{r7, pc}

200004f0 <clear_ballobject>:

void clear_ballobject(POBJECT o){
200004f0:	b580      	push	{r7, lr}
200004f2:	b084      	sub	sp, #16
200004f4:	af00      	add	r7, sp, #0
200004f6:	6078      	str	r0, [r7, #4]
	
	// Draw each pixel in the GEOMETRY px list
	for(int i = 0; i < (*o).geo.numpoints; i++)
200004f8:	2300      	movs	r3, #0
200004fa:	60fb      	str	r3, [r7, #12]
200004fc:	e014      	b.n	20000528 <clear_ballobject+0x38>
		graphic_pixel_clear((*o).geo.px[i].x, (*o).geo.px[i].y);
200004fe:	687a      	ldr	r2, [r7, #4]
20000500:	68fb      	ldr	r3, [r7, #12]
20000502:	3304      	adds	r3, #4
20000504:	005b      	lsls	r3, r3, #1
20000506:	18d3      	adds	r3, r2, r3
20000508:	3304      	adds	r3, #4
2000050a:	781b      	ldrb	r3, [r3, #0]
2000050c:	0018      	movs	r0, r3
2000050e:	687a      	ldr	r2, [r7, #4]
20000510:	68fb      	ldr	r3, [r7, #12]
20000512:	3304      	adds	r3, #4
20000514:	005b      	lsls	r3, r3, #1
20000516:	18d3      	adds	r3, r2, r3
20000518:	3305      	adds	r3, #5
2000051a:	781b      	ldrb	r3, [r3, #0]
2000051c:	0019      	movs	r1, r3
2000051e:	f000 f893 	bl	20000648 <graphic_pixel_clear>
	for(int i = 0; i < (*o).geo.numpoints; i++)
20000522:	68fb      	ldr	r3, [r7, #12]
20000524:	3301      	adds	r3, #1
20000526:	60fb      	str	r3, [r7, #12]
20000528:	687b      	ldr	r3, [r7, #4]
2000052a:	681b      	ldr	r3, [r3, #0]
2000052c:	68fa      	ldr	r2, [r7, #12]
2000052e:	429a      	cmp	r2, r3
20000530:	dbe5      	blt.n	200004fe <clear_ballobject+0xe>
}
20000532:	46c0      	nop			; (mov r8, r8)
20000534:	46c0      	nop			; (mov r8, r8)
20000536:	46bd      	mov	sp, r7
20000538:	b004      	add	sp, #16
2000053a:	bd80      	pop	{r7, pc}

2000053c <move_ballobject>:

void move_ballobject(POBJECT o){
2000053c:	b580      	push	{r7, lr}
2000053e:	b084      	sub	sp, #16
20000540:	af00      	add	r7, sp, #0
20000542:	6078      	str	r0, [r7, #4]
	(*o).posx = 0;
20000544:	687b      	ldr	r3, [r7, #4]
20000546:	2200      	movs	r2, #0
20000548:	649a      	str	r2, [r3, #72]	; 0x48
	(*o).posy = 0;
2000054a:	687b      	ldr	r3, [r7, #4]
2000054c:	2200      	movs	r2, #0
2000054e:	64da      	str	r2, [r3, #76]	; 0x4c
	
	(*o).dirx = 1;
20000550:	687b      	ldr	r3, [r7, #4]
20000552:	2201      	movs	r2, #1
20000554:	641a      	str	r2, [r3, #64]	; 0x40
	(*o).dirx = 1;
20000556:	687b      	ldr	r3, [r7, #4]
20000558:	2201      	movs	r2, #1
2000055a:	641a      	str	r2, [r3, #64]	; 0x40
	
	(*o).posx =(*o).posx;
2000055c:	687b      	ldr	r3, [r7, #4]
2000055e:	6c9a      	ldr	r2, [r3, #72]	; 0x48
20000560:	687b      	ldr	r3, [r7, #4]
20000562:	649a      	str	r2, [r3, #72]	; 0x48
	(*o).posy =(*o).posy + 1;
20000564:	687b      	ldr	r3, [r7, #4]
20000566:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
20000568:	1c5a      	adds	r2, r3, #1
2000056a:	687b      	ldr	r3, [r7, #4]
2000056c:	64da      	str	r2, [r3, #76]	; 0x4c
	clear_ballobject(o);
2000056e:	687b      	ldr	r3, [r7, #4]
20000570:	0018      	movs	r0, r3
20000572:	f7ff ffbd 	bl	200004f0 <clear_ballobject>
	// Bestäm ny position, addera riktningskoordinater
	for(int i = 0; i < (*o).geo.numpoints; i++){
20000576:	2300      	movs	r3, #0
20000578:	60fb      	str	r3, [r7, #12]
2000057a:	e02a      	b.n	200005d2 <move_ballobject+0x96>
		(*o).geo.px[i].x = (*o).geo.px[i].x + (*o).posx;
2000057c:	687a      	ldr	r2, [r7, #4]
2000057e:	68fb      	ldr	r3, [r7, #12]
20000580:	3304      	adds	r3, #4
20000582:	005b      	lsls	r3, r3, #1
20000584:	18d3      	adds	r3, r2, r3
20000586:	3304      	adds	r3, #4
20000588:	781a      	ldrb	r2, [r3, #0]
2000058a:	687b      	ldr	r3, [r7, #4]
2000058c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
2000058e:	b2db      	uxtb	r3, r3
20000590:	18d3      	adds	r3, r2, r3
20000592:	b2d9      	uxtb	r1, r3
20000594:	687a      	ldr	r2, [r7, #4]
20000596:	68fb      	ldr	r3, [r7, #12]
20000598:	3304      	adds	r3, #4
2000059a:	005b      	lsls	r3, r3, #1
2000059c:	18d3      	adds	r3, r2, r3
2000059e:	3304      	adds	r3, #4
200005a0:	1c0a      	adds	r2, r1, #0
200005a2:	701a      	strb	r2, [r3, #0]
		(*o).geo.px[i].y = (*o).geo.px[i].y + (*o).posy;
200005a4:	687a      	ldr	r2, [r7, #4]
200005a6:	68fb      	ldr	r3, [r7, #12]
200005a8:	3304      	adds	r3, #4
200005aa:	005b      	lsls	r3, r3, #1
200005ac:	18d3      	adds	r3, r2, r3
200005ae:	3305      	adds	r3, #5
200005b0:	781a      	ldrb	r2, [r3, #0]
200005b2:	687b      	ldr	r3, [r7, #4]
200005b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
200005b6:	b2db      	uxtb	r3, r3
200005b8:	18d3      	adds	r3, r2, r3
200005ba:	b2d9      	uxtb	r1, r3
200005bc:	687a      	ldr	r2, [r7, #4]
200005be:	68fb      	ldr	r3, [r7, #12]
200005c0:	3304      	adds	r3, #4
200005c2:	005b      	lsls	r3, r3, #1
200005c4:	18d3      	adds	r3, r2, r3
200005c6:	3305      	adds	r3, #5
200005c8:	1c0a      	adds	r2, r1, #0
200005ca:	701a      	strb	r2, [r3, #0]
	for(int i = 0; i < (*o).geo.numpoints; i++){
200005cc:	68fb      	ldr	r3, [r7, #12]
200005ce:	3301      	adds	r3, #1
200005d0:	60fb      	str	r3, [r7, #12]
200005d2:	687b      	ldr	r3, [r7, #4]
200005d4:	681b      	ldr	r3, [r3, #0]
200005d6:	68fa      	ldr	r2, [r7, #12]
200005d8:	429a      	cmp	r2, r3
200005da:	dbcf      	blt.n	2000057c <move_ballobject+0x40>
	}
	// Kolla gränserna, och ändra riktning därefter
	
	// draw ballobject
	draw_ballobject(&(*o).geo);
200005dc:	687b      	ldr	r3, [r7, #4]
200005de:	0018      	movs	r0, r3
200005e0:	f7ff ff60 	bl	200004a4 <draw_ballobject>
}
200005e4:	46c0      	nop			; (mov r8, r8)
200005e6:	46bd      	mov	sp, r7
200005e8:	b004      	add	sp, #16
200005ea:	bd80      	pop	{r7, pc}

200005ec <set_object_speed>:

void set_object_speed(POBJECT o, int speedx, int speedy){
200005ec:	b580      	push	{r7, lr}
200005ee:	b084      	sub	sp, #16
200005f0:	af00      	add	r7, sp, #0
200005f2:	60f8      	str	r0, [r7, #12]
200005f4:	60b9      	str	r1, [r7, #8]
200005f6:	607a      	str	r2, [r7, #4]
	
	
}
200005f8:	46c0      	nop			; (mov r8, r8)
200005fa:	46bd      	mov	sp, r7
200005fc:	b004      	add	sp, #16
200005fe:	bd80      	pop	{r7, pc}

20000600 <main>:
	{1,2},{1,3},{2,1},{2,2},{2,3},{2,4},{3,1},{3,2},{3,3},{3,4},{4,2},{4,3}
	}
};

void main(void)
{
20000600:	b580      	push	{r7, lr}
20000602:	af00      	add	r7, sp, #0
    app_init();
20000604:	f000 f812 	bl	2000062c <app_init>
	graphic_initalize();
20000608:	f000 f815 	bl	20000636 <graphic_initalize>
	graphic_clear_screen();
2000060c:	f000 f816 	bl	2000063c <graphic_clear_screen>
	
	
	draw_ballobject(&ball_geometry);
20000610:	4b05      	ldr	r3, [pc, #20]	; (20000628 <main+0x28>)
20000612:	0018      	movs	r0, r3
20000614:	f7ff ff46 	bl	200004a4 <draw_ballobject>
	
	while(1){
		move_ballobject(&ball_geometry);
20000618:	4b03      	ldr	r3, [pc, #12]	; (20000628 <main+0x28>)
2000061a:	0018      	movs	r0, r3
2000061c:	f7ff ff8e 	bl	2000053c <move_ballobject>
		delay_milli(100);
20000620:	2064      	movs	r0, #100	; 0x64
20000622:	f7ff fd2c 	bl	2000007e <delay_milli>
		move_ballobject(&ball_geometry);
20000626:	e7f7      	b.n	20000618 <main+0x18>
20000628:	200007c0 	andcs	r0, r0, r0, asr #15

2000062c <app_init>:
#define GPIO_E_OTYPER	((volatile unsigned char*)	(GPIO_E+5))		// Push-pull/open-drain config
#define GPIO_E_SPEEDR	((volatile unsigned int*)	(GPIO_E+0x08))	// Output speed
#define GPIO_E_PUPDR	((volatile unsigned short*)	(GPIO_E+0x0E))	// Pull-up/pull-down config

/* ---- Display functions ---- */
void app_init(void){
2000062c:	b580      	push	{r7, lr}
2000062e:	af00      	add	r7, sp, #0
}
20000630:	46c0      	nop			; (mov r8, r8)
20000632:	46bd      	mov	sp, r7
20000634:	bd80      	pop	{r7, pc}

20000636 <graphic_initalize>:

__attribute__((naked))  
void graphic_initalize(void) 
{ 
20000636:	4770dff0 			; <UNDEFINED> instruction: 0x4770dff0
	__asm volatile (" .HWORD  0xDFF0\n");
	__asm volatile (" BX LR\n"); 
}
2000063a:	46c0      	nop			; (mov r8, r8)

2000063c <graphic_clear_screen>:

__attribute__((naked))  
void graphic_clear_screen(void) 
{ 
2000063c:	4770dff1 			; <UNDEFINED> instruction: 0x4770dff1
	__asm volatile (" .HWORD  0xDFF1\n");
	__asm volatile (" BX LR\n"); 
}
20000640:	46c0      	nop			; (mov r8, r8)

20000642 <graphic_pixel_set>:

__attribute__((naked)) 
void graphic_pixel_set( int x, int y) 
{
20000642:	4770dff2 			; <UNDEFINED> instruction: 0x4770dff2
	__asm volatile (" .HWORD  0xDFF2\n"); 
	__asm volatile (" BX LR\n"); 
}
20000646:	46c0      	nop			; (mov r8, r8)

20000648 <graphic_pixel_clear>:

__attribute__((naked)) 
void graphic_pixel_clear( int x, int y) 
{ 
20000648:	4770dff3 			; <UNDEFINED> instruction: 0x4770dff3
	__asm volatile (" .HWORD  0xDFF3\n");
	__asm volatile (" BX LR\n"); 
}
2000064c:	46c0      	nop			; (mov r8, r8)
	...

20000650 <__udivsi3>:
20000650:	2200      	movs	r2, #0
20000652:	0843      	lsrs	r3, r0, #1
20000654:	428b      	cmp	r3, r1
20000656:	d374      	bcc.n	20000742 <__udivsi3+0xf2>
20000658:	0903      	lsrs	r3, r0, #4
2000065a:	428b      	cmp	r3, r1
2000065c:	d35f      	bcc.n	2000071e <__udivsi3+0xce>
2000065e:	0a03      	lsrs	r3, r0, #8
20000660:	428b      	cmp	r3, r1
20000662:	d344      	bcc.n	200006ee <__udivsi3+0x9e>
20000664:	0b03      	lsrs	r3, r0, #12
20000666:	428b      	cmp	r3, r1
20000668:	d328      	bcc.n	200006bc <__udivsi3+0x6c>
2000066a:	0c03      	lsrs	r3, r0, #16
2000066c:	428b      	cmp	r3, r1
2000066e:	d30d      	bcc.n	2000068c <__udivsi3+0x3c>
20000670:	22ff      	movs	r2, #255	; 0xff
20000672:	0209      	lsls	r1, r1, #8
20000674:	ba12      	rev	r2, r2
20000676:	0c03      	lsrs	r3, r0, #16
20000678:	428b      	cmp	r3, r1
2000067a:	d302      	bcc.n	20000682 <__udivsi3+0x32>
2000067c:	1212      	asrs	r2, r2, #8
2000067e:	0209      	lsls	r1, r1, #8
20000680:	d065      	beq.n	2000074e <__udivsi3+0xfe>
20000682:	0b03      	lsrs	r3, r0, #12
20000684:	428b      	cmp	r3, r1
20000686:	d319      	bcc.n	200006bc <__udivsi3+0x6c>
20000688:	e000      	b.n	2000068c <__udivsi3+0x3c>
2000068a:	0a09      	lsrs	r1, r1, #8
2000068c:	0bc3      	lsrs	r3, r0, #15
2000068e:	428b      	cmp	r3, r1
20000690:	d301      	bcc.n	20000696 <__udivsi3+0x46>
20000692:	03cb      	lsls	r3, r1, #15
20000694:	1ac0      	subs	r0, r0, r3
20000696:	4152      	adcs	r2, r2
20000698:	0b83      	lsrs	r3, r0, #14
2000069a:	428b      	cmp	r3, r1
2000069c:	d301      	bcc.n	200006a2 <__udivsi3+0x52>
2000069e:	038b      	lsls	r3, r1, #14
200006a0:	1ac0      	subs	r0, r0, r3
200006a2:	4152      	adcs	r2, r2
200006a4:	0b43      	lsrs	r3, r0, #13
200006a6:	428b      	cmp	r3, r1
200006a8:	d301      	bcc.n	200006ae <__udivsi3+0x5e>
200006aa:	034b      	lsls	r3, r1, #13
200006ac:	1ac0      	subs	r0, r0, r3
200006ae:	4152      	adcs	r2, r2
200006b0:	0b03      	lsrs	r3, r0, #12
200006b2:	428b      	cmp	r3, r1
200006b4:	d301      	bcc.n	200006ba <__udivsi3+0x6a>
200006b6:	030b      	lsls	r3, r1, #12
200006b8:	1ac0      	subs	r0, r0, r3
200006ba:	4152      	adcs	r2, r2
200006bc:	0ac3      	lsrs	r3, r0, #11
200006be:	428b      	cmp	r3, r1
200006c0:	d301      	bcc.n	200006c6 <__udivsi3+0x76>
200006c2:	02cb      	lsls	r3, r1, #11
200006c4:	1ac0      	subs	r0, r0, r3
200006c6:	4152      	adcs	r2, r2
200006c8:	0a83      	lsrs	r3, r0, #10
200006ca:	428b      	cmp	r3, r1
200006cc:	d301      	bcc.n	200006d2 <__udivsi3+0x82>
200006ce:	028b      	lsls	r3, r1, #10
200006d0:	1ac0      	subs	r0, r0, r3
200006d2:	4152      	adcs	r2, r2
200006d4:	0a43      	lsrs	r3, r0, #9
200006d6:	428b      	cmp	r3, r1
200006d8:	d301      	bcc.n	200006de <__udivsi3+0x8e>
200006da:	024b      	lsls	r3, r1, #9
200006dc:	1ac0      	subs	r0, r0, r3
200006de:	4152      	adcs	r2, r2
200006e0:	0a03      	lsrs	r3, r0, #8
200006e2:	428b      	cmp	r3, r1
200006e4:	d301      	bcc.n	200006ea <__udivsi3+0x9a>
200006e6:	020b      	lsls	r3, r1, #8
200006e8:	1ac0      	subs	r0, r0, r3
200006ea:	4152      	adcs	r2, r2
200006ec:	d2cd      	bcs.n	2000068a <__udivsi3+0x3a>
200006ee:	09c3      	lsrs	r3, r0, #7
200006f0:	428b      	cmp	r3, r1
200006f2:	d301      	bcc.n	200006f8 <__udivsi3+0xa8>
200006f4:	01cb      	lsls	r3, r1, #7
200006f6:	1ac0      	subs	r0, r0, r3
200006f8:	4152      	adcs	r2, r2
200006fa:	0983      	lsrs	r3, r0, #6
200006fc:	428b      	cmp	r3, r1
200006fe:	d301      	bcc.n	20000704 <__udivsi3+0xb4>
20000700:	018b      	lsls	r3, r1, #6
20000702:	1ac0      	subs	r0, r0, r3
20000704:	4152      	adcs	r2, r2
20000706:	0943      	lsrs	r3, r0, #5
20000708:	428b      	cmp	r3, r1
2000070a:	d301      	bcc.n	20000710 <__udivsi3+0xc0>
2000070c:	014b      	lsls	r3, r1, #5
2000070e:	1ac0      	subs	r0, r0, r3
20000710:	4152      	adcs	r2, r2
20000712:	0903      	lsrs	r3, r0, #4
20000714:	428b      	cmp	r3, r1
20000716:	d301      	bcc.n	2000071c <__udivsi3+0xcc>
20000718:	010b      	lsls	r3, r1, #4
2000071a:	1ac0      	subs	r0, r0, r3
2000071c:	4152      	adcs	r2, r2
2000071e:	08c3      	lsrs	r3, r0, #3
20000720:	428b      	cmp	r3, r1
20000722:	d301      	bcc.n	20000728 <__udivsi3+0xd8>
20000724:	00cb      	lsls	r3, r1, #3
20000726:	1ac0      	subs	r0, r0, r3
20000728:	4152      	adcs	r2, r2
2000072a:	0883      	lsrs	r3, r0, #2
2000072c:	428b      	cmp	r3, r1
2000072e:	d301      	bcc.n	20000734 <__udivsi3+0xe4>
20000730:	008b      	lsls	r3, r1, #2
20000732:	1ac0      	subs	r0, r0, r3
20000734:	4152      	adcs	r2, r2
20000736:	0843      	lsrs	r3, r0, #1
20000738:	428b      	cmp	r3, r1
2000073a:	d301      	bcc.n	20000740 <__udivsi3+0xf0>
2000073c:	004b      	lsls	r3, r1, #1
2000073e:	1ac0      	subs	r0, r0, r3
20000740:	4152      	adcs	r2, r2
20000742:	1a41      	subs	r1, r0, r1
20000744:	d200      	bcs.n	20000748 <__udivsi3+0xf8>
20000746:	4601      	mov	r1, r0
20000748:	4152      	adcs	r2, r2
2000074a:	4610      	mov	r0, r2
2000074c:	4770      	bx	lr
2000074e:	e7ff      	b.n	20000750 <__udivsi3+0x100>
20000750:	b501      	push	{r0, lr}
20000752:	2000      	movs	r0, #0
20000754:	f000 f806 	bl	20000764 <__aeabi_idiv0>
20000758:	bd02      	pop	{r1, pc}
2000075a:	46c0      	nop			; (mov r8, r8)

2000075c <__aeabi_uidivmod>:
2000075c:	2900      	cmp	r1, #0
2000075e:	d0f7      	beq.n	20000750 <__udivsi3+0x100>
20000760:	e776      	b.n	20000650 <__udivsi3>
20000762:	4770      	bx	lr

20000764 <__aeabi_idiv0>:
20000764:	4770      	bx	lr
20000766:	46c0      	nop			; (mov r8, r8)

20000768 <memcpy>:
20000768:	2300      	movs	r3, #0
2000076a:	b510      	push	{r4, lr}
2000076c:	429a      	cmp	r2, r3
2000076e:	d100      	bne.n	20000772 <memcpy+0xa>
20000770:	bd10      	pop	{r4, pc}
20000772:	5ccc      	ldrb	r4, [r1, r3]
20000774:	54c4      	strb	r4, [r0, r3]
20000776:	3301      	adds	r3, #1
20000778:	e7f8      	b.n	2000076c <memcpy+0x4>
	...

2000077c <lines>:
2000077c:	0a640a28 	beq	21903024 <ball_geometry+0x1902864>
20000780:	14640a28 	strbtne	r0, [r4], #-2600	; 0xfffff5d8
20000784:	1e640a28 	vmulne.f32	s1, s8, s17
20000788:	28640a28 	stmdacs	r4!, {r3, r5, r9, fp}^
2000078c:	32640a28 	rsbcc	r0, r4, #40, 20	; 0x28000
20000790:	3c640a28 			; <UNDEFINED> instruction: 0x3c640a28
20000794:	3c5a0a28 	mrrccc	10, 2, r0, sl, cr8
20000798:	3c500a28 	mrrccc	10, 2, r0, r0, cr8	; <UNPREDICTABLE>
2000079c:	3c460a28 	mcrrcc	10, 2, r0, r6, cr8
200007a0:	3c3c0a28 			; <UNDEFINED> instruction: 0x3c3c0a28
200007a4:	3c320a28 			; <UNDEFINED> instruction: 0x3c320a28
200007a8:	3c280a28 			; <UNDEFINED> instruction: 0x3c280a28

200007ac <rectangles>:
200007ac:	0a140a0a 	beq	20502fdc <ball_geometry+0x50281c>
200007b0:	140a1919 	strne	r1, [sl], #-2329	; 0xfffff6e7
200007b4:	14461e28 	strbne	r1, [r6], #-3624	; 0xfffff1d8
200007b8:	0a0a233c 	beq	202894b0 <ball_geometry+0x288cf0>
200007bc:	05050a46 	streq	r0, [r5, #-2630]	; 0xfffff5ba

200007c0 <ball_geometry>:
200007c0:	0000000c 	andeq	r0, r0, ip
200007c4:	00000004 	andeq	r0, r0, r4
200007c8:	00000004 	andeq	r0, r0, r4
200007cc:	03010201 	movweq	r0, #4609	; 0x1201
200007d0:	02020102 	andeq	r0, r2, #-2147483648	; 0x80000000
200007d4:	04020302 	streq	r0, [r2], #-770	; 0xfffffcfe
200007d8:	02030103 	andeq	r0, r3, #-1073741824	; 0xc0000000
200007dc:	04030303 	streq	r0, [r3], #-771	; 0xfffffcfd
200007e0:	03040204 	movweq	r0, #16900	; 0x4204
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	000000b3 	strheq	r0, [r0], -r3
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000000 	andeq	r0, r0, r0
      10:	00007c0c 	andeq	r7, r0, ip, lsl #24
      14:	0000ca00 	andeq	ip, r0, r0, lsl #20
      18:	00001000 	andeq	r1, r0, r0
      1c:	0000b220 	andeq	fp, r0, r0, lsr #4
      20:	00000000 	andeq	r0, r0, r0
      24:	00be0200 	adcseq	r0, lr, r0, lsl #4
      28:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
      2c:	00007e06 	andeq	r7, r0, r6, lsl #28
      30:	00004420 	andeq	r4, r0, r0, lsr #8
      34:	619c0100 	orrsvs	r0, ip, r0, lsl #2
      38:	03000000 	movweq	r0, #0
      3c:	0100736d 	tsteq	r0, sp, ror #6
      40:	00611f1e 	rsbeq	r1, r1, lr, lsl pc
      44:	91020000 	mrsls	r0, (UNDEF: 2)
      48:	009a046c 	addseq	r0, sl, ip, ror #8
      4c:	001e2000 	andseq	r2, lr, r0
      50:	69050000 	stmdbvs	r5, {}	; <UNPREDICTABLE>
      54:	13230100 			; <UNDEFINED> instruction: 0x13230100
      58:	00000061 	andeq	r0, r0, r1, rrx
      5c:	00749102 	rsbseq	r9, r4, r2, lsl #2
      60:	07040600 	streq	r0, [r4, -r0, lsl #12]
      64:	00000170 	andeq	r0, r0, r0, ror r1
      68:	0000b202 	andeq	fp, r0, r2, lsl #4
      6c:	06150100 	ldreq	r0, [r5], -r0, lsl #2
      70:	20000048 	andcs	r0, r0, r8, asr #32
      74:	00000036 	andeq	r0, r0, r6, lsr r0
      78:	00a49c01 	adceq	r9, r4, r1, lsl #24
      7c:	75030000 	strvc	r0, [r3, #-0]
      80:	15010073 	strne	r0, [r1, #-115]	; 0xffffff8d
      84:	0000611f 	andeq	r6, r0, pc, lsl r1
      88:	6c910200 	lfmvs	f0, 4, [r1], {0}
      8c:	00005004 	andeq	r5, r0, r4
      90:	00002420 	andeq	r2, r0, r0, lsr #8
      94:	00690500 	rsbeq	r0, r9, r0, lsl #10
      98:	61131601 	tstvs	r3, r1, lsl #12
      9c:	02000000 	andeq	r0, r0, #0
      a0:	00007491 	muleq	r0, r1, r4
      a4:	0000f807 	andeq	pc, r0, r7, lsl #16
      a8:	06090100 	streq	r0, [r9], -r0, lsl #2
      ac:	20000010 	andcs	r0, r0, r0, lsl r0
      b0:	00000038 	andeq	r0, r0, r8, lsr r0
      b4:	4f009c01 	svcmi	0x00009c01
      b8:	0400000f 	streq	r0, [r0], #-15
      bc:	00008000 	andeq	r8, r0, r0
      c0:	00010400 	andeq	r0, r1, r0, lsl #8
      c4:	0c000000 	stceq	0, cr0, [r0], {-0}
      c8:	00000563 	andeq	r0, r0, r3, ror #10
      cc:	000000ca 	andeq	r0, r0, sl, asr #1
	...
      d8:	000000dd 	ldrdeq	r0, [r0], -sp
      dc:	49060102 	stmdbmi	r6, {r1, r8}
      e0:	02000004 	andeq	r0, r0, #4
      e4:	04470801 	strbeq	r0, [r7], #-2049	; 0xfffff7ff
      e8:	02020000 	andeq	r0, r2, #0
      ec:	00047405 	andeq	r7, r4, r5, lsl #8
      f0:	07020200 	streq	r0, [r2, -r0, lsl #4]
      f4:	0000031f 	andeq	r0, r0, pc, lsl r3
      f8:	d3050402 	movwle	r0, #21506	; 0x5402
      fc:	02000001 	andeq	r0, r0, #1
     100:	016b0704 	cmneq	fp, r4, lsl #14
     104:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     108:	0001ce05 	andeq	ip, r1, r5, lsl #28
     10c:	07080200 	streq	r0, [r8, -r0, lsl #4]
     110:	00000166 	andeq	r0, r0, r6, ror #2
     114:	69050403 	stmdbvs	r5, {r0, r1, sl}
     118:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
     11c:	01700704 	cmneq	r0, r4, lsl #14
     120:	04040000 	streq	r0, [r4], #-0
     124:	00037005 	andeq	r7, r3, r5
     128:	19220200 	stmdbne	r2!, {r9}
     12c:	00000079 	andeq	r0, r0, r9, ror r0
     130:	007f0406 	rsbseq	r0, pc, r6, lsl #8
     134:	30070000 	andcc	r0, r7, r0
     138:	05000005 	streq	r0, [r0, #-5]
     13c:	000003f3 	strdeq	r0, [r0], -r3
     140:	410e2c03 	tstmi	lr, r3, lsl #24
     144:	05000000 	streq	r0, [r0, #-0]
     148:	0000054c 	andeq	r0, r0, ip, asr #10
     14c:	410e7203 	tstmi	lr, r3, lsl #4
     150:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     154:	00000378 	andeq	r0, r0, r8, ror r3
     158:	17015e04 	strne	r5, [r1, -r4, lsl #28]
     15c:	00000064 	andeq	r0, r0, r4, rrx
     160:	a6030409 	strge	r0, [r3], -r9, lsl #8
     164:	0000cb03 	andeq	ip, r0, r3, lsl #22
     168:	036a0a00 	cmneq	sl, #0, 20
     16c:	a8030000 	stmdage	r3, {}	; <UNPREDICTABLE>
     170:	00009c0c 	andeq	r9, r0, ip, lsl #24
     174:	02e60a00 	rsceq	r0, r6, #0, 20
     178:	a9030000 	stmdbge	r3, {}	; <UNPREDICTABLE>
     17c:	0000cb13 	andeq	ip, r0, r3, lsl fp
     180:	2c0b0000 	stccs	0, cr0, [fp], {-0}
     184:	db000000 	blle	18c <startup-0x1ffffe74>
     188:	0c000000 	stceq	0, cr0, [r0], {-0}
     18c:	00000064 	andeq	r0, r0, r4, rrx
     190:	080d0003 	stmdaeq	sp, {r0, r1}
     194:	ff09a303 			; <UNDEFINED> instruction: 0xff09a303
     198:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     19c:	00000528 	andeq	r0, r0, r8, lsr #10
     1a0:	5d07a503 	cfstr32pl	mvfx10, [r7, #-12]
     1a4:	00000000 	andeq	r0, r0, r0
     1a8:	0005370e 	andeq	r3, r5, lr, lsl #14
     1ac:	05aa0300 	streq	r0, [sl, #768]!	; 0x300
     1b0:	000000a9 	andeq	r0, r0, r9, lsr #1
     1b4:	9c050004 	stcls	0, cr0, [r5], {4}
     1b8:	03000004 	movweq	r0, #4
     1bc:	00db03ab 	sbcseq	r0, fp, fp, lsr #7
     1c0:	a9050000 	stmdbge	r5, {}	; <UNPREDICTABLE>
     1c4:	03000002 	movweq	r0, #2
     1c8:	006d1baf 	rsbeq	r1, sp, pc, lsr #23
     1cc:	ce050000 	cdpgt	0, 0, cr0, cr5, cr0, {0}
     1d0:	05000005 	streq	r0, [r0, #-5]
     1d4:	00481916 	subeq	r1, r8, r6, lsl r9
     1d8:	ba0f0000 	blt	3c01e0 <startup-0x1fc3fe20>
     1dc:	18000002 	stmdane	r0, {r1}
     1e0:	7d082f05 	stcvc	15, cr2, [r8, #-20]	; 0xffffffec
     1e4:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     1e8:	000004bd 			; <UNDEFINED> instruction: 0x000004bd
     1ec:	7d133105 	ldfvcs	f3, [r3, #-20]	; 0xffffffec
     1f0:	00000001 	andeq	r0, r0, r1
     1f4:	006b5f10 	rsbeq	r5, fp, r0, lsl pc
     1f8:	5d073205 	sfmpl	f3, 4, [r7, #-20]	; 0xffffffec
     1fc:	04000000 	streq	r0, [r0], #-0
     200:	0005130e 	andeq	r1, r5, lr, lsl #6
     204:	0b320500 	bleq	c8160c <startup-0x1f37e9f4>
     208:	0000005d 	andeq	r0, r0, sp, asr r0
     20c:	02a30e08 	adceq	r0, r3, #8, 28	; 0x80
     210:	32050000 	andcc	r0, r5, #0
     214:	00005d14 	andeq	r5, r0, r4, lsl sp
     218:	080e0c00 	stmdaeq	lr, {sl, fp}
     21c:	05000006 	streq	r0, [r0, #-6]
     220:	005d1b32 	subseq	r1, sp, r2, lsr fp
     224:	10100000 	andsne	r0, r0, r0
     228:	0500785f 	streq	r7, [r0, #-2143]	; 0xfffff7a1
     22c:	01830b33 	orreq	r0, r3, r3, lsr fp
     230:	00140000 	andseq	r0, r4, r0
     234:	01230406 			; <UNDEFINED> instruction: 0x01230406
     238:	170b0000 	strne	r0, [fp, -r0]
     23c:	93000001 	movwls	r0, #1
     240:	0c000001 	stceq	0, cr0, [r0], {1}
     244:	00000064 	andeq	r0, r0, r4, rrx
     248:	e10f0000 	mrs	r0, CPSR
     24c:	24000002 	strcs	r0, [r0], #-2
     250:	16083705 	strne	r3, [r8], -r5, lsl #14
     254:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
     258:	000001c5 	andeq	r0, r0, r5, asr #3
     25c:	5d093905 	vstrpl.16	s6, [r9, #-10]	; <UNPREDICTABLE>
     260:	00000000 	andeq	r0, r0, r0
     264:	00066f0e 	andeq	r6, r6, lr, lsl #30
     268:	093a0500 	ldmdbeq	sl!, {r8, sl}
     26c:	0000005d 	andeq	r0, r0, sp, asr r0
     270:	01ff0e04 	mvnseq	r0, r4, lsl #28
     274:	3b050000 	blcc	14027c <startup-0x1febfd84>
     278:	00005d09 	andeq	r5, r0, r9, lsl #26
     27c:	b50e0800 	strlt	r0, [lr, #-2048]	; 0xfffff800
     280:	05000006 	streq	r0, [r0, #-6]
     284:	005d093c 	subseq	r0, sp, ip, lsr r9
     288:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
     28c:	000003d7 	ldrdeq	r0, [r0], -r7
     290:	5d093d05 	stcpl	13, cr3, [r9, #-20]	; 0xffffffec
     294:	10000000 	andne	r0, r0, r0
     298:	0003990e 	andeq	r9, r3, lr, lsl #18
     29c:	093e0500 	ldmdbeq	lr!, {r8, sl}
     2a0:	0000005d 	andeq	r0, r0, sp, asr r0
     2a4:	060d0e14 			; <UNDEFINED> instruction: 0x060d0e14
     2a8:	3f050000 	svccc	0x00050000
     2ac:	00005d09 	andeq	r5, r0, r9, lsl #26
     2b0:	7e0e1800 	cdpvc	8, 0, cr1, cr14, cr0, {0}
     2b4:	05000004 	streq	r0, [r0, #-4]
     2b8:	005d0940 	subseq	r0, sp, r0, asr #18
     2bc:	0e1c0000 	cdpeq	0, 1, cr0, cr12, cr0, {0}
     2c0:	0000064f 	andeq	r0, r0, pc, asr #12
     2c4:	5d094105 	stfpls	f4, [r9, #-20]	; 0xffffffec
     2c8:	20000000 	andcs	r0, r0, r0
     2cc:	020e1100 	andeq	r1, lr, #0, 2
     2d0:	01080000 	mrseq	r0, (UNDEF: 8)
     2d4:	5b084a05 	blpl	212af0 <startup-0x1fded510>
     2d8:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
     2dc:	00000286 	andeq	r0, r0, r6, lsl #5
     2e0:	5b0a4b05 	blpl	292efc <startup-0x1fd6d104>
     2e4:	00000002 	andeq	r0, r0, r2
     2e8:	0001040e 	andeq	r0, r1, lr, lsl #8
     2ec:	094c0500 	stmdbeq	ip, {r8, sl}^
     2f0:	0000025b 	andeq	r0, r0, fp, asr r2
     2f4:	05b41280 	ldreq	r1, [r4, #640]!	; 0x280
     2f8:	4e050000 	cdpmi	0, 0, cr0, cr5, cr0, {0}
     2fc:	0001170a 	andeq	r1, r1, sl, lsl #14
     300:	12010000 	andne	r0, r1, #0
     304:	00000239 	andeq	r0, r0, r9, lsr r2
     308:	170a5105 	strne	r5, [sl, -r5, lsl #2]
     30c:	04000001 	streq	r0, [r0], #-1
     310:	6b0b0001 	blvs	2c031c <startup-0x1fd3fce4>
     314:	6b000000 	blvs	31c <startup-0x1ffffce4>
     318:	0c000002 	stceq	0, cr0, [r0], {2}
     31c:	00000064 	andeq	r0, r0, r4, rrx
     320:	e011001f 	ands	r0, r1, pc, lsl r0
     324:	90000003 	andls	r0, r0, r3
     328:	085d0501 	ldmdaeq	sp, {r0, r8, sl}^
     32c:	000002ae 	andeq	r0, r0, lr, lsr #5
     330:	0004bd0e 	andeq	fp, r4, lr, lsl #26
     334:	125e0500 	subsne	r0, lr, #0, 10
     338:	000002ae 	andeq	r0, r0, lr, lsr #5
     33c:	04e30e00 	strbteq	r0, [r3], #3584	; 0xe00
     340:	5f050000 	svcpl	0x00050000
     344:	00005d06 	andeq	r5, r0, r6, lsl #26
     348:	9e0e0400 	cfcpysls	mvf0, mvf14
     34c:	05000002 	streq	r0, [r0, #-2]
     350:	02b40961 	adcseq	r0, r4, #1589248	; 0x184000
     354:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
     358:	0000020e 	andeq	r0, r0, lr, lsl #4
     35c:	161e6205 	ldrne	r6, [lr], -r5, lsl #4
     360:	88000002 	stmdahi	r0, {r1}
     364:	6b040600 	blvs	101b6c <startup-0x1fefe494>
     368:	0b000002 	bleq	378 <startup-0x1ffffc88>
     36c:	000002c4 	andeq	r0, r0, r4, asr #5
     370:	000002c4 	andeq	r0, r0, r4, asr #5
     374:	0000640c 	andeq	r6, r0, ip, lsl #8
     378:	06001f00 	streq	r1, [r0], -r0, lsl #30
     37c:	0002ca04 	andeq	ip, r2, r4, lsl #20
     380:	880f1300 	stmdahi	pc, {r8, r9, ip}	; <UNPREDICTABLE>
     384:	08000004 	stmdaeq	r0, {r2}
     388:	f3087505 	vrshl.u8	d7, d5, d8
     38c:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
     390:	000001f9 	strdeq	r0, [r0], -r9
     394:	f3117605 	vmax.u16	d7, d1, d5
     398:	00000002 	andeq	r0, r0, r2
     39c:	0001100e 	andeq	r1, r1, lr
     3a0:	06770500 	ldrbteq	r0, [r7], -r0, lsl #10
     3a4:	0000005d 	andeq	r0, r0, sp, asr r0
     3a8:	04060004 	streq	r0, [r6], #-4
     3ac:	0000002c 	andeq	r0, r0, ip, lsr #32
     3b0:	0004a70f 	andeq	sl, r4, pc, lsl #14
     3b4:	b5056800 	strlt	r6, [r5, #-2048]	; 0xfffff800
     3b8:	00043c08 	andeq	r3, r4, r8, lsl #24
     3bc:	705f1000 	subsvc	r1, pc, r0
     3c0:	12b60500 	adcsne	r0, r6, #0, 10
     3c4:	000002f3 	strdeq	r0, [r0], -r3
     3c8:	725f1000 	subsvc	r1, pc, #0
     3cc:	07b70500 	ldreq	r0, [r7, r0, lsl #10]!
     3d0:	0000005d 	andeq	r0, r0, sp, asr r0
     3d4:	775f1004 	ldrbvc	r1, [pc, -r4]
     3d8:	07b80500 	ldreq	r0, [r8, r0, lsl #10]!
     3dc:	0000005d 	andeq	r0, r0, sp, asr r0
     3e0:	02320e08 	eorseq	r0, r2, #8, 28	; 0x80
     3e4:	b9050000 	stmdblt	r5, {}	; <UNPREDICTABLE>
     3e8:	00003309 	andeq	r3, r0, r9, lsl #6
     3ec:	040e0c00 	streq	r0, [lr], #-3072	; 0xfffff400
     3f0:	05000003 	streq	r0, [r0, #-3]
     3f4:	003309ba 	ldrhteq	r0, [r3], -sl
     3f8:	100e0000 	andne	r0, lr, r0
     3fc:	0066625f 	rsbeq	r6, r6, pc, asr r2
     400:	cb11bb05 	blgt	46f01c <startup-0x1fb90fe4>
     404:	10000002 	andne	r0, r0, r2
     408:	0001870e 	andeq	r8, r1, lr, lsl #14
     40c:	07bc0500 	ldreq	r0, [ip, r0, lsl #10]!
     410:	0000005d 	andeq	r0, r0, sp, asr r0
     414:	021c0e18 	andseq	r0, ip, #24, 28	; 0x180
     418:	c3050000 	movwgt	r0, #20480	; 0x5000
     41c:	00006b0a 	andeq	r6, r0, sl, lsl #22
     420:	d10e1c00 	tstle	lr, r0, lsl #24
     424:	05000002 	streq	r0, [r0, #-2]
     428:	05c01dc5 	strbeq	r1, [r0, #3525]	; 0xdc5
     42c:	0e200000 	cdpeq	0, 2, cr0, cr0, cr0, {0}
     430:	00000392 	muleq	r0, r2, r3
     434:	ea1dc705 	b	772050 <startup-0x1f88dfb0>
     438:	24000005 	strcs	r0, [r0], #-5
     43c:	00053f0e 	andeq	r3, r5, lr, lsl #30
     440:	0dca0500 	cfstr64eq	mvdx0, [sl]
     444:	0000060e 	andeq	r0, r0, lr, lsl #12
     448:	05450e28 	strbeq	r0, [r5, #-3624]	; 0xfffff1d8
     44c:	cb050000 	blgt	140454 <startup-0x1febfbac>
     450:	00062809 	andeq	r2, r6, r9, lsl #16
     454:	5f102c00 	svcpl	0x00102c00
     458:	05006275 	streq	r6, [r0, #-629]	; 0xfffffd8b
     45c:	02cb11ce 	sbceq	r1, fp, #-2147483597	; 0x80000033
     460:	10300000 	eorsne	r0, r0, r0
     464:	0070755f 	rsbseq	r7, r0, pc, asr r5
     468:	f312cf05 	vpmax.f16	d12, d2, d5
     46c:	38000002 	stmdacc	r0, {r1}
     470:	72755f10 	rsbsvc	r5, r5, #16, 30	; 0x40
     474:	07d00500 	ldrbeq	r0, [r0, r0, lsl #10]
     478:	0000005d 	andeq	r0, r0, sp, asr r0
     47c:	01e60e3c 	mvneq	r0, ip, lsr lr
     480:	d3050000 	movwle	r0, #20480	; 0x5000
     484:	00062e11 	andeq	r2, r6, r1, lsl lr
     488:	3c0e4000 	stccc	0, cr4, [lr], {-0}
     48c:	05000006 	streq	r0, [r0, #-6]
     490:	063e11d4 			; <UNDEFINED> instruction: 0x063e11d4
     494:	10430000 	subne	r0, r3, r0
     498:	00626c5f 	rsbeq	r6, r2, pc, asr ip
     49c:	cb11d705 	blgt	4760b8 <startup-0x1fb89f48>
     4a0:	44000002 	strmi	r0, [r0], #-2
     4a4:	0002480e 	andeq	r4, r2, lr, lsl #16
     4a8:	07da0500 	ldrbeq	r0, [sl, r0, lsl #10]
     4ac:	0000005d 	andeq	r0, r0, sp, asr r0
     4b0:	02590e4c 	subseq	r0, r9, #76, 28	; 0x4c0
     4b4:	db050000 	blle	1404bc <startup-0x1febfb44>
     4b8:	0000840a 	andeq	r8, r0, sl, lsl #8
     4bc:	400e5000 	andmi	r5, lr, r0
     4c0:	05000001 	streq	r0, [r0, #-1]
     4c4:	045a12de 	ldrbeq	r1, [sl], #-734	; 0xfffffd22
     4c8:	0e540000 	cdpeq	0, 5, cr0, cr4, cr0, {0}
     4cc:	00000531 	andeq	r0, r0, r1, lsr r5
     4d0:	0b0ce205 	bleq	338cec <startup-0x1fcc7314>
     4d4:	58000001 	stmdapl	r0, {r0}
     4d8:	0004af0e 	andeq	sl, r4, lr, lsl #30
     4dc:	0ee40500 	cdpeq	5, 14, cr0, cr4, cr0, {0}
     4e0:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     4e4:	037f0e5c 	cmneq	pc, #92, 28	; 0x5c0
     4e8:	e5050000 	str	r0, [r5, #-0]
     4ec:	00005d09 	andeq	r5, r0, r9, lsl #26
     4f0:	14006400 	strne	r6, [r0], #-1024	; 0xfffffc00
     4f4:	0000005d 	andeq	r0, r0, sp, asr r0
     4f8:	0000045a 	andeq	r0, r0, sl, asr r4
     4fc:	00045a15 	andeq	r5, r4, r5, lsl sl
     500:	006b1500 	rsbeq	r1, fp, r0, lsl #10
     504:	ae150000 	cdpge	0, 1, cr0, cr5, cr0, {0}
     508:	15000005 	strne	r0, [r0, #-5]
     50c:	0000005d 	andeq	r0, r0, sp, asr r0
     510:	65040600 	strvs	r0, [r4, #-1536]	; 0xfffffa00
     514:	16000004 	strne	r0, [r0], -r4
     518:	0000045a 	andeq	r0, r0, sl, asr r4
     51c:	00051b17 	andeq	r1, r5, r7, lsl fp
     520:	05042800 	streq	r2, [r4, #-2048]	; 0xfffff800
     524:	ae080260 	cdpge	2, 0, cr0, cr8, cr0, {3}
     528:	18000005 	stmdane	r0, {r0, r2}
     52c:	0000046d 	andeq	r0, r0, sp, ror #8
     530:	07026205 	streq	r6, [r2, -r5, lsl #4]
     534:	0000005d 	andeq	r0, r0, sp, asr r0
     538:	02411800 	subeq	r1, r1, #0, 16
     53c:	67050000 	strvs	r0, [r5, -r0]
     540:	069a0b02 	ldreq	r0, [sl], r2, lsl #22
     544:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
     548:	000002ed 	andeq	r0, r0, sp, ror #5
     54c:	14026705 	strne	r6, [r2], #-1797	; 0xfffff8fb
     550:	0000069a 	muleq	r0, sl, r6
     554:	02b21808 	adcseq	r1, r2, #8, 16	; 0x80000
     558:	67050000 	strvs	r0, [r5, -r0]
     55c:	069a1e02 	ldreq	r1, [sl], r2, lsl #28
     560:	180c0000 	stmdane	ip, {}	; <UNPREDICTABLE>
     564:	000004de 	ldrdeq	r0, [r0], -lr
     568:	08026905 	stmdaeq	r2, {r0, r2, r8, fp, sp, lr}
     56c:	0000005d 	andeq	r0, r0, sp, asr r0
     570:	012b1810 			; <UNDEFINED> instruction: 0x012b1810
     574:	6a050000 	bvs	14057c <startup-0x1febfa84>
     578:	089a0802 	ldmeq	sl, {r1, fp}
     57c:	18140000 	ldmdane	r4, {}	; <UNPREDICTABLE>
     580:	000004fa 	strdeq	r0, [r0], -sl
     584:	07026d05 	streq	r6, [r2, -r5, lsl #26]
     588:	0000005d 	andeq	r0, r0, sp, asr r0
     58c:	04e81830 	strbteq	r1, [r8], #2096	; 0x830
     590:	6e050000 	cdpvs	0, 0, cr0, cr5, cr0, {0}
     594:	08af1602 	stmiaeq	pc!, {r1, r9, sl, ip}	; <UNPREDICTABLE>
     598:	18340000 	ldmdane	r4!, {}	; <UNPREDICTABLE>
     59c:	000003e8 	andeq	r0, r0, r8, ror #7
     5a0:	07027005 	streq	r7, [r2, -r5]
     5a4:	0000005d 	andeq	r0, r0, sp, asr r0
     5a8:	04f01838 	ldrbteq	r1, [r0], #2104	; 0x838
     5ac:	72050000 	andvc	r0, r5, #0
     5b0:	08c00a02 	stmiaeq	r0, {r1, r9, fp}^
     5b4:	183c0000 	ldmdane	ip!, {}	; <UNPREDICTABLE>
     5b8:	00000362 	andeq	r0, r0, r2, ror #6
     5bc:	13027505 	movwne	r7, #9477	; 0x2505
     5c0:	0000017d 	andeq	r0, r0, sp, ror r1
     5c4:	02d71840 	sbcseq	r1, r7, #64, 16	; 0x400000
     5c8:	76050000 	strvc	r0, [r5], -r0
     5cc:	005d0702 	subseq	r0, sp, r2, lsl #14
     5d0:	18440000 	stmdane	r4, {}^	; <UNPREDICTABLE>
     5d4:	00000697 	muleq	r0, r7, r6
     5d8:	13027705 	movwne	r7, #9989	; 0x2705
     5dc:	0000017d 	andeq	r0, r0, sp, ror r1
     5e0:	04231848 	strteq	r1, [r3], #-2120	; 0xfffff7b8
     5e4:	78050000 	stmdavc	r5, {}	; <UNPREDICTABLE>
     5e8:	08c61402 	stmiaeq	r6, {r1, sl, ip}^
     5ec:	184c0000 	stmdane	ip, {}^	; <UNPREDICTABLE>
     5f0:	000002fc 	strdeq	r0, [r0], -ip
     5f4:	07027b05 	streq	r7, [r2, -r5, lsl #22]
     5f8:	0000005d 	andeq	r0, r0, sp, asr r0
     5fc:	02511850 	subseq	r1, r1, #80, 16	; 0x500000
     600:	7c050000 	stcvc	0, cr0, [r5], {-0}
     604:	05ae0902 	streq	r0, [lr, #2306]!	; 0x902
     608:	18540000 	ldmdane	r4, {}^	; <UNPREDICTABLE>
     60c:	00000455 	andeq	r0, r0, r5, asr r4
     610:	07029f05 	streq	r9, [r2, -r5, lsl #30]
     614:	00000875 	andeq	r0, r0, r5, ror r8
     618:	03e01958 	mvneq	r1, #88, 18	; 0x160000
     61c:	a3050000 	movwge	r0, #20480	; 0x5000
     620:	02ae1302 	adceq	r1, lr, #134217728	; 0x8000000
     624:	01480000 	mrseq	r0, (UNDEF: 72)
     628:	00033219 	andeq	r3, r3, r9, lsl r2
     62c:	02a40500 	adceq	r0, r4, #0, 10
     630:	00026b12 	andeq	r6, r2, r2, lsl fp
     634:	19014c00 	stmdbne	r1, {sl, fp, lr}
     638:	0000062d 	andeq	r0, r0, sp, lsr #12
     63c:	0c02a805 	stceq	8, cr10, [r2], {5}
     640:	000008d7 	ldrdeq	r0, [r0], -r7
     644:	241902dc 	ldrcs	r0, [r9], #-732	; 0xfffffd24
     648:	05000002 	streq	r0, [r0, #-2]
     64c:	5b1002ad 	blpl	401108 <startup-0x1fbfeef8>
     650:	e0000006 	and	r0, r0, r6
     654:	02091902 	andeq	r1, r9, #32768	; 0x8000
     658:	af050000 	svcge	0x00050000
     65c:	08e30a02 	stmiaeq	r3!, {r1, r9, fp}^
     660:	02ec0000 	rsceq	r0, ip, #0
     664:	b4040600 	strlt	r0, [r4], #-1536	; 0xfffffa00
     668:	02000005 	andeq	r0, r0, #5
     66c:	04500801 	ldrbeq	r0, [r0], #-2049	; 0xfffff7ff
     670:	b4160000 	ldrlt	r0, [r6], #-0
     674:	06000005 	streq	r0, [r0], -r5
     678:	00043c04 	andeq	r3, r4, r4, lsl #24
     67c:	005d1400 	subseq	r1, sp, r0, lsl #8
     680:	05e40000 	strbeq	r0, [r4, #0]!
     684:	5a150000 	bpl	54068c <startup-0x1fabf974>
     688:	15000004 	strne	r0, [r0, #-4]
     68c:	0000006b 	andeq	r0, r0, fp, rrx
     690:	0005e415 	andeq	lr, r5, r5, lsl r4
     694:	005d1500 	subseq	r1, sp, r0, lsl #10
     698:	06000000 	streq	r0, [r0], -r0
     69c:	0005bb04 	andeq	fp, r5, r4, lsl #22
     6a0:	c6040600 	strgt	r0, [r4], -r0, lsl #12
     6a4:	14000005 	strne	r0, [r0], #-5
     6a8:	00000090 	muleq	r0, r0, r0
     6ac:	0000060e 	andeq	r0, r0, lr, lsl #12
     6b0:	00045a15 	andeq	r5, r4, r5, lsl sl
     6b4:	006b1500 	rsbeq	r1, fp, r0, lsl #10
     6b8:	90150000 	andsls	r0, r5, r0
     6bc:	15000000 	strne	r0, [r0, #-0]
     6c0:	0000005d 	andeq	r0, r0, sp, asr r0
     6c4:	f0040600 			; <UNDEFINED> instruction: 0xf0040600
     6c8:	14000005 	strne	r0, [r0], #-5
     6cc:	0000005d 	andeq	r0, r0, sp, asr r0
     6d0:	00000628 	andeq	r0, r0, r8, lsr #12
     6d4:	00045a15 	andeq	r5, r4, r5, lsl sl
     6d8:	006b1500 	rsbeq	r1, fp, r0, lsl #10
     6dc:	06000000 	streq	r0, [r0], -r0
     6e0:	00061404 	andeq	r1, r6, r4, lsl #8
     6e4:	002c0b00 	eoreq	r0, ip, r0, lsl #22
     6e8:	063e0000 	ldrteq	r0, [lr], -r0
     6ec:	640c0000 	strvs	r0, [ip], #-0
     6f0:	02000000 	andeq	r0, r0, #0
     6f4:	002c0b00 	eoreq	r0, ip, r0, lsl #22
     6f8:	064e0000 	strbeq	r0, [lr], -r0
     6fc:	640c0000 	strvs	r0, [ip], #-0
     700:	00000000 	andeq	r0, r0, r0
     704:	04950800 	ldreq	r0, [r5], #2048	; 0x800
     708:	1f050000 	svcne	0x00050000
     70c:	02f91a01 	rscseq	r1, r9, #4096	; 0x1000
     710:	171a0000 	ldrne	r0, [sl, -r0]
     714:	0c000006 	stceq	0, cr0, [r0], {6}
     718:	08012305 	stmdaeq	r1, {r0, r2, r8, r9, sp}
     71c:	00000694 	muleq	r0, r4, r6
     720:	0004bd18 	andeq	fp, r4, r8, lsl sp
     724:	01250500 			; <UNDEFINED> instruction: 0x01250500
     728:	00069411 	andeq	r9, r6, r1, lsl r4
     72c:	12180000 	andsne	r0, r8, #0
     730:	05000003 	streq	r0, [r0, #-3]
     734:	5d070126 	stfpls	f0, [r7, #-152]	; 0xffffff68
     738:	04000000 	streq	r0, [r0], #-0
     73c:	00048f18 	andeq	r8, r4, r8, lsl pc
     740:	01270500 			; <UNDEFINED> instruction: 0x01270500
     744:	00069a0b 	andeq	r9, r6, fp, lsl #20
     748:	06000800 	streq	r0, [r0], -r0, lsl #16
     74c:	00065b04 	andeq	r5, r6, r4, lsl #22
     750:	4e040600 	cfmadd32mi	mvax0, mvfx0, mvfx4, mvfx0
     754:	1a000006 	bne	774 <startup-0x1ffff88c>
     758:	00000116 	andeq	r0, r0, r6, lsl r1
     75c:	013f050e 	teqeq	pc, lr, lsl #10
     760:	0006d908 	andeq	sp, r6, r8, lsl #18
     764:	05221800 	streq	r1, [r2, #-2048]!	; 0xfffff800
     768:	40050000 	andmi	r0, r5, r0
     76c:	06d91201 	ldrbeq	r1, [r9], r1, lsl #4
     770:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     774:	0000059b 	muleq	r0, fp, r5
     778:	12014105 	andne	r4, r1, #1073741825	; 0x40000001
     77c:	000006d9 	ldrdeq	r0, [r0], -r9
     780:	05c91806 	strbeq	r1, [r9, #2054]	; 0x806
     784:	42050000 	andmi	r0, r5, #0
     788:	003a1201 	eorseq	r1, sl, r1, lsl #4
     78c:	000c0000 	andeq	r0, ip, r0
     790:	00003a0b 	andeq	r3, r0, fp, lsl #20
     794:	0006e900 	andeq	lr, r6, r0, lsl #18
     798:	00640c00 	rsbeq	r0, r4, r0, lsl #24
     79c:	00020000 	andeq	r0, r2, r0
     7a0:	8005d01b 	andhi	sp, r5, fp, lsl r0
     7a4:	07fe0702 	ldrbeq	r0, [lr, r2, lsl #14]!
     7a8:	fb180000 	blx	6007b2 <startup-0x1f9ff84e>
     7ac:	05000005 	streq	r0, [r0, #-5]
     7b0:	64180282 	ldrvs	r0, [r8], #-642	; 0xfffffd7e
     7b4:	00000000 	andeq	r0, r0, r0
     7b8:	0005a718 	andeq	sl, r5, r8, lsl r7
     7bc:	02830500 	addeq	r0, r3, #0, 10
     7c0:	0005ae12 	andeq	sl, r5, r2, lsl lr
     7c4:	47180400 	ldrmi	r0, [r8, -r0, lsl #8]
     7c8:	05000003 	streq	r0, [r0, #-3]
     7cc:	fe100284 	cdp2	2, 1, cr0, cr0, cr4, {4}
     7d0:	08000007 	stmdaeq	r0, {r0, r1, r2}
     7d4:	00065a18 	andeq	r5, r6, r8, lsl sl
     7d8:	02850500 	addeq	r0, r5, #0, 10
     7dc:	00019317 	andeq	r9, r1, r7, lsl r3
     7e0:	c2182400 	andsgt	r2, r8, #0, 8
     7e4:	05000002 	streq	r0, [r0, #-2]
     7e8:	5d0f0286 	sfmpl	f0, 4, [pc, #-536]	; 5d8 <startup-0x1ffffa28>
     7ec:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
     7f0:	0004b818 	andeq	fp, r4, r8, lsl r8
     7f4:	02870500 	addeq	r0, r7, #0, 10
     7f8:	0000562c 	andeq	r5, r0, ip, lsr #12
     7fc:	7e185000 	cdpvc	0, 1, cr5, cr8, cr0, {0}
     800:	05000006 	streq	r0, [r0, #-6]
     804:	a01a0288 	andsge	r0, sl, r8, lsl #5
     808:	58000006 	stmdapl	r0, {r1, r2}
     80c:	0004d118 	andeq	sp, r4, r8, lsl r1
     810:	02890500 	addeq	r0, r9, #0, 10
     814:	0000ff16 	andeq	pc, r0, r6, lsl pc	; <UNPREDICTABLE>
     818:	89186800 	ldmdbhi	r8, {fp, sp, lr}
     81c:	05000006 	streq	r0, [r0, #-6]
     820:	ff16028a 			; <UNDEFINED> instruction: 0xff16028a
     824:	70000000 	andvc	r0, r0, r0
     828:	00043318 	andeq	r3, r4, r8, lsl r3
     82c:	028b0500 	addeq	r0, fp, #0, 10
     830:	0000ff16 	andeq	pc, r0, r6, lsl pc	; <UNPREDICTABLE>
     834:	23187800 	tstcs	r8, #0, 16
     838:	05000006 	streq	r0, [r0, #-6]
     83c:	0e10028c 	cdpeq	2, 1, cr0, cr0, cr12, {4}
     840:	80000008 	andhi	r0, r0, r8
     844:	00033b18 	andeq	r3, r3, r8, lsl fp
     848:	028d0500 	addeq	r0, sp, #0, 10
     84c:	00081e10 	andeq	r1, r8, r0, lsl lr
     850:	d6188800 	ldrle	r8, [r8], -r0, lsl #16
     854:	05000005 	streq	r0, [r0, #-5]
     858:	5d0f028e 	sfmpl	f0, 4, [pc, #-568]	; 628 <startup-0x1ffff9d8>
     85c:	a0000000 	andge	r0, r0, r0
     860:	00027818 	andeq	r7, r2, r8, lsl r8
     864:	028f0500 	addeq	r0, pc, #0, 10
     868:	0000ff16 	andeq	pc, r0, r6, lsl pc	; <UNPREDICTABLE>
     86c:	b118a400 	tstlt	r8, r0, lsl #8
     870:	05000001 	streq	r0, [r0, #-1]
     874:	ff160290 			; <UNDEFINED> instruction: 0xff160290
     878:	ac000000 	stcge	0, cr0, [r0], {-0}
     87c:	00026118 	andeq	r6, r2, r8, lsl r1
     880:	02910500 	addseq	r0, r1, #0, 10
     884:	0000ff16 	andeq	pc, r0, r6, lsl pc	; <UNPREDICTABLE>
     888:	4618b400 	ldrmi	fp, [r8], -r0, lsl #8
     88c:	05000001 	streq	r0, [r0, #-1]
     890:	ff160292 			; <UNDEFINED> instruction: 0xff160292
     894:	bc000000 	stclt	0, cr0, [r0], {-0}
     898:	00015518 	andeq	r5, r1, r8, lsl r5
     89c:	02930500 	addseq	r0, r3, #0, 10
     8a0:	0000ff16 	andeq	pc, r0, r6, lsl pc	; <UNPREDICTABLE>
     8a4:	6b18c400 	blvs	6318ac <startup-0x1f9ce754>
     8a8:	05000004 	streq	r0, [r0, #-4]
     8ac:	5d080294 	sfmpl	f0, 4, [r8, #-592]	; 0xfffffdb0
     8b0:	cc000000 	stcgt	0, cr0, [r0], {-0}
     8b4:	05b40b00 	ldreq	r0, [r4, #2816]!	; 0xb00
     8b8:	080e0000 	stmdaeq	lr, {}	; <UNPREDICTABLE>
     8bc:	640c0000 	strvs	r0, [ip], #-0
     8c0:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     8c4:	05b40b00 	ldreq	r0, [r4, #2816]!	; 0xb00
     8c8:	081e0000 	ldmdaeq	lr, {}	; <UNPREDICTABLE>
     8cc:	640c0000 	strvs	r0, [ip], #-0
     8d0:	07000000 	streq	r0, [r0, -r0]
     8d4:	05b40b00 	ldreq	r0, [r4, #2816]!	; 0xb00
     8d8:	082e0000 	stmdaeq	lr!, {}	; <UNPREDICTABLE>
     8dc:	640c0000 	strvs	r0, [ip], #-0
     8e0:	17000000 	strne	r0, [r0, -r0]
     8e4:	05f01b00 	ldrbeq	r1, [r0, #2816]!	; 0xb00
     8e8:	55070299 	strpl	r0, [r7, #-665]	; 0xfffffd67
     8ec:	18000008 	stmdane	r0, {r3}
     8f0:	000003d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     8f4:	1b029c05 	blne	a7910 <startup-0x1ff586f0>
     8f8:	00000855 	andeq	r0, r0, r5, asr r8
     8fc:	03a31800 			; <UNDEFINED> instruction: 0x03a31800
     900:	9d050000 	stcls	0, cr0, [r5, #-0]
     904:	08651802 	stmdaeq	r5!, {r1, fp, ip}^
     908:	00780000 	rsbseq	r0, r8, r0
     90c:	0002f30b 	andeq	pc, r2, fp, lsl #6
     910:	00086500 	andeq	r6, r8, r0, lsl #10
     914:	00640c00 	rsbeq	r0, r4, r0, lsl #24
     918:	001d0000 	andseq	r0, sp, r0
     91c:	0000640b 	andeq	r6, r0, fp, lsl #8
     920:	00087500 	andeq	r7, r8, r0, lsl #10
     924:	00640c00 	rsbeq	r0, r4, r0, lsl #24
     928:	001d0000 	andseq	r0, sp, r0
     92c:	7e05f01c 	mcrvc	0, 0, pc, cr5, cr12, {0}	; <UNPREDICTABLE>
     930:	089a0302 	ldmeq	sl, {r1, r8, r9}
     934:	1b1d0000 	blne	74093c <startup-0x1f8bf6c4>
     938:	05000005 	streq	r0, [r0, #-5]
     93c:	e90b0295 	stmdb	fp, {r0, r2, r4, r7, r9}
     940:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
     944:	00000642 	andeq	r0, r0, r2, asr #12
     948:	0b029e05 	bleq	a8164 <startup-0x1ff57e9c>
     94c:	0000082e 	andeq	r0, r0, lr, lsr #16
     950:	05b40b00 	ldreq	r0, [r4, #2816]!	; 0xb00
     954:	08aa0000 	stmiaeq	sl!, {}	; <UNPREDICTABLE>
     958:	640c0000 	strvs	r0, [ip], #-0
     95c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     960:	01900700 	orrseq	r0, r0, r0, lsl #14
     964:	04060000 	streq	r0, [r6], #-0
     968:	000008aa 	andeq	r0, r0, sl, lsr #17
     96c:	0008c01e 	andeq	ip, r8, lr, lsl r0
     970:	045a1500 	ldrbeq	r1, [sl], #-1280	; 0xfffffb00
     974:	06000000 	streq	r0, [r0], -r0
     978:	0008b504 	andeq	fp, r8, r4, lsl #10
     97c:	7d040600 	stcvc	6, cr0, [r4, #-0]
     980:	1e000001 	cdpne	0, 0, cr0, cr0, cr1, {0}
     984:	000008d7 	ldrdeq	r0, [r0], -r7
     988:	00005d15 	andeq	r5, r0, r5, lsl sp
     98c:	04060000 	streq	r0, [r6], #-0
     990:	000008dd 	ldrdeq	r0, [r0], -sp
     994:	08cc0406 	stmiaeq	ip, {r1, r2, sl}^
     998:	4e0b0000 	cdpmi	0, 0, cr0, cr11, cr0, {0}
     99c:	f3000006 	vhadd.u8	d0, d0, d6
     9a0:	0c000008 	stceq	0, cr0, [r0], {8}
     9a4:	00000064 	andeq	r0, r0, r4, rrx
     9a8:	ef1f0002 	svc	0x001f0002
     9ac:	05000005 	streq	r0, [r0, #-5]
     9b0:	5a17032e 	bpl	5c1670 <startup-0x1fa3e990>
     9b4:	1f000004 	svcne	0x00000004
     9b8:	000005e8 	andeq	r0, r0, r8, ror #11
     9bc:	1d032f05 	stcne	15, cr2, [r3, #-20]	; 0xffffffec
     9c0:	00000460 	andeq	r0, r0, r0, ror #8
     9c4:	0002720f 	andeq	r7, r2, pc, lsl #4
     9c8:	14010200 	strne	r0, [r1], #-512	; 0xfffffe00
     9cc:	00093110 	andeq	r3, r9, r0, lsl r1
     9d0:	00781000 	rsbseq	r1, r8, r0
     9d4:	2c101501 	cfldr32cs	mvfx1, [r0], {1}
     9d8:	00000000 	andeq	r0, r0, r0
     9dc:	01007910 	tsteq	r0, r0, lsl r9
     9e0:	002c1315 	eoreq	r1, ip, r5, lsl r3
     9e4:	00010000 	andeq	r0, r1, r0
     9e8:	00027205 	andeq	r7, r2, r5, lsl #4
     9ec:	02160100 	andseq	r0, r6, #0, 2
     9f0:	0000090d 	andeq	r0, r0, sp, lsl #18
     9f4:	0006a20f 	andeq	sl, r6, pc, lsl #4
     9f8:	18010400 	stmdane	r1, {sl}
     9fc:	00096510 	andeq	r6, r9, r0, lsl r5
     a00:	06830e00 	streq	r0, [r3], r0, lsl #28
     a04:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
     a08:	00093108 	andeq	r3, r9, r8, lsl #2
     a0c:	65100000 	ldrvs	r0, [r0, #-0]
     a10:	0100646e 	tsteq	r0, lr, ror #8
     a14:	09310f19 	ldmdbeq	r1!, {r0, r3, r4, r8, r9, sl, fp}
     a18:	00020000 	andeq	r0, r2, r0
     a1c:	0006a205 	andeq	sl, r6, r5, lsl #4
     a20:	021a0100 	andseq	r0, sl, #0, 2
     a24:	0000093d 	andeq	r0, r0, sp, lsr r9
     a28:	0006a105 	andeq	sl, r6, r5, lsl #2
     a2c:	091a0100 	ldmdbeq	sl, {r8}
     a30:	0000097d 	andeq	r0, r0, sp, ror r9
     a34:	093d0406 	ldmdbeq	sp!, {r1, r2, sl}
     a38:	2d0f0000 	stccs	0, cr0, [pc, #-0]	; a40 <startup-0x1ffff5c0>
     a3c:	04000002 	streq	r0, [r0], #-2
     a40:	b8101c01 	ldmdalt	r0, {r0, sl, fp, ip}
     a44:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
     a48:	0000041a 	andeq	r0, r0, sl, lsl r4
     a4c:	31081d01 	tstcc	r8, r1, lsl #26
     a50:	00000009 	andeq	r0, r0, r9
     a54:	0003190e 	andeq	r1, r3, lr, lsl #18
     a58:	101e0100 	andsne	r0, lr, r0, lsl #2
     a5c:	0000002c 	andeq	r0, r0, ip, lsr #32
     a60:	02f50e02 	rscseq	r0, r5, #2, 28
     a64:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
     a68:	00002c17 	andeq	r2, r0, r7, lsl ip
     a6c:	05000300 	streq	r0, [r0, #-768]	; 0xfffffd00
     a70:	0000022d 	andeq	r0, r0, sp, lsr #4
     a74:	83021f01 	movwhi	r1, #12033	; 0x2f01
     a78:	05000009 	streq	r0, [r0, #-9]
     a7c:	0000022c 	andeq	r0, r0, ip, lsr #4
     a80:	d0091f01 	andle	r1, r9, r1, lsl #30
     a84:	06000009 	streq	r0, [r0], -r9
     a88:	00098304 	andeq	r8, r9, r4, lsl #6
     a8c:	01ec0f00 	mvneq	r0, r0, lsl #30
     a90:	01080000 	mrseq	r0, (UNDEF: 8)
     a94:	0a071021 	beq	1c4b20 <startup-0x1fe3b4e0>
     a98:	78100000 	ldmdavc	r0, {}	; <UNPREDICTABLE>
     a9c:	07220100 	streq	r0, [r2, -r0, lsl #2]!
     aa0:	000005b4 			; <UNDEFINED> instruction: 0x000005b4
     aa4:	00791000 	rsbseq	r1, r9, r0
     aa8:	b40a2201 	strlt	r2, [sl], #-513	; 0xfffffdff
     aac:	01000005 	tsteq	r0, r5
     ab0:	0004be0e 	andeq	fp, r4, lr, lsl #28
     ab4:	17230100 	strne	r0, [r3, -r0, lsl #2]!
     ab8:	00000a07 	andeq	r0, r0, r7, lsl #20
     abc:	04060004 	streq	r0, [r6], #-4
     ac0:	000009d6 	ldrdeq	r0, [r0], -r6
     ac4:	0005a205 	andeq	sl, r5, r5, lsl #4
     ac8:	02240100 	eoreq	r0, r4, #0, 2
     acc:	000009d6 	ldrdeq	r0, [r0], -r6
     ad0:	0005a105 	andeq	sl, r5, r5, lsl #2
     ad4:	09240100 	stmdbeq	r4!, {r8}
     ad8:	00000a07 	andeq	r0, r0, r7, lsl #20
     adc:	0003fa0f 	andeq	pc, r3, pc, lsl #20
     ae0:	28014000 	stmdacs	r1, {lr}
     ae4:	000a6610 	andeq	r6, sl, r0, lsl r6
     ae8:	01dc0e00 	bicseq	r0, ip, r0, lsl #28
     aec:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
     af0:	00005d06 	andeq	r5, r0, r6, lsl #26
     af4:	1d0e0000 	stcne	0, cr0, [lr, #-0]
     af8:	01000006 	tsteq	r0, r6
     afc:	005d062a 	subseq	r0, sp, sl, lsr #12
     b00:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
     b04:	00000678 	andeq	r0, r0, r8, ror r6
     b08:	5d062b01 	vstrpl	d2, [r6, #-4]
     b0c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     b10:	00787010 	rsbseq	r7, r8, r0, lsl r0
     b14:	66082c01 	strvs	r2, [r8], -r1, lsl #24
     b18:	0c00000a 	stceq	0, cr0, [r0], {10}
     b1c:	09310b00 	ldmdbeq	r1!, {r8, r9, fp}
     b20:	0a760000 	beq	1d80b28 <startup-0x1e27f4d8>
     b24:	640c0000 	strvs	r0, [ip], #-0
     b28:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     b2c:	03fb0500 	mvnseq	r0, #0, 10
     b30:	2d010000 	stccs	0, cr0, [r1, #-0]
     b34:	000a2502 	andeq	r2, sl, r2, lsl #10
     b38:	05c40f00 	strbeq	r0, [r4, #3840]	; 0xf00
     b3c:	01600000 	cmneq	r0, r0
     b40:	0b05102f 	bleq	144c04 <startup-0x1febb3fc>
     b44:	67100000 	ldrvs	r0, [r0, -r0]
     b48:	01006f65 	tsteq	r0, r5, ror #30
     b4c:	0a760b30 	beq	1d83814 <startup-0x1e27c7ec>
     b50:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     b54:	00000136 	andeq	r0, r0, r6, lsr r1
     b58:	5d093101 	stfpls	f3, [r9, #-4]
     b5c:	40000000 	andmi	r0, r0, r0
     b60:	00013b0e 	andeq	r3, r1, lr, lsl #22
     b64:	0f310100 	svceq	0x00310100
     b68:	0000005d 	andeq	r0, r0, sp, asr r0
     b6c:	06370e44 	ldrteq	r0, [r7], -r4, asr #28
     b70:	32010000 	andcc	r0, r1, #0
     b74:	00005d09 	andeq	r5, r0, r9, lsl #26
     b78:	4a0e4800 	bmi	392b80 <startup-0x1fc6d480>
     b7c:	01000006 	tsteq	r0, r6
     b80:	005d0e32 	subseq	r0, sp, r2, lsr lr
     b84:	0e4c0000 	cdpeq	0, 4, cr0, cr12, cr0, {0}
     b88:	000005e3 	andeq	r0, r0, r3, ror #11
     b8c:	160a3301 	strne	r3, [sl], -r1, lsl #6
     b90:	5000000b 	andpl	r0, r0, fp
     b94:	0007140e 	andeq	r1, r7, lr, lsl #8
     b98:	0d340100 	ldfeqs	f0, [r4, #-0]
     b9c:	00000b16 	andeq	r0, r0, r6, lsl fp
     ba0:	01c00e54 	biceq	r0, r0, r4, asr lr
     ba4:	35010000 	strcc	r0, [r1, #-0]
     ba8:	000b160d 	andeq	r1, fp, sp, lsl #12
     bac:	7d0e5800 	stcvc	8, cr5, [lr, #-0]
     bb0:	01000001 	tsteq	r0, r1
     bb4:	0b310d36 	bleq	c44094 <startup-0x1f3bbf6c>
     bb8:	005c0000 	subseq	r0, ip, r0
     bbc:	000b101e 	andeq	r1, fp, lr, lsl r0
     bc0:	0b101500 	bleq	405fc8 <startup-0x1fbfa038>
     bc4:	06000000 	streq	r0, [r0], -r0
     bc8:	000a8204 	andeq	r8, sl, r4, lsl #4
     bcc:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
     bd0:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
     bd4:	00000b31 	andeq	r0, r0, r1, lsr fp
     bd8:	000b1015 	andeq	r1, fp, r5, lsl r0
     bdc:	005d1500 	subseq	r1, sp, r0, lsl #10
     be0:	5d150000 	ldcpl	0, cr0, [r5, #-0]
     be4:	00000000 	andeq	r0, r0, r0
     be8:	0b1c0406 	bleq	701c08 <startup-0x1f8fe3f8>
     bec:	c8050000 	stmdagt	r5, {}	; <UNPREDICTABLE>
     bf0:	01000003 	tsteq	r0, r3
     bf4:	0b100b37 	bleq	4038d8 <startup-0x1fbfc728>
     bf8:	650b0000 	strvs	r0, [fp, #-0]
     bfc:	53000009 	movwpl	r0, #9
     c00:	0c00000b 	stceq	0, cr0, [r0], {11}
     c04:	00000064 	andeq	r0, r0, r4, rrx
     c08:	be20000b 	cdplt	0, 2, cr0, cr0, cr11, {0}
     c0c:	01000005 	tsteq	r0, r5
     c10:	0b4306cc 	bleq	10c2748 <startup-0x1ef3d8b8>
     c14:	03050000 	movweq	r0, #20480	; 0x5000
     c18:	2000077c 	andcs	r0, r0, ip, ror r7
     c1c:	0009b80b 	andeq	fp, r9, fp, lsl #16
     c20:	000b7500 	andeq	r7, fp, r0, lsl #10
     c24:	00640c00 	rsbeq	r0, r4, r0, lsl #24
     c28:	00040000 	andeq	r0, r4, r0
     c2c:	00038720 	andeq	r8, r3, r0, lsr #14
     c30:	06da0100 	ldrbeq	r0, [sl], r0, lsl #2
     c34:	00000b65 	andeq	r0, r0, r5, ror #22
     c38:	07ac0305 	streq	r0, [ip, r5, lsl #6]!
     c3c:	c3202000 	nopgt	{0}	; <UNPREDICTABLE>
     c40:	01000004 	tsteq	r0, r4
     c44:	0a760ae1 	beq	1d837d0 <startup-0x1e27c830>
     c48:	03050000 	movweq	r0, #20480	; 0x5000
     c4c:	200007c0 	andcs	r0, r0, r0, asr #15
     c50:	00069c21 	andeq	r9, r6, r1, lsr #24
     c54:	06e90100 	strbteq	r0, [r9], r0, lsl #2
     c58:	20000600 	andcs	r0, r0, r0, lsl #12
     c5c:	0000002c 	andeq	r0, r0, ip, lsr #32
     c60:	5a229c01 	bpl	8a7c6c <startup-0x1f758394>
     c64:	01000004 	tsteq	r0, r4
     c68:	05ec06c7 	strbeq	r0, [ip, #1735]!	; 0x6c7
     c6c:	00142000 	andseq	r2, r4, r0
     c70:	9c010000 	stcls	0, cr0, [r1], {-0}
     c74:	00000bed 	andeq	r0, r0, sp, ror #23
     c78:	01006f23 	tsteq	r0, r3, lsr #30
     c7c:	0b371fc7 	bleq	dc8ba0 <startup-0x1f237460>
     c80:	91020000 	mrsls	r0, (UNDEF: 2)
     c84:	03542474 	cmpeq	r4, #116, 8	; 0x74000000
     c88:	c7010000 	strgt	r0, [r1, -r0]
     c8c:	00005d26 	andeq	r5, r0, r6, lsr #26
     c90:	70910200 	addsvc	r0, r1, r0, lsl #4
     c94:	00035b24 	andeq	r5, r3, r4, lsr #22
     c98:	32c70100 	sbccc	r0, r7, #0, 2
     c9c:	0000005d 	andeq	r0, r0, sp, asr r0
     ca0:	006c9102 	rsbeq	r9, ip, r2, lsl #2
     ca4:	0001a125 	andeq	sl, r1, r5, lsr #2
     ca8:	06b20100 	ldrteq	r0, [r2], r0, lsl #2
     cac:	2000053c 	andcs	r0, r0, ip, lsr r5
     cb0:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
     cb4:	0c289c01 	stceq	12, cr9, [r8], #-4
     cb8:	6f230000 	svcvs	0x00230000
     cbc:	1eb20100 	frdnes	f0, f2, f0
     cc0:	00000b37 	andeq	r0, r0, r7, lsr fp
     cc4:	266c9102 	strbtcs	r9, [ip], -r2, lsl #2
     cc8:	20000576 	andcs	r0, r0, r6, ror r5
     ccc:	00000066 	andeq	r0, r0, r6, rrx
     cd0:	01006927 	tsteq	r0, r7, lsr #18
     cd4:	005d0abd 	ldrheq	r0, [sp], #-173	; 0xffffff53
     cd8:	91020000 	mrsls	r0, (UNDEF: 2)
     cdc:	25000074 	strcs	r0, [r0, #-116]	; 0xffffff8c
     ce0:	00000404 	andeq	r0, r0, r4, lsl #8
     ce4:	f006ab01 			; <UNDEFINED> instruction: 0xf006ab01
     ce8:	4c200004 	stcmi	0, cr0, [r0], #-16
     cec:	01000000 	mrseq	r0, (UNDEF: 0)
     cf0:	000c639c 	muleq	ip, ip, r3
     cf4:	006f2300 	rsbeq	r2, pc, r0, lsl #6
     cf8:	371fab01 	ldrcc	sl, [pc, -r1, lsl #22]
     cfc:	0200000b 	andeq	r0, r0, #11
     d00:	f8266c91 			; <UNDEFINED> instruction: 0xf8266c91
     d04:	3a200004 	bcc	800d1c <startup-0x1f7ff2e4>
     d08:	27000000 	strcs	r0, [r0, -r0]
     d0c:	ae010069 	cdpge	0, 0, cr0, cr1, cr9, {3}
     d10:	00005d0a 	andeq	r5, r0, sl, lsl #26
     d14:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     d18:	8e250000 	cdphi	0, 2, cr0, cr5, cr0, {0}
     d1c:	01000002 	tsteq	r0, r2
     d20:	04a406a4 	strteq	r0, [r4], #1700	; 0x6a4
     d24:	004c2000 	subeq	r2, ip, r0
     d28:	9c010000 	stcls	0, cr0, [r1], {-0}
     d2c:	00000c9e 	muleq	r0, lr, ip
     d30:	01006f23 	tsteq	r0, r3, lsr #30
     d34:	0b371ea4 	bleq	dc87cc <startup-0x1f237834>
     d38:	91020000 	mrsls	r0, (UNDEF: 2)
     d3c:	04ac266c 	strteq	r2, [ip], #1644	; 0x66c
     d40:	003a2000 	eorseq	r2, sl, r0
     d44:	69270000 	stmdbvs	r7!, {}	; <UNPREDICTABLE>
     d48:	0aa70100 	beq	fe9c1150 <ball_geometry+0xde9c0990>
     d4c:	0000005d 	andeq	r0, r0, sp, asr r0
     d50:	00749102 	rsbseq	r9, r4, r2, lsl #2
     d54:	011e2500 	tsteq	lr, r0, lsl #10
     d58:	8f010000 	svchi	0x00010000
     d5c:	00040006 	andeq	r0, r4, r6
     d60:	0000a420 	andeq	sl, r0, r0, lsr #8
     d64:	2e9c0100 	fmlcse	f0, f4, f0
     d68:	2300000d 	movwcs	r0, #13
     d6c:	8f010070 	svchi	0x00010070
     d70:	000a1919 	andeq	r1, sl, r9, lsl r9
     d74:	4c910200 	lfmmi	f0, 4, [r1], {0}
     d78:	00307027 	eorseq	r7, r0, r7, lsr #32
     d7c:	0d079001 	stceq	0, cr9, [r7, #-4]
     d80:	0200000a 	andeq	r0, r0, #10
     d84:	78275c91 	stmdavc	r7!, {r0, r4, r7, sl, fp, ip, lr}
     d88:	91010030 	tstls	r1, r0, lsr r0
     d8c:	00002c10 	andeq	r2, r0, r0, lsl ip
     d90:	67910200 	ldrvs	r0, [r1, r0, lsl #4]
     d94:	00307927 	eorseq	r7, r0, r7, lsr #18
     d98:	2c109201 	lfmcs	f1, 1, [r0], {1}
     d9c:	02000000 	andeq	r0, r0, #0
     da0:	ac286691 	stcge	6, cr6, [r8], #-580	; 0xfffffdbc
     da4:	01000003 	tsteq	r0, r3
     da8:	0a0d0793 	beq	342bfc <startup-0x1fcbd404>
     dac:	91020000 	mrsls	r0, (UNDEF: 2)
     db0:	04322654 	ldrteq	r2, [r2], #-1620	; 0xfffff9ac
     db4:	00682000 	rsbeq	r2, r8, r0
     db8:	78270000 	stmdavc	r7!, {}	; <UNPREDICTABLE>
     dbc:	96010031 			; <UNDEFINED> instruction: 0x96010031
     dc0:	00002c11 	andeq	r2, r0, r1, lsl ip
     dc4:	65910200 	ldrvs	r0, [r1, #512]	; 0x200
     dc8:	00317927 	eorseq	r7, r1, r7, lsr #18
     dcc:	2c119701 	ldccs	7, cr9, [r1], {1}
     dd0:	02000000 	andeq	r0, r0, #0
     dd4:	6c276491 	cfstrsvs	mvf6, [r7], #-580	; 0xfffffdbc
     dd8:	08980100 	ldmeq	r8, {r8}
     ddc:	00000965 	andeq	r0, r0, r5, ror #18
     de0:	00509102 	subseq	r9, r0, r2, lsl #2
     de4:	05542500 	ldrbeq	r2, [r4, #-1280]	; 0xfffffb00
     de8:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
     dec:	0002ce06 	andeq	ip, r2, r6, lsl #28
     df0:	00013220 	andeq	r3, r1, r0, lsr #4
     df4:	ec9c0100 	ldfs	f0, [ip], {0}
     df8:	2300000d 	movwcs	r0, #13
     dfc:	79010072 	stmdbvc	r1, {r1, r4, r5, r6}
     e00:	0009c41b 	andeq	ip, r9, fp, lsl r4
     e04:	44910200 	ldrmi	r0, [r1], #512	; 0x200
     e08:	00307227 	eorseq	r7, r0, r7, lsr #4
     e0c:	b8077a01 	stmdalt	r7, {r0, r9, fp, ip, sp, lr}
     e10:	02000009 	andeq	r0, r0, #9
     e14:	78275c91 	stmdavc	r7!, {r0, r4, r7, sl, fp, ip, lr}
     e18:	7b010073 	blvc	40fec <startup-0x1ffbf014>
     e1c:	00002c10 	andeq	r2, r0, r0, lsl ip
     e20:	63910200 	orrsvs	r0, r1, #0, 4
     e24:	00737927 	rsbseq	r7, r3, r7, lsr #18
     e28:	2c107c01 	ldccs	12, cr7, [r0], {1}
     e2c:	02000000 	andeq	r0, r0, #0
     e30:	19286291 	stmdbne	r8!, {r0, r4, r7, r9, sp, lr}
     e34:	01000003 	tsteq	r0, r3
     e38:	002c107d 	eoreq	r1, ip, sp, ror r0
     e3c:	91020000 	mrsls	r0, (UNDEF: 2)
     e40:	02f52861 	rscseq	r2, r5, #6356992	; 0x610000
     e44:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
     e48:	00002c10 	andeq	r2, r0, r0, lsl ip
     e4c:	60910200 	addsvs	r0, r1, r0, lsl #4
     e50:	00307829 	eorseq	r7, r0, r9, lsr #16
     e54:	2c108001 	ldccs	0, cr8, [r0], {1}
     e58:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
     e5c:	01003079 	tsteq	r0, r9, ror r0
     e60:	002c1480 	eoreq	r1, ip, r0, lsl #9
     e64:	78290000 	stmdavc	r9!, {}	; <UNPREDICTABLE>
     e68:	80010031 	andhi	r0, r1, r1, lsr r0
     e6c:	00002c18 	andeq	r2, r0, r8, lsl ip
     e70:	31792900 	cmncc	r9, r0, lsl #18
     e74:	1c800100 	stfnes	f0, [r0], {0}
     e78:	0000002c 	andeq	r0, r0, ip, lsr #32
     e7c:	0005bd28 	andeq	fp, r5, r8, lsr #26
     e80:	07820100 	streq	r0, [r2, r0, lsl #2]
     e84:	00000dec 	andeq	r0, r0, ip, ror #27
     e88:	264c9102 	strbcs	r9, [ip], -r2, lsl #2
     e8c:	200003d4 	ldrdcs	r0, [r0], -r4
     e90:	00000022 	andeq	r0, r0, r2, lsr #32
     e94:	01006927 	tsteq	r0, r7, lsr #18
     e98:	005d0a89 	subseq	r0, sp, r9, lsl #21
     e9c:	91020000 	mrsls	r0, (UNDEF: 2)
     ea0:	0b000064 	bleq	1038 <startup-0x1fffefc8>
     ea4:	00000965 	andeq	r0, r0, r5, ror #18
     ea8:	00000dfc 	strdeq	r0, [r0], -ip
     eac:	0000640c 	andeq	r6, r0, ip, lsl #8
     eb0:	2a000300 	bcs	1ab8 <startup-0x1fffe548>
     eb4:	000003b8 			; <UNDEFINED> instruction: 0x000003b8
     eb8:	5d054301 	stcpl	3, cr4, [r5, #-4]
     ebc:	fa000000 	blx	ec4 <startup-0x1ffff13c>
     ec0:	d4200000 	strtle	r0, [r0], #-0
     ec4:	01000001 	tsteq	r0, r1
     ec8:	000eea9c 	muleq	lr, ip, sl
     ecc:	006c2300 	rsbeq	r2, ip, r0, lsl #6
     ed0:	71154301 	tstvc	r5, r1, lsl #6
     ed4:	02000009 	andeq	r0, r0, #9
     ed8:	a7284491 			; <UNDEFINED> instruction: 0xa7284491
     edc:	01000006 	tsteq	r0, r6
     ee0:	005d0644 	subseq	r0, sp, r4, asr #12
     ee4:	91020000 	mrsls	r0, (UNDEF: 2)
     ee8:	06ae2858 	ssateq	r2, #15, r8, asr #16
     eec:	44010000 	strmi	r0, [r1], #-0
     ef0:	00005d0e 	andeq	r5, r0, lr, lsl #26
     ef4:	54910200 	ldrpl	r0, [r1], #512	; 0x200
     ef8:	00042d28 	andeq	r2, r4, r8, lsr #26
     efc:	16440100 	strbne	r0, [r4], -r0, lsl #2
     f00:	0000005d 	andeq	r0, r0, sp, asr r0
     f04:	286c9102 	stmdacs	ip!, {r1, r8, ip, pc}^
     f08:	000003b2 			; <UNDEFINED> instruction: 0x000003b2
     f0c:	5d1d4401 	cfldrspl	mvf4, [sp, #-4]
     f10:	02000000 	andeq	r0, r0, #0
     f14:	79276891 	stmdbvc	r7!, {r0, r4, r7, fp, sp, lr}
     f18:	24440100 	strbcs	r0, [r4], #-256	; 0xffffff00
     f1c:	0000005d 	andeq	r0, r0, sp, asr r0
     f20:	27649102 	strbcs	r9, [r4, -r2, lsl #2]!
     f24:	0100306c 	tsteq	r0, ip, rrx
     f28:	09650746 	stmdbeq	r5!, {r1, r2, r6, r8, r9, sl}^
     f2c:	91020000 	mrsls	r0, (UNDEF: 2)
     f30:	30782750 	rsbscc	r2, r8, r0, asr r7
     f34:	10470100 	subne	r0, r7, r0, lsl #2
     f38:	0000002c 	andeq	r0, r0, ip, lsr #32
     f3c:	274f9102 	strbcs	r9, [pc, -r2, lsl #2]
     f40:	01003079 	tsteq	r0, r9, ror r0
     f44:	002c1048 	eoreq	r1, ip, r8, asr #32
     f48:	91020000 	mrsls	r0, (UNDEF: 2)
     f4c:	3178274e 	cmncc	r8, lr, asr #14
     f50:	10490100 	subne	r0, r9, r0, lsl #2
     f54:	0000002c 	andeq	r0, r0, ip, lsr #32
     f58:	274d9102 	strbcs	r9, [sp, -r2, lsl #2]
     f5c:	01003179 	tsteq	r0, r9, ror r1
     f60:	002c104a 	eoreq	r1, ip, sl, asr #32
     f64:	91020000 	mrsls	r0, (UNDEF: 2)
     f68:	03c2284c 	biceq	r2, r2, #76, 16	; 0x4c0000
     f6c:	52010000 	andpl	r0, r1, #0
     f70:	000eea07 	andeq	lr, lr, r7, lsl #20
     f74:	5f910200 	svcpl	0x00910200
     f78:	7362612b 	cmnvc	r2, #-1073741814	; 0xc000000a
     f7c:	5d000600 	stcpl	6, cr0, [r0, #-0]
     f80:	d2000000 	andle	r0, r0, #0
     f84:	2c00000e 	stccs	0, cr0, [r0], {14}
     f88:	02602600 	rsbeq	r2, r0, #0, 12
     f8c:	00642000 	rsbeq	r2, r4, r0
     f90:	78270000 	stmdavc	r7!, {}	; <UNPREDICTABLE>
     f94:	0a670100 	beq	19c139c <startup-0x1e63ec64>
     f98:	0000005d 	andeq	r0, r0, sp, asr r0
     f9c:	00609102 	rsbeq	r9, r0, r2, lsl #2
     fa0:	02010200 	andeq	r0, r1, #0, 4
     fa4:	00000441 	andeq	r0, r0, r1, asr #8
     fa8:	00041522 	andeq	r1, r4, r2, lsr #10
     fac:	063b0100 	ldrteq	r0, [fp], -r0, lsl #2
     fb0:	200000c4 	andcs	r0, r0, r4, asr #1
     fb4:	00000036 	andeq	r0, r0, r6, lsr r0
     fb8:	0f409c01 	svceq	0x00409c01
     fbc:	61230000 			; <UNDEFINED> instruction: 0x61230000
     fc0:	1a3b0100 	bne	ec13c8 <startup-0x1f13ec38>
     fc4:	000002f3 	strdeq	r0, [r0], -r3
     fc8:	236c9102 	cmncs	ip, #-2147483648	; 0x80000000
     fcc:	3b010062 	blcc	4115c <startup-0x1ffbeea4>
     fd0:	0002f32c 	andeq	pc, r2, ip, lsr #6
     fd4:	68910200 	ldmvs	r1, {r9}
     fd8:	00019b28 	andeq	r9, r1, r8, lsr #22
     fdc:	103c0100 	eorsne	r0, ip, r0, lsl #2
     fe0:	0000002c 	andeq	r0, r0, ip, lsr #32
     fe4:	28779102 	ldmdacs	r7!, {r1, r8, ip, pc}^
     fe8:	00000669 	andeq	r0, r0, r9, ror #12
     fec:	2c103d01 	ldccs	13, cr3, [r0], {1}
     ff0:	02000000 	andeq	r0, r0, #0
     ff4:	2d007691 	stccs	6, cr7, [r0, #-580]	; 0xfffffdbc
     ff8:	0000030a 	andeq	r0, r0, sl, lsl #6
     ffc:	00060b01 	andeq	r0, r6, r1, lsl #22
    1000:	0c200000 	stceq	0, cr0, [r0], #-0
    1004:	01000000 	mrseq	r0, (UNDEF: 0)
    1008:	00bd009c 	umlalseq	r0, sp, ip, r0
    100c:	00040000 	andeq	r0, r4, r0
    1010:	00000333 	andeq	r0, r0, r3, lsr r3
    1014:	00000104 	andeq	r0, r0, r4, lsl #2
    1018:	bf0c0000 	svclt	0x000c0000
    101c:	ca000006 	bgt	103c <startup-0x1fffefc4>
    1020:	2c000000 	stccs	0, cr0, [r0], {-0}
    1024:	22200006 	eorcs	r0, r0, #6
    1028:	cf000000 	svcgt	0x00000000
    102c:	02000004 	andeq	r0, r0, #4
    1030:	00000706 	andeq	r0, r0, r6, lsl #14
    1034:	48062a01 	stmdami	r6, {r0, r9, fp, sp}
    1038:	06200006 	strteq	r0, [r0], -r6
    103c:	01000000 	mrseq	r0, (UNDEF: 0)
    1040:	0000549c 	muleq	r0, ip, r4
    1044:	00780300 	rsbseq	r0, r8, r0, lsl #6
    1048:	541f2a01 	ldrpl	r2, [pc], #-2561	; 1050 <startup-0x1fffefb0>
    104c:	01000000 	mrseq	r0, (UNDEF: 0)
    1050:	00790350 	rsbseq	r0, r9, r0, asr r3
    1054:	54262a01 	strtpl	r2, [r6], #-2561	; 0xfffff5ff
    1058:	01000000 	mrseq	r0, (UNDEF: 0)
    105c:	04040051 	streq	r0, [r4], #-81	; 0xffffffaf
    1060:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    1064:	06f40200 	ldrbteq	r0, [r4], r0, lsl #4
    1068:	23010000 	movwcs	r0, #4096	; 0x1000
    106c:	00064206 	andeq	r4, r6, r6, lsl #4
    1070:	00000620 	andeq	r0, r0, r0, lsr #12
    1074:	8a9c0100 	bhi	fe70147c <ball_geometry+0xde700cbc>
    1078:	03000000 	movweq	r0, #0
    107c:	23010078 	movwcs	r0, #4216	; 0x1078
    1080:	0000541d 	andeq	r5, r0, sp, lsl r4
    1084:	03500100 	cmpeq	r0, #0, 2
    1088:	23010079 	movwcs	r0, #4217	; 0x1079
    108c:	00005424 	andeq	r5, r0, r4, lsr #8
    1090:	00510100 	subseq	r0, r1, r0, lsl #2
    1094:	00072c05 	andeq	r2, r7, r5, lsl #24
    1098:	061c0100 	ldreq	r0, [ip], -r0, lsl #2
    109c:	2000063c 	andcs	r0, r0, ip, lsr r6
    10a0:	00000006 	andeq	r0, r0, r6
    10a4:	1a059c01 	bne	1680b0 <startup-0x1fe97f50>
    10a8:	01000007 	tsteq	r0, r7
    10ac:	06360615 			; <UNDEFINED> instruction: 0x06360615
    10b0:	00062000 	andeq	r2, r6, r0
    10b4:	9c010000 	stcls	0, cr0, [r1], {-0}
    10b8:	00074105 	andeq	r4, r7, r5, lsl #2
    10bc:	06110100 	ldreq	r0, [r1], -r0, lsl #2
    10c0:	2000062c 	andcs	r0, r0, ip, lsr #12
    10c4:	0000000a 	andeq	r0, r0, sl
    10c8:	Address 0x00000000000010c8 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	110e1b0e 	tstne	lr, lr, lsl #22
   c:	10061201 	andne	r1, r6, r1, lsl #4
  10:	02000017 	andeq	r0, r0, #23
  14:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	0b390b3b 	bleq	e42d10 <startup-0x1f1bd2f0>
  20:	01111927 	tsteq	r1, r7, lsr #18
  24:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  28:	01194296 			; <UNDEFINED> instruction: 0x01194296
  2c:	03000013 	movweq	r0, #19
  30:	08030005 	stmdaeq	r3, {r0, r2}
  34:	0b3b0b3a 	bleq	ec2d24 <startup-0x1f13d2dc>
  38:	13490b39 	movtne	r0, #39737	; 0x9b39
  3c:	00001802 	andeq	r1, r0, r2, lsl #16
  40:	11010b04 	tstne	r1, r4, lsl #22
  44:	00061201 	andeq	r1, r6, r1, lsl #4
  48:	00340500 	eorseq	r0, r4, r0, lsl #10
  4c:	0b3a0803 	bleq	e82060 <startup-0x1f17dfa0>
  50:	0b390b3b 	bleq	e42d44 <startup-0x1f1bd2bc>
  54:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  58:	24060000 	strcs	r0, [r6], #-0
  5c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  60:	000e030b 	andeq	r0, lr, fp, lsl #6
  64:	002e0700 	eoreq	r0, lr, r0, lsl #14
  68:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  6c:	0b3b0b3a 	bleq	ec2d5c <startup-0x1f13d2a4>
  70:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  74:	06120111 			; <UNDEFINED> instruction: 0x06120111
  78:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  7c:	00000019 	andeq	r0, r0, r9, lsl r0
  80:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
  84:	030b130e 	movweq	r1, #45838	; 0xb30e
  88:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
  8c:	10011117 	andne	r1, r1, r7, lsl r1
  90:	02000017 	andeq	r0, r0, #23
  94:	0b0b0024 	bleq	2c012c <startup-0x1fd3fed4>
  98:	0e030b3e 	vmoveq.16	d3[0], r0
  9c:	24030000 	strcs	r0, [r3], #-0
  a0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  a4:	0008030b 	andeq	r0, r8, fp, lsl #6
  a8:	000f0400 	andeq	r0, pc, r0, lsl #8
  ac:	00000b0b 	andeq	r0, r0, fp, lsl #22
  b0:	03001605 	movweq	r1, #1541	; 0x605
  b4:	3b0b3a0e 	blcc	2ce8f4 <startup-0x1fd3170c>
  b8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  bc:	06000013 			; <UNDEFINED> instruction: 0x06000013
  c0:	0b0b000f 	bleq	2c0104 <startup-0x1fd3fefc>
  c4:	00001349 	andeq	r1, r0, r9, asr #6
  c8:	03001307 	movweq	r1, #775	; 0x307
  cc:	00193c0e 	andseq	r3, r9, lr, lsl #24
  d0:	00160800 	andseq	r0, r6, r0, lsl #16
  d4:	0b3a0e03 	bleq	e838e8 <startup-0x1f17c718>
  d8:	0b39053b 	bleq	e415cc <startup-0x1f1bea34>
  dc:	00001349 	andeq	r1, r0, r9, asr #6
  e0:	0b011709 	bleq	45d0c <startup-0x1ffba2f4>
  e4:	3b0b3a0b 	blcc	2ce918 <startup-0x1fd316e8>
  e8:	010b390b 	tsteq	fp, fp, lsl #18
  ec:	0a000013 	beq	140 <startup-0x1ffffec0>
  f0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  f4:	0b3b0b3a 	bleq	ec2de4 <startup-0x1f13d21c>
  f8:	13490b39 	movtne	r0, #39737	; 0x9b39
  fc:	010b0000 	mrseq	r0, (UNDEF: 11)
 100:	01134901 	tsteq	r3, r1, lsl #18
 104:	0c000013 	stceq	0, cr0, [r0], {19}
 108:	13490021 	movtne	r0, #36897	; 0x9021
 10c:	00000b2f 	andeq	r0, r0, pc, lsr #22
 110:	0b01130d 	bleq	44d4c <startup-0x1ffbb2b4>
 114:	3b0b3a0b 	blcc	2ce948 <startup-0x1fd316b8>
 118:	010b390b 	tsteq	fp, fp, lsl #18
 11c:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
 120:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 124:	0b3b0b3a 	bleq	ec2e14 <startup-0x1f13d1ec>
 128:	13490b39 	movtne	r0, #39737	; 0x9b39
 12c:	00000b38 	andeq	r0, r0, r8, lsr fp
 130:	0301130f 	movweq	r1, #4879	; 0x130f
 134:	3a0b0b0e 	bcc	2c2d74 <startup-0x1fd3d28c>
 138:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 13c:	0013010b 	andseq	r0, r3, fp, lsl #2
 140:	000d1000 	andeq	r1, sp, r0
 144:	0b3a0803 	bleq	e82158 <startup-0x1f17dea8>
 148:	0b390b3b 	bleq	e42e3c <startup-0x1f1bd1c4>
 14c:	0b381349 	bleq	e04e78 <startup-0x1f1fb188>
 150:	13110000 	tstne	r1, #0
 154:	0b0e0301 	bleq	380d60 <startup-0x1fc7f2a0>
 158:	3b0b3a05 	blcc	2ce974 <startup-0x1fd3168c>
 15c:	010b390b 	tsteq	fp, fp, lsl #18
 160:	12000013 	andne	r0, r0, #19
 164:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 168:	0b3b0b3a 	bleq	ec2e58 <startup-0x1f13d1a8>
 16c:	13490b39 	movtne	r0, #39737	; 0x9b39
 170:	00000538 	andeq	r0, r0, r8, lsr r5
 174:	27001513 	smladcs	r0, r3, r5, r1
 178:	14000019 	strne	r0, [r0], #-25	; 0xffffffe7
 17c:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
 180:	13011349 	movwne	r1, #4937	; 0x1349
 184:	05150000 	ldreq	r0, [r5, #-0]
 188:	00134900 	andseq	r4, r3, r0, lsl #18
 18c:	00261600 	eoreq	r1, r6, r0, lsl #12
 190:	00001349 	andeq	r1, r0, r9, asr #6
 194:	03011317 	movweq	r1, #4887	; 0x1317
 198:	3a050b0e 	bcc	142dd8 <startup-0x1febd228>
 19c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 1a0:	0013010b 	andseq	r0, r3, fp, lsl #2
 1a4:	000d1800 	andeq	r1, sp, r0, lsl #16
 1a8:	0b3a0e03 	bleq	e839bc <startup-0x1f17c644>
 1ac:	0b39053b 	bleq	e416a0 <startup-0x1f1be960>
 1b0:	0b381349 	bleq	e04edc <startup-0x1f1fb124>
 1b4:	0d190000 	ldceq	0, cr0, [r9, #-0]
 1b8:	3a0e0300 	bcc	380dc0 <startup-0x1fc7f240>
 1bc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 1c0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 1c4:	1a000005 	bne	1e0 <startup-0x1ffffe20>
 1c8:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 1cc:	0b3a0b0b 	bleq	e82e00 <startup-0x1f17d200>
 1d0:	0b39053b 	bleq	e416c4 <startup-0x1f1be93c>
 1d4:	00001301 	andeq	r1, r0, r1, lsl #6
 1d8:	0b01131b 	bleq	44e4c <startup-0x1ffbb1b4>
 1dc:	3b0b3a0b 	blcc	2cea10 <startup-0x1fd315f0>
 1e0:	010b3905 	tsteq	fp, r5, lsl #18
 1e4:	1c000013 	stcne	0, cr0, [r0], {19}
 1e8:	0b0b0117 	bleq	2c064c <startup-0x1fd3f9b4>
 1ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 1f0:	13010b39 	movwne	r0, #6969	; 0x1b39
 1f4:	0d1d0000 	ldceq	0, cr0, [sp, #-0]
 1f8:	3a0e0300 	bcc	380e00 <startup-0x1fc7f200>
 1fc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 200:	0013490b 	andseq	r4, r3, fp, lsl #18
 204:	01151e00 	tsteq	r5, r0, lsl #28
 208:	13011927 	movwne	r1, #6439	; 0x1927
 20c:	341f0000 	ldrcc	r0, [pc], #-0	; 214 <startup-0x1ffffdec>
 210:	3a0e0300 	bcc	380e18 <startup-0x1fc7f1e8>
 214:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 218:	3f13490b 	svccc	0x0013490b
 21c:	00193c19 	andseq	r3, r9, r9, lsl ip
 220:	00342000 	eorseq	r2, r4, r0
 224:	0b3a0e03 	bleq	e83a38 <startup-0x1f17c5c8>
 228:	0b390b3b 	bleq	e42f1c <startup-0x1f1bd0e4>
 22c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 230:	00001802 	andeq	r1, r0, r2, lsl #16
 234:	3f002e21 	svccc	0x00002e21
 238:	3a0e0319 	bcc	380ea4 <startup-0x1fc7f15c>
 23c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 240:	1119270b 	tstne	r9, fp, lsl #14
 244:	40061201 	andmi	r1, r6, r1, lsl #4
 248:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 24c:	2e220000 	cdpcs	0, 2, cr0, cr2, cr0, {0}
 250:	03193f01 	tsteq	r9, #1, 30
 254:	3b0b3a0e 	blcc	2cea94 <startup-0x1fd3156c>
 258:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 25c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 260:	97184006 	ldrls	r4, [r8, -r6]
 264:	13011942 	movwne	r1, #6466	; 0x1942
 268:	05230000 	streq	r0, [r3, #-0]!
 26c:	3a080300 	bcc	200e74 <startup-0x1fdff18c>
 270:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 274:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 278:	24000018 	strcs	r0, [r0], #-24	; 0xffffffe8
 27c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 280:	0b3b0b3a 	bleq	ec2f70 <startup-0x1f13d090>
 284:	13490b39 	movtne	r0, #39737	; 0x9b39
 288:	00001802 	andeq	r1, r0, r2, lsl #16
 28c:	3f012e25 	svccc	0x00012e25
 290:	3a0e0319 	bcc	380efc <startup-0x1fc7f104>
 294:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 298:	1119270b 	tstne	r9, fp, lsl #14
 29c:	40061201 	andmi	r1, r6, r1, lsl #4
 2a0:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 2a4:	00001301 	andeq	r1, r0, r1, lsl #6
 2a8:	11010b26 	tstne	r1, r6, lsr #22
 2ac:	00061201 	andeq	r1, r6, r1, lsl #4
 2b0:	00342700 	eorseq	r2, r4, r0, lsl #14
 2b4:	0b3a0803 	bleq	e822c8 <startup-0x1f17dd38>
 2b8:	0b390b3b 	bleq	e42fac <startup-0x1f1bd054>
 2bc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 2c0:	34280000 	strtcc	r0, [r8], #-0
 2c4:	3a0e0300 	bcc	380ecc <startup-0x1fc7f134>
 2c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2cc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 2d0:	29000018 	stmdbcs	r0, {r3, r4}
 2d4:	08030034 	stmdaeq	r3, {r2, r4, r5}
 2d8:	0b3b0b3a 	bleq	ec2fc8 <startup-0x1f13d038>
 2dc:	13490b39 	movtne	r0, #39737	; 0x9b39
 2e0:	2e2a0000 	cdpcs	0, 2, cr0, cr10, cr0, {0}
 2e4:	03193f01 	tsteq	r9, #1, 30
 2e8:	3b0b3a0e 	blcc	2ceb28 <startup-0x1fd314d8>
 2ec:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 2f0:	11134919 	tstne	r3, r9, lsl r9
 2f4:	40061201 	andmi	r1, r6, r1, lsl #4
 2f8:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 2fc:	00001301 	andeq	r1, r0, r1, lsl #6
 300:	3f012e2b 	svccc	0x00012e2b
 304:	3a080319 	bcc	200f70 <startup-0x1fdff090>
 308:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 30c:	01193c13 	tsteq	r9, r3, lsl ip
 310:	2c000013 	stccs	0, cr0, [r0], {19}
 314:	00000018 	andeq	r0, r0, r8, lsl r0
 318:	3f002e2d 	svccc	0x00002e2d
 31c:	3a0e0319 	bcc	380f88 <startup-0x1fc7f078>
 320:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 324:	1119270b 	tstne	r9, fp, lsl #14
 328:	40061201 	andmi	r1, r6, r1, lsl #4
 32c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 330:	01000000 	mrseq	r0, (UNDEF: 0)
 334:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 338:	0e030b13 	vmoveq.32	d3[0], r0
 33c:	01110e1b 	tsteq	r1, fp, lsl lr
 340:	17100612 			; <UNDEFINED> instruction: 0x17100612
 344:	2e020000 	cdpcs	0, 0, cr0, cr2, cr0, {0}
 348:	03193f01 	tsteq	r9, #1, 30
 34c:	3b0b3a0e 	blcc	2ceb8c <startup-0x1fd31474>
 350:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 354:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 358:	97184006 	ldrls	r4, [r8, -r6]
 35c:	13011942 	movwne	r1, #6466	; 0x1942
 360:	05030000 	streq	r0, [r3, #-0]
 364:	3a080300 	bcc	200f6c <startup-0x1fdff094>
 368:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 36c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 370:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
 374:	0b0b0024 	bleq	2c040c <startup-0x1fd3fbf4>
 378:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 37c:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
 380:	03193f00 	tsteq	r9, #0, 30
 384:	3b0b3a0e 	blcc	2cebc4 <startup-0x1fd3143c>
 388:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 38c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 390:	97184006 	ldrls	r4, [r8, -r6]
 394:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000000b2 	strheq	r0, [r0], -r2
	...
  20:	00000024 	andeq	r0, r0, r4, lsr #32
  24:	00b70002 	adcseq	r0, r7, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	200000c4 	andcs	r0, r0, r4, asr #1
  34:	00000568 	andeq	r0, r0, r8, ror #10
  38:	20000000 	andcs	r0, r0, r0
  3c:	0000000c 	andeq	r0, r0, ip
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	100a0002 	andne	r0, sl, r2
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	2000062c 	andcs	r0, r0, ip, lsr #12
  5c:	00000022 	andeq	r0, r0, r2, lsr #32
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000d9 	ldrdeq	r0, [r0], -r9
   4:	004c0003 	subeq	r0, ip, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2f010000 	svccs	0x00010000
  1c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
  20:	63616d2f 	cmnvs	r1, #3008	; 0xbc0
  24:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
  28:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
  2c:	6d2f7374 	stcvs	3, cr7, [pc, #-464]!	; fffffe64 <ball_geometry+0xdffff6a4>
  30:	6d2f706f 	stcvs	0, cr7, [pc, #-444]!	; fffffe7c <ball_geometry+0xdffff6bc>
  34:	6f57706f 	svcvs	0x0057706f
  38:	70736b72 	rsbsvc	r6, r3, r2, ror fp
  3c:	2f656361 	svccs	0x00656361
  40:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
  44:	676e6f70 			; <UNDEFINED> instruction: 0x676e6f70
  48:	65640000 	strbvs	r0, [r4, #-0]!
  4c:	2e79616c 	rpwcsez	f6, f1, #4.0
  50:	00010063 	andeq	r0, r1, r3, rrx
  54:	17050000 	strne	r0, [r5, -r0]
  58:	10020500 	andne	r0, r2, r0, lsl #10
  5c:	1a200000 	bne	800064 <startup-0x1f7fff9c>
  60:	052f0205 	streq	r0, [pc, #-517]!	; fffffe63 <ball_geometry+0xdffff6a3>
  64:	0205200c 	andeq	r2, r5, #12
  68:	200c052f 	andcs	r0, ip, pc, lsr #10
  6c:	052f0205 	streq	r0, [pc, #-517]!	; fffffe6f <ball_geometry+0xdffff6af>
  70:	0205200b 	andeq	r2, r5, #11
  74:	200c052f 	andcs	r0, ip, pc, lsr #10
  78:	05310705 	ldreq	r0, [r1, #-1797]!	; 0xfffff8fb
  7c:	01052009 	tsteq	r5, r9
  80:	ae220531 	mcrge	5, 1, r0, cr2, cr1, {1}
  84:	054b1305 	strbeq	r1, [fp, #-773]	; 0xfffffcfb
  88:	03052e02 	movweq	r2, #24066	; 0x5e02
  8c:	03040200 	movweq	r0, #16896	; 0x4200
  90:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
  94:	02002f03 	andeq	r2, r0, #3, 30
  98:	002f0304 	eoreq	r0, pc, r4, lsl #6
  9c:	2f030402 	svccs	0x00030402
  a0:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
  a4:	052a0304 	streq	r0, [sl, #-772]!	; 0xfffffcfc
  a8:	04020002 	streq	r0, [r2], #-2
  ac:	01053c01 	tsteq	r5, r1, lsl #24
  b0:	5a220550 	bpl	8815f8 <startup-0x1f77ea08>
  b4:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
  b8:	13057505 	movwne	r7, #21765	; 0x5505
  bc:	2e02053e 	mcrcs	5, 0, r0, cr2, cr14, {1}
  c0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
  c4:	05210304 	streq	r0, [r1, #-772]!	; 0xfffffcfc
  c8:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
  cc:	02055703 	andeq	r5, r5, #786432	; 0xc0000
  d0:	01040200 	mrseq	r0, R12_usr
  d4:	4d01053c 	cfstr32mi	mvfx0, [r1, #-240]	; 0xffffff10
  d8:	01000502 	tsteq	r0, r2, lsl #10
  dc:	0003ee01 	andeq	lr, r3, r1, lsl #28
  e0:	0b000300 	bleq	ce8 <startup-0x1ffff318>
  e4:	02000001 	andeq	r0, r0, #1
  e8:	0d0efb01 	vstreq	d15, [lr, #-4]
  ec:	01010100 	mrseq	r0, (UNDEF: 17)
  f0:	00000001 	andeq	r0, r0, r1
  f4:	01000001 	tsteq	r0, r1
  f8:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 44 <startup-0x1fffffbc>
  fc:	616d2f65 	cmnvs	sp, r5, ror #30
 100:	6f442f63 	svcvs	0x00442f63
 104:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 108:	2f73746e 	svccs	0x0073746e
 10c:	2f706f6d 	svccs	0x00706f6d
 110:	57706f6d 	ldrbpl	r6, [r0, -sp, ror #30]!
 114:	736b726f 	cmnvc	fp, #-268435450	; 0xf0000006
 118:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
 11c:	766f6d2f 	strbtvc	r6, [pc], -pc, lsr #26
 120:	6e6f7065 	cdpvs	0, 6, cr7, cr15, cr5, {3}
 124:	752f0067 	strvc	r0, [pc, #-103]!	; c5 <startup-0x1fffff3b>
 128:	732f7273 			; <UNDEFINED> instruction: 0x732f7273
 12c:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
 130:	646f632f 	strbtvs	r6, [pc], #-815	; 138 <startup-0x1ffffec8>
 134:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
 138:	6f742f65 	svcvs	0x00742f65
 13c:	2f736c6f 	svccs	0x00736c6f
 140:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
 144:	2f6d7261 	svccs	0x006d7261
 148:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
 14c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
 150:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
 154:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
 158:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 15c:	79732f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
 160:	752f0073 	strvc	r0, [pc, #-115]!	; f5 <startup-0x1fffff0b>
 164:	732f7273 			; <UNDEFINED> instruction: 0x732f7273
 168:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
 16c:	646f632f 	strbtvs	r6, [pc], #-815	; 174 <startup-0x1ffffe8c>
 170:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
 174:	6f742f65 	svcvs	0x00742f65
 178:	2f736c6f 	svccs	0x00736c6f
 17c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
 180:	2f6d7261 	svccs	0x006d7261
 184:	2f62696c 	svccs	0x0062696c
 188:	2f636367 	svccs	0x00636367
 18c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
 190:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
 194:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
 198:	2e392f69 	cdpcs	15, 3, cr2, cr9, cr9, {3}
 19c:	2f312e32 	svccs	0x00312e32
 1a0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 1a4:	00656475 	rsbeq	r6, r5, r5, ror r4
 1a8:	61747300 	cmnvs	r4, r0, lsl #6
 1ac:	70757472 	rsbsvc	r7, r5, r2, ror r4
 1b0:	0100632e 	tsteq	r0, lr, lsr #6
 1b4:	6f6c0000 	svcvs	0x006c0000
 1b8:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
 1bc:	00000200 	andeq	r0, r0, r0, lsl #4
 1c0:	7079745f 	rsbsvc	r7, r9, pc, asr r4
 1c4:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
 1c8:	00000200 	andeq	r0, r0, r0, lsl #4
 1cc:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
 1d0:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
 1d4:	00000300 	andeq	r0, r0, r0, lsl #6
 1d8:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
 1dc:	00682e74 	rsbeq	r2, r8, r4, ror lr
 1e0:	3c000002 	stccc	0, cr0, [r0], {2}
 1e4:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 1e8:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
 1ec:	0000003e 	andeq	r0, r0, lr, lsr r0
 1f0:	01050000 	mrseq	r0, (UNDEF: 5)
 1f4:	00020500 	andeq	r0, r2, r0, lsl #10
 1f8:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
 1fc:	2113010b 	tstcs	r3, fp, lsl #2
 200:	02212f21 	eoreq	r2, r1, #33, 30	; 0x84
 204:	01010003 	tsteq	r1, r3
 208:	05002e05 	streq	r2, [r0, #-3589]	; 0xfffff1fb
 20c:	0000c402 	andeq	ip, r0, r2, lsl #8
 210:	013a0320 	teqeq	sl, r0, lsr #6
 214:	59591005 	ldmdbpl	r9, {r0, r2, ip}^
 218:	4b590505 	blmi	1641634 <startup-0x1e9be9cc>
 21c:	054c0105 	strbeq	r0, [ip, #-261]	; 0xfffffefb
 220:	07054c17 	smladeq	r5, r7, ip, r4
 224:	911d054d 	tstls	sp, sp, asr #10
 228:	053c1005 	ldreq	r1, [ip, #-5]!
 22c:	10053d1d 	andne	r3, r5, sp, lsl sp
 230:	3d1b052e 	cfldr32cc	mvfx0, [fp, #-184]	; 0xffffff48
 234:	052e1005 	streq	r1, [lr, #-5]!
 238:	10053d1b 	andne	r3, r5, fp, lsl sp
 23c:	3f08052e 	svccc	0x0008052e
 240:	052e0405 	streq	r0, [lr, #-1029]!	; 0xfffffbfb
 244:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
 248:	0c052e01 	stceq	14, cr2, [r5], {1}
 24c:	01040200 	mrseq	r0, R12_usr
 250:	001e052e 	andseq	r0, lr, lr, lsr #10
 254:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
 258:	02001805 	andeq	r1, r0, #327680	; 0x50000
 25c:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
 260:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
 264:	22052e03 	andcs	r2, r5, #3, 28	; 0x30
 268:	03040200 	movweq	r0, #16896	; 0x4200
 26c:	0034052e 	eorseq	r0, r4, lr, lsr #10
 270:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
 274:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
 278:	052e0404 	streq	r0, [lr, #-1028]!	; 0xfffffbfc
 27c:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
 280:	38052e05 	stmdacc	r5, {r0, r2, r9, sl, fp, sp}
 284:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
 288:	0049052e 	subeq	r0, r9, lr, lsr #10
 28c:	2e060402 	cdpcs	4, 0, cr0, cr6, cr2, {0}
 290:	02004305 	andeq	r4, r0, #335544320	; 0x14000000
 294:	052e0604 	streq	r0, [lr, #-1540]!	; 0xfffff9fc
 298:	04020053 	streq	r0, [r2], #-83	; 0xffffffad
 29c:	4d052e07 	stcmi	14, cr2, [r5, #-28]	; 0xffffffe4
 2a0:	07040200 	streq	r0, [r4, -r0, lsl #4]
 2a4:	2f0a052e 	svccs	0x000a052e
 2a8:	05321605 	ldreq	r1, [r2, #-1541]!	; 0xfffff9fb
 2ac:	2505820f 	strcs	r8, [r5, #-527]	; 0xfffffdf1
 2b0:	821e053c 	andshi	r0, lr, #60, 10	; 0xf000000
 2b4:	053c0705 	ldreq	r0, [ip, #-1797]!	; 0xfffff8fb
 2b8:	03058305 	movweq	r8, #21253	; 0x5305
 2bc:	09058359 	stmdbeq	r5, {r0, r3, r4, r6, r8, r9, pc}
 2c0:	66050584 	strvs	r0, [r5], -r4, lsl #11
 2c4:	672f0305 	strvs	r0, [pc, -r5, lsl #6]!
 2c8:	05850d05 	streq	r0, [r5, #3333]	; 0xd05
 2cc:	12057409 	andne	r7, r5, #150994944	; 0x9000000
 2d0:	8209052f 	andhi	r0, r9, #197132288	; 0xbc00000
 2d4:	054b0805 	strbeq	r0, [fp, #-2053]	; 0xfffff7fb
 2d8:	09052f04 	stmdbeq	r5, {r2, r8, r9, sl, fp, sp}
 2dc:	4a05053e 	bmi	1417dc <startup-0x1febe824>
 2e0:	3e2f0905 	vmulcc.f16	s0, s30, s10	; <UNPREDICTABLE>
 2e4:	053f0a05 	ldreq	r0, [pc, #-2565]!	; fffff8e7 <ball_geometry+0xdffff127>
 2e8:	05054a02 	streq	r4, [r5, #-2562]	; 0xfffff5fe
 2ec:	59040521 	stmdbpl	r4, {r0, r5, r8, sl}
 2f0:	69090576 	stmdbvs	r9, {r1, r2, r4, r5, r6, r8, sl}
 2f4:	054c0805 	strbeq	r0, [ip, #-2053]	; 0xfffff7fb
 2f8:	06052e05 	streq	r2, [r5], -r5, lsl #28
 2fc:	4b0a053d 	blmi	2817f8 <startup-0x1fd7e808>
 300:	02001c05 	andeq	r1, r0, #1280	; 0x500
 304:	75030204 	strvc	r0, [r3, #-516]	; 0xfffffdfc
 308:	0014054a 	andseq	r0, r4, sl, asr #10
 30c:	3c010402 	cfstrscc	mvf0, [r1], {2}
 310:	02000205 	andeq	r0, r0, #1342177280	; 0x50000000
 314:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
 318:	3c0f0309 	stccc	3, cr0, [pc], {9}
 31c:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
 320:	05210104 	streq	r0, [r1, #-260]!	; 0xfffffefc
 324:	07054c1d 	smladeq	r5, sp, ip, r4
 328:	9110054b 	tstls	r0, fp, asr #10
 32c:	05595967 	ldrbeq	r5, [r9, #-2407]	; 0xfffff699
 330:	0f055c07 	svceq	0x00055c07
 334:	65070591 	strvs	r0, [r7, #-1425]	; 0xfffffa6f
 338:	22081305 	andcs	r1, r8, #335544320	; 0x14000000
 33c:	31640705 	cmncc	r4, r5, lsl #14
 340:	69170563 	ldmdbvs	r7, {r0, r1, r5, r6, r8, sl}
 344:	05630705 	strbeq	r0, [r3, #-1797]!	; 0xfffff8fb
 348:	07053123 	streq	r3, [r5, -r3, lsr #2]
 34c:	05623263 	strbeq	r3, [r2, #-611]!	; 0xfffffd9d
 350:	07053213 	smladeq	r5, r3, r2, r3
 354:	6a240562 	bvs	9018e4 <startup-0x1f6fe71c>
 358:	05620705 	strbeq	r0, [r2, #-1797]!	; 0xfffff8fb
 35c:	0205350a 	andeq	r3, r5, #41943040	; 0x2800000
 360:	000d052e 	andeq	r0, sp, lr, lsr #10
 364:	22030402 	andcs	r0, r3, #33554432	; 0x2000000
 368:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
 36c:	05580304 	ldrbeq	r0, [r8, #-772]	; 0xfffffcfc
 370:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
 374:	11053a03 	tstne	r5, r3, lsl #20
 378:	01040200 	mrseq	r0, R12_usr
 37c:	0002053c 	andeq	r0, r2, ip, lsr r5
 380:	20010402 	andcs	r0, r1, r2, lsl #8
 384:	05320105 	ldreq	r0, [r2, #-261]!	; 0xfffffefb
 388:	07055a1b 	smladeq	r5, fp, sl, r5
 38c:	5910054b 	ldmdbpl	r0, {r0, r1, r3, r6, r8, sl}
 390:	59120559 	ldmdbpl	r2, {r0, r3, r4, r6, r8, sl}
 394:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
 398:	05674d11 	strbeq	r4, [r7, #-3345]!	; 0xfffff2ef
 39c:	03055908 	movweq	r5, #22792	; 0x5908
 3a0:	06052f08 	streq	r2, [r5], -r8, lsl #30
 3a4:	0b054b4b 	bleq	1530d8 <startup-0x1feacf28>
 3a8:	2e05055a 	cfrshl32cs	mvfx5, mvfx10, r0
 3ac:	05311105 	ldreq	r1, [r1, #-261]!	; 0xfffffefb
 3b0:	0a052e09 	beq	14bbdc <startup-0x1feb4424>
 3b4:	053c7503 	ldreq	r7, [ip, #-1283]!	; 0xfffffafd
 3b8:	200d0301 	andcs	r0, sp, r1, lsl #6
 3bc:	054c2005 	strbeq	r2, [ip, #-5]
 3c0:	02054d0a 	andeq	r4, r5, #640	; 0x280
 3c4:	0023052e 	eoreq	r0, r3, lr, lsr #10
 3c8:	21030402 	tstcs	r3, r2, lsl #8
 3cc:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
 3d0:	05740304 	ldrbeq	r0, [r4, #-772]!	; 0xfffffcfc
 3d4:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
 3d8:	03052003 	movweq	r2, #20483	; 0x5003
 3dc:	03040200 	movweq	r0, #16896	; 0x4200
 3e0:	002a0574 	eoreq	r0, sl, r4, ror r5
 3e4:	3b030402 	blcc	c13f4 <startup-0x1ff3ec0c>
 3e8:	02001d05 	andeq	r1, r0, #320	; 0x140
 3ec:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 3f0:	04020002 	streq	r0, [r2], #-2
 3f4:	01052e01 	tsteq	r5, r1, lsl #28
 3f8:	5a21053e 	bpl	8418f8 <startup-0x1f7be708>
 3fc:	054d0a05 	strbeq	r0, [sp, #-2565]	; 0xfffff5fb
 400:	25052e02 	strcs	r2, [r5, #-3586]	; 0xfffff1fe
 404:	03040200 	movweq	r0, #16896	; 0x4200
 408:	00030521 	andeq	r0, r3, r1, lsr #10
 40c:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
 410:	02003705 	andeq	r3, r0, #1310720	; 0x140000
 414:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
 418:	04020003 	streq	r0, [r2], #-3
 41c:	2a057403 	bcs	15d430 <startup-0x1fea2bd0>
 420:	03040200 	movweq	r0, #16896	; 0x4200
 424:	001d053b 	andseq	r0, sp, fp, lsr r5
 428:	3c010402 	cfstrscc	mvf0, [r1], {2}
 42c:	02000205 	andeq	r0, r0, #1342177280	; 0x50000000
 430:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
 434:	20053e01 	andcs	r3, r5, r1, lsl #28
 438:	4b0c055a 	blmi	3019a8 <startup-0x1fcfe658>
 43c:	053d3e3d 	ldreq	r3, [sp, #-3645]!	; 0xfffff1c3
 440:	0c053e11 	stceq	14, cr3, [r5], {17}
 444:	2f11052e 	svccs	0x0011052e
 448:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
 44c:	0205200c 	andeq	r2, r5, #12
 450:	4c0a052f 	cfstr32mi	mvfx0, [sl], {47}	; 0x2f
 454:	052e0205 	streq	r0, [lr, #-517]!	; 0xfffffdfb
 458:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
 45c:	2d052103 	stfcss	f2, [r5, #-12]
 460:	03040200 	movweq	r0, #16896	; 0x4200
 464:	00270574 	eoreq	r0, r7, r4, ror r5
 468:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
 46c:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
 470:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
 474:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
 478:	2d058303 	stccs	3, cr8, [r5, #-12]
 47c:	03040200 	movweq	r0, #16896	; 0x4200
 480:	00270574 	eoreq	r0, r7, r4, ror r5
 484:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
 488:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
 48c:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
 490:	0402002a 	streq	r0, [r2], #-42	; 0xffffffd6
 494:	1d058003 	stcne	0, cr8, [r5, #-12]
 498:	01040200 	mrseq	r0, R12_usr
 49c:	0002053c 	andeq	r0, r2, ip, lsr r5
 4a0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 4a4:	4b010543 	blmi	419b8 <startup-0x1ffbe648>
 4a8:	054c3905 	strbeq	r3, [ip, #-2309]	; 0xfffff6fb
 4ac:	20036901 	andcs	r6, r3, r1, lsl #18
 4b0:	2f05054a 	svccs	0x0005054a
 4b4:	2f2f0205 	svccs	0x002f0205
 4b8:	00030531 	andeq	r0, r3, r1, lsr r5
 4bc:	4d010402 	cfstrsmi	mvf0, [r1, #-8]
 4c0:	01040200 	mrseq	r0, R12_usr
 4c4:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
 4c8:	03023b01 	movweq	r3, #11009	; 0x2b01
 4cc:	85010100 	strhi	r0, [r1, #-256]	; 0xffffff00
 4d0:	03000000 	movweq	r0, #0
 4d4:	00004b00 	andeq	r4, r0, r0, lsl #22
 4d8:	fb010200 	blx	40ce2 <startup-0x1ffbf31e>
 4dc:	01000d0e 	tsteq	r0, lr, lsl #26
 4e0:	00010101 	andeq	r0, r1, r1, lsl #2
 4e4:	00010000 	andeq	r0, r1, r0
 4e8:	682f0100 	stmdavs	pc!, {r8}	; <UNPREDICTABLE>
 4ec:	2f656d6f 	svccs	0x00656d6f
 4f0:	2f63616d 	svccs	0x0063616d
 4f4:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
 4f8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 4fc:	6f6d2f73 	svcvs	0x006d2f73
 500:	6f6d2f70 	svcvs	0x006d2f70
 504:	726f5770 	rsbvc	r5, pc, #112, 14	; 0x1c00000
 508:	6170736b 	cmnvs	r0, fp, ror #6
 50c:	6d2f6563 	cfstr32vs	mvfx6, [pc, #-396]!	; 388 <startup-0x1ffffc78>
 510:	7065766f 	rsbvc	r7, r5, pc, ror #12
 514:	00676e6f 	rsbeq	r6, r7, pc, ror #28
 518:	61726400 	cmnvs	r2, r0, lsl #8
 51c:	00632e77 	rsbeq	r2, r3, r7, ror lr
 520:	00000001 	andeq	r0, r0, r1
 524:	05001405 	streq	r1, [r0, #-1029]	; 0xfffffbfb
 528:	00062c02 	andeq	r2, r6, r2, lsl #24
 52c:	01100320 	tsteq	r0, r0, lsr #6
 530:	402f0105 	eormi	r0, pc, r5, lsl #2
 534:	13210205 			; <UNDEFINED> instruction: 0x13210205
 538:	24210105 	strtcs	r0, [r1], #-261	; 0xfffffefb
 53c:	13210205 			; <UNDEFINED> instruction: 0x13210205
 540:	24210105 	strtcs	r0, [r1], #-261	; 0xfffffefb
 544:	13210205 			; <UNDEFINED> instruction: 0x13210205
 548:	24210105 	strtcs	r0, [r1], #-261	; 0xfffffefb
 54c:	13210205 			; <UNDEFINED> instruction: 0x13210205
 550:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
 554:	01010001 	tsteq	r1, r1

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	20554e47 	subscs	r4, r5, r7, asr #28
   4:	20393943 	eorscs	r3, r9, r3, asr #18
   8:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
   c:	30322031 	eorscc	r2, r2, r1, lsr r0
  10:	30313931 	eorscc	r3, r1, r1, lsr r9
  14:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  18:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  1c:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  20:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  24:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  28:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  2c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  30:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  34:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  38:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  3c:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  40:	205d3939 	subscs	r3, sp, r9, lsr r9
  44:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  48:	20626d75 	rsbcs	r6, r2, r5, ror sp
  4c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  50:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  54:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  58:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  5c:	616d2d20 	cmnvs	sp, r0, lsr #26
  60:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  64:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  68:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  6c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  70:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  74:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  78:	00393963 	eorseq	r3, r9, r3, ror #18
  7c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; ffffffc8 <ball_geometry+0xdffff808>
  80:	616d2f65 	cmnvs	sp, r5, ror #30
  84:	6f442f63 	svcvs	0x00442f63
  88:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  8c:	2f73746e 	svccs	0x0073746e
  90:	2f706f6d 	svccs	0x00706f6d
  94:	57706f6d 	ldrbpl	r6, [r0, -sp, ror #30]!
  98:	736b726f 	cmnvc	fp, #-268435450	; 0xf0000006
  9c:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
  a0:	766f6d2f 	strbtvc	r6, [pc], -pc, lsr #26
  a4:	6e6f7065 	cdpvs	0, 6, cr7, cr15, cr5, {3}
  a8:	65642f67 	strbvs	r2, [r4, #-3943]!	; 0xfffff099
  ac:	2e79616c 	rpwcsez	f6, f1, #4.0
  b0:	65640063 	strbvs	r0, [r4, #-99]!	; 0xffffff9d
  b4:	5f79616c 	svcpl	0x0079616c
  b8:	7263696d 	rsbvc	r6, r3, #1785856	; 0x1b4000
  bc:	6564006f 	strbvs	r0, [r4, #-111]!	; 0xffffff91
  c0:	5f79616c 	svcpl	0x0079616c
  c4:	6c6c696d 			; <UNDEFINED> instruction: 0x6c6c696d
  c8:	682f0069 	stmdavs	pc!, {r0, r3, r5, r6}	; <UNPREDICTABLE>
  cc:	2f656d6f 	svccs	0x00656d6f
  d0:	2f63616d 	svccs	0x0063616d
  d4:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
  d8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
  dc:	6f6d2f73 	svcvs	0x006d2f73
  e0:	6f6d2f70 	svcvs	0x006d2f70
  e4:	726f5770 	rsbvc	r5, pc, #112, 14	; 0x1c00000
  e8:	6170736b 	cmnvs	r0, fp, ror #6
  ec:	6d2f6563 	cfstr32vs	mvfx6, [pc, #-396]!	; ffffff68 <ball_geometry+0xdffff7a8>
  f0:	7065766f 	rsbvc	r7, r5, pc, ror #12
  f4:	00676e6f 	rsbeq	r6, r7, pc, ror #28
  f8:	616c6564 	cmnvs	ip, r4, ror #10
  fc:	35325f79 	ldrcc	r5, [r2, #-3961]!	; 0xfffff087
 100:	00736e30 	rsbseq	r6, r3, r0, lsr lr
 104:	6f73645f 	svcvs	0x0073645f
 108:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
 10c:	00656c64 	rsbeq	r6, r5, r4, ror #24
 110:	7a69735f 	bvc	1a5ce94 <startup-0x1e5a316c>
 114:	725f0065 	subsvc	r0, pc, #101	; 0x65
 118:	34646e61 	strbtcc	r6, [r4], #-3681	; 0xfffff19f
 11c:	72640038 	rsbvc	r0, r4, #56	; 0x38
 120:	705f7761 	subsvc	r7, pc, r1, ror #14
 124:	67796c6f 	ldrbvs	r6, [r9, -pc, ror #24]!
 128:	5f006e6f 	svcpl	0x00006e6f
 12c:	72656d65 	rsbvc	r6, r5, #6464	; 0x1940
 130:	636e6567 	cmnvs	lr, #432013312	; 0x19c00000
 134:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 138:	64007872 	strvs	r7, [r0], #-2162	; 0xfffff78e
 13c:	00797269 	rsbseq	r7, r9, r9, ror #4
 140:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
 144:	775f0061 	ldrbvc	r0, [pc, -r1, rrx]
 148:	6f747263 	svcvs	0x00747263
 14c:	735f626d 	cmpvc	pc, #-805306362	; 0xd0000006
 150:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 154:	63775f00 	cmnvs	r7, #0, 30
 158:	6f747273 	svcvs	0x00747273
 15c:	5f73626d 	svcpl	0x0073626d
 160:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 164:	6f6c0065 	svcvs	0x006c0065
 168:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
 16c:	20676e6f 	rsbcs	r6, r7, pc, ror #28
 170:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 174:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 178:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
 17c:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
 180:	6570735f 	ldrbvs	r7, [r0, #-863]!	; 0xfffffca1
 184:	5f006465 	svcpl	0x00006465
 188:	7366626c 	cmnvc	r6, #108, 4	; 0xc0000006
 18c:	00657a69 	rsbeq	r7, r5, r9, ror #20
 190:	6f6c5f5f 	svcvs	0x006c5f5f
 194:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
 198:	7400745f 	strvc	r7, [r0], #-1119	; 0xfffffba1
 19c:	61706d65 	cmnvs	r0, r5, ror #26
 1a0:	766f6d00 	strbtvc	r6, [pc], -r0, lsl #26
 1a4:	61625f65 	cmnvs	r2, r5, ror #30
 1a8:	626f6c6c 	rsbvs	r6, pc, #108, 24	; 0x6c00
 1ac:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 1b0:	626d5f00 	rsbvs	r5, sp, #0, 30
 1b4:	776f7472 			; <UNDEFINED> instruction: 0x776f7472
 1b8:	74735f63 	ldrbtvc	r5, [r3], #-3939	; 0xfffff09d
 1bc:	00657461 	rsbeq	r7, r5, r1, ror #8
 1c0:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
 1c4:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 1cc <startup-0x1ffffe34>
 1c8:	65735f6d 	ldrbvs	r5, [r3, #-3949]!	; 0xfffff093
 1cc:	6f6c0063 	svcvs	0x006c0063
 1d0:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
 1d4:	20676e6f 	rsbcs	r6, r7, pc, ror #28
 1d8:	00746e69 	rsbseq	r6, r4, r9, ror #28
 1dc:	706d756e 	rsbvc	r7, sp, lr, ror #10
 1e0:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
 1e4:	755f0073 	ldrbvc	r0, [pc, #-115]	; 179 <startup-0x1ffffe87>
 1e8:	00667562 	rsbeq	r7, r6, r2, ror #10
 1ec:	796c6f70 	stmdbvc	ip!, {r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 1f0:	706e6f67 	rsbvc	r6, lr, r7, ror #30
 1f4:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
 1f8:	61625f00 	cmnvs	r2, r0, lsl #30
 1fc:	5f006573 	svcpl	0x00006573
 200:	5f6d745f 	svcpl	0x006d745f
 204:	72756f68 	rsbsvc	r6, r5, #104, 30	; 0x1a0
 208:	735f5f00 	cmpvc	pc, #0, 30
 20c:	6f5f0066 	svcvs	0x005f0066
 210:	78655f6e 	stmdavc	r5!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 214:	615f7469 	cmpvs	pc, r9, ror #8
 218:	00736772 	rsbseq	r6, r3, r2, ror r7
 21c:	6f6f635f 	svcvs	0x006f635f
 220:	0065696b 	rsbeq	r6, r5, fp, ror #18
 224:	67735f5f 			; <UNDEFINED> instruction: 0x67735f5f
 228:	0065756c 	rsbeq	r7, r5, ip, ror #10
 22c:	43455250 	movtmi	r5, #21072	; 0x5250
 230:	665f0054 			; <UNDEFINED> instruction: 0x665f0054
 234:	7367616c 	cmnvc	r7, #108, 2
 238:	73695f00 	cmnvc	r9, #0, 30
 23c:	6178635f 	cmnvs	r8, pc, asr r3
 240:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
 244:	006e6964 	rsbeq	r6, lr, r4, ror #18
 248:	6b6c625f 	blvs	1b18bcc <startup-0x1e4e7434>
 24c:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 250:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
 254:	66756274 			; <UNDEFINED> instruction: 0x66756274
 258:	666f5f00 	strbtvs	r5, [pc], -r0, lsl #30
 25c:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
 260:	626d5f00 	rsbvs	r5, sp, #0, 30
 264:	6f747273 	svcvs	0x00747273
 268:	5f736377 	svcpl	0x00736377
 26c:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 270:	4f500065 	svcmi	0x00500065
 274:	00544e49 	subseq	r4, r4, r9, asr #28
 278:	72626d5f 	rsbvc	r6, r2, #6080	; 0x17c0
 27c:	5f6e656c 	svcpl	0x006e656c
 280:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 284:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
 288:	6772616e 	ldrbvs	r6, [r2, -lr, ror #2]!
 28c:	72640073 	rsbvc	r0, r4, #115	; 0x73
 290:	625f7761 	subsvs	r7, pc, #25427968	; 0x1840000
 294:	6f6c6c61 	svcvs	0x006c6c61
 298:	63656a62 	cmnvs	r5, #401408	; 0x62000
 29c:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
 2a0:	5f00736e 	svcpl	0x0000736e
 2a4:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 2a8:	6c665f00 	stclvs	15, cr5, [r6], #-0
 2ac:	5f6b636f 	svcpl	0x006b636f
 2b0:	735f0074 	cmpvc	pc, #116	; 0x74
 2b4:	72656474 	rsbvc	r6, r5, #116, 8	; 0x74000000
 2b8:	425f0072 	subsmi	r0, pc, #114	; 0x72
 2bc:	6e696769 	cdpvs	7, 6, cr6, cr9, cr9, {3}
 2c0:	675f0074 			; <UNDEFINED> instruction: 0x675f0074
 2c4:	616d6d61 	cmnvs	sp, r1, ror #26
 2c8:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
 2cc:	6d61676e 	stclvs	7, cr6, [r1, #-440]!	; 0xfffffe48
 2d0:	65725f00 	ldrbvs	r5, [r2, #-3840]!	; 0xfffff100
 2d4:	5f006461 	svcpl	0x00006461
 2d8:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
 2dc:	6b5f746c 	blvs	17dd494 <startup-0x1e822b6c>
 2e0:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 2e8 <startup-0x1ffffd18>
 2e4:	5f5f006d 	svcpl	0x005f006d
 2e8:	62686377 	rsbvs	r6, r8, #-603979775	; 0xdc000001
 2ec:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
 2f0:	74756f64 	ldrbtvc	r6, [r5], #-3940	; 0xfffff09c
 2f4:	69656800 	stmdbvs	r5!, {fp, sp, lr}^
 2f8:	00746867 	rsbseq	r6, r4, r7, ror #16
 2fc:	7476635f 	ldrbtvc	r6, [r6], #-863	; 0xfffffca1
 300:	006e656c 	rsbeq	r6, lr, ip, ror #10
 304:	6c69665f 	stclvs	6, cr6, [r9], #-380	; 0xfffffe84
 308:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
 30c:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
 310:	6e5f0070 	mrcvs	0, 2, r0, cr15, cr0, {3}
 314:	73626f69 	cmnvc	r2, #420	; 0x1a4
 318:	64697700 	strbtvs	r7, [r9], #-1792	; 0xfffff900
 31c:	73006874 	movwvc	r6, #2164	; 0x874
 320:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
 324:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
 328:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 32c:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
 330:	615f0074 	cmpvs	pc, r4, ror r0	; <UNPREDICTABLE>
 334:	69786574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
 338:	5f003074 	svcpl	0x00003074
 33c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 340:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 344:	5f006675 	svcpl	0x00006675
 348:	74637361 	strbtvc	r7, [r3], #-865	; 0xfffffc9f
 34c:	5f656d69 	svcpl	0x00656d69
 350:	00667562 	rsbeq	r7, r6, r2, ror #10
 354:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
 358:	73007864 	movwvc	r7, #2148	; 0x864
 35c:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
 360:	725f0079 	subsvc	r0, pc, #121	; 0x79
 364:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
 368:	5f5f0074 	svcpl	0x005f0074
 36c:	00686377 	rsbeq	r6, r8, r7, ror r3
 370:	434f4c5f 	movtmi	r4, #64607	; 0xfc5f
 374:	00545f4b 	subseq	r5, r4, fp, asr #30
 378:	746e6977 	strbtvc	r6, [lr], #-2423	; 0xfffff689
 37c:	5f00745f 	svcpl	0x0000745f
 380:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
 384:	72003273 	andvc	r3, r0, #805306375	; 0x30000007
 388:	61746365 	cmnvs	r4, r5, ror #6
 38c:	656c676e 	strbvs	r6, [ip, #-1902]!	; 0xfffff892
 390:	775f0073 			; <UNDEFINED> instruction: 0x775f0073
 394:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 398:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 3a0 <startup-0x1ffffc60>
 39c:	65795f6d 	ldrbvs	r5, [r9, #-3949]!	; 0xfffff093
 3a0:	5f007261 	svcpl	0x00007261
 3a4:	6c616d6e 	stclvs	13, cr6, [r1], #-440	; 0xfffffe48
 3a8:	00636f6c 	rsbeq	r6, r3, ip, ror #30
 3ac:	78656e70 	stmdavc	r5!, {r4, r5, r6, r9, sl, fp, sp, lr}^
 3b0:	73790074 	cmnvc	r9, #116	; 0x74
 3b4:	00706574 	rsbseq	r6, r0, r4, ror r5
 3b8:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
 3bc:	6e696c5f 	mcrvs	12, 3, r6, cr9, cr15, {2}
 3c0:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
 3c4:	00706565 	rsbseq	r6, r0, r5, ror #10
 3c8:	4a424f50 	bmi	1094110 <startup-0x1ef6bef0>
 3cc:	00544345 	subseq	r4, r4, r5, asr #6
 3d0:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
 3d4:	5f006674 	svcpl	0x00006674
 3d8:	5f6d745f 	svcpl	0x006d745f
 3dc:	006e6f6d 	rsbeq	r6, lr, sp, ror #30
 3e0:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
 3e4:	00746978 	rsbseq	r6, r4, r8, ror r9
 3e8:	64735f5f 	ldrbtvs	r5, [r3], #-3935	; 0xfffff0a1
 3ec:	6e696469 	cdpvs	4, 6, cr6, cr9, cr9, {3}
 3f0:	5f007469 	svcpl	0x00007469
 3f4:	5f66666f 	svcpl	0x0066666f
 3f8:	47740074 			; <UNDEFINED> instruction: 0x47740074
 3fc:	454d4f45 	strbmi	r4, [sp, #-3909]	; 0xfffff0bb
 400:	00595254 	subseq	r5, r9, r4, asr r2
 404:	61656c63 	cmnvs	r5, r3, ror #24
 408:	61625f72 	smcvs	9714	; 0x25f2
 40c:	626f6c6c 	rsbvs	r6, pc, #108, 24	; 0x6c00
 410:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 414:	61777300 	cmnvs	r7, r0, lsl #6
 418:	6c750070 	ldclvs	0, cr0, [r5], #-448	; 0xfffffe40
 41c:	6e726f63 	cdpvs	15, 7, cr6, cr2, cr3, {3}
 420:	5f007265 	svcpl	0x00007265
 424:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
 428:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 42c:	72726500 	rsbsvc	r6, r2, #0, 10
 430:	5f00726f 	svcpl	0x0000726f
 434:	6f746377 	svcvs	0x00746377
 438:	735f626d 	cmpvc	pc, #-805306362	; 0xd0000006
 43c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 440:	6f425f00 	svcvs	0x00425f00
 444:	75006c6f 	strvc	r6, [r0, #-3183]	; 0xfffff391
 448:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 44c:	2064656e 	rsbcs	r6, r4, lr, ror #10
 450:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 454:	656e5f00 	strbvs	r5, [lr, #-3840]!	; 0xfffff100
 458:	65730077 	ldrbvs	r0, [r3, #-119]!	; 0xffffff89
 45c:	626f5f74 	rsbvs	r5, pc, #116, 30	; 0x1d0
 460:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 464:	6570735f 	ldrbvs	r7, [r0, #-863]!	; 0xfffffca1
 468:	5f006465 	svcpl	0x00006465
 46c:	72655f68 	rsbvc	r5, r5, #104, 30	; 0x1a0
 470:	006f6e72 	rsbeq	r6, pc, r2, ror lr	; <UNPREDICTABLE>
 474:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
 478:	6e692074 	mcrvs	0, 3, r2, cr9, cr4, {3}
 47c:	5f5f0074 	svcpl	0x005f0074
 480:	795f6d74 	ldmdbvc	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 484:	00796164 	rsbseq	r6, r9, r4, ror #2
 488:	62735f5f 	rsbsvs	r5, r3, #380	; 0x17c
 48c:	5f006675 	svcpl	0x00006675
 490:	73626f69 	cmnvc	r2, #420	; 0x1a4
 494:	465f5f00 	ldrbmi	r5, [pc], -r0, lsl #30
 498:	00454c49 	subeq	r4, r5, r9, asr #24
 49c:	73626d5f 	cmnvc	r2, #6080	; 0x17c0
 4a0:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
 4a4:	5f00745f 	svcpl	0x0000745f
 4a8:	4946735f 	stmdbmi	r6, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
 4ac:	5f00454c 	svcpl	0x0000454c
 4b0:	7473626d 	ldrbtvc	r6, [r3], #-621	; 0xfffffd93
 4b4:	00657461 	rsbeq	r7, r5, r1, ror #8
 4b8:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
 4bc:	656e5f64 	strbvs	r5, [lr, #-3940]!	; 0xfffff09c
 4c0:	62007478 	andvs	r7, r0, #120, 8	; 0x78000000
 4c4:	5f6c6c61 	svcpl	0x006c6c61
 4c8:	6d6f6567 	cfstr64vs	mvdx6, [pc, #-412]!	; 334 <startup-0x1ffffccc>
 4cc:	79727465 	ldmdbvc	r2!, {r0, r2, r5, r6, sl, ip, sp, lr}^
 4d0:	626d5f00 	rsbvs	r5, sp, #0, 30
 4d4:	5f6e656c 	svcpl	0x006e656c
 4d8:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 4dc:	695f0065 	ldmdbvs	pc, {r0, r2, r5, r6}^	; <UNPREDICTABLE>
 4e0:	5f00636e 	svcpl	0x0000636e
 4e4:	00646e69 	rsbeq	r6, r4, r9, ror #28
 4e8:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
 4ec:	00656c61 	rsbeq	r6, r5, r1, ror #24
 4f0:	6c635f5f 	stclvs	15, cr5, [r3], #-380	; 0xfffffe84
 4f4:	756e6165 	strbvc	r6, [lr, #-357]!	; 0xfffffe9b
 4f8:	755f0070 	ldrbvc	r0, [pc, #-112]	; 490 <startup-0x1ffffb70>
 4fc:	6570736e 	ldrbvs	r7, [r0, #-878]!	; 0xfffffc92
 500:	69666963 	stmdbvs	r6!, {r0, r1, r5, r6, r8, fp, sp, lr}^
 504:	6c5f6465 	cfldrdvs	mvd6, [pc], {101}	; 0x65
 508:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 50c:	6e695f65 	cdpvs	15, 6, cr5, cr9, cr5, {3}
 510:	5f006f66 	svcpl	0x00006f66
 514:	7778616d 	ldrbvc	r6, [r8, -sp, ror #2]!
 518:	5f007364 	svcpl	0x00007364
 51c:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
 520:	735f0074 	cmpvc	pc, #116	; 0x74
 524:	00646565 	rsbeq	r6, r4, r5, ror #10
 528:	6f635f5f 	svcvs	0x00635f5f
 52c:	00746e75 	rsbseq	r6, r4, r5, ror lr
 530:	6f6c5f5f 	svcvs	0x006c5f5f
 534:	5f006b63 	svcpl	0x00006b63
 538:	6c61765f 	stclvs	6, cr7, [r1], #-380	; 0xfffffe84
 53c:	5f006575 	svcpl	0x00006575
 540:	6b656573 	blvs	1959b14 <startup-0x1e6a64ec>
 544:	6c635f00 	stclvs	15, cr5, [r3], #-0
 548:	0065736f 	rsbeq	r7, r5, pc, ror #6
 54c:	6f70665f 	svcvs	0x0070665f
 550:	00745f73 	rsbseq	r5, r4, r3, ror pc
 554:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
 558:	6365725f 	cmnvs	r5, #-268435451	; 0xf0000005
 55c:	676e6174 			; <UNDEFINED> instruction: 0x676e6174
 560:	2f00656c 	svccs	0x0000656c
 564:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
 568:	63616d2f 	cmnvs	r1, #3008	; 0xbc0
 56c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
 570:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 574:	6d2f7374 	stcvs	3, cr7, [pc, #-464]!	; 3ac <startup-0x1ffffc54>
 578:	6d2f706f 	stcvs	0, cr7, [pc, #-444]!	; 3c4 <startup-0x1ffffc3c>
 57c:	6f57706f 	svcvs	0x0057706f
 580:	70736b72 	rsbsvc	r6, r3, r2, ror fp
 584:	2f656361 	svccs	0x00656361
 588:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
 58c:	676e6f70 			; <UNDEFINED> instruction: 0x676e6f70
 590:	6174732f 	cmnvs	r4, pc, lsr #6
 594:	70757472 	rsbsvc	r7, r5, r2, ror r4
 598:	5f00632e 	svcpl	0x0000632e
 59c:	746c756d 	strbtvc	r7, [ip], #-1389	; 0xfffffa93
 5a0:	4f505000 	svcmi	0x00505000
 5a4:	5f00594c 	svcpl	0x0000594c
 5a8:	74727473 	ldrbtvc	r7, [r2], #-1139	; 0xfffffb8d
 5ac:	6c5f6b6f 	mrrcvs	11, 6, r6, pc, cr15	; <UNPREDICTABLE>
 5b0:	00747361 	rsbseq	r7, r4, r1, ror #6
 5b4:	746e665f 	strbtvc	r6, [lr], #-1631	; 0xfffff9a1
 5b8:	73657079 	cmnvc	r5, #121	; 0x79
 5bc:	696c7200 	stmdbvs	ip!, {r9, ip, sp, lr}^
 5c0:	0073656e 	rsbseq	r6, r3, lr, ror #10
 5c4:	6a624f74 	bvs	189439c <startup-0x1e76bc64>
 5c8:	64615f00 	strbtvs	r5, [r1], #-3840	; 0xfffff100
 5cc:	5f5f0064 	svcpl	0x005f0064
 5d0:	6e6f4c55 	mcrvs	12, 3, r4, cr15, cr5, {2}
 5d4:	675f0067 	ldrbvs	r0, [pc, -r7, rrx]
 5d8:	61647465 	cmnvs	r4, r5, ror #8
 5dc:	655f6574 	ldrbvs	r6, [pc, #-1396]	; 70 <startup-0x1fffff90>
 5e0:	64007272 	strvs	r7, [r0], #-626	; 0xfffffd8e
 5e4:	00776172 	rsbseq	r6, r7, r2, ror r1
 5e8:	6f6c675f 	svcvs	0x006c675f
 5ec:	5f6c6162 	svcpl	0x006c6162
 5f0:	75706d69 	ldrbvc	r6, [r0, #-3433]!	; 0xfffff297
 5f4:	705f6572 	subsvc	r6, pc, r2, ror r5	; <UNPREDICTABLE>
 5f8:	5f007274 	svcpl	0x00007274
 5fc:	73756e75 	cmnvc	r5, #1872	; 0x750
 600:	725f6465 	subsvc	r6, pc, #1694498816	; 0x65000000
 604:	00646e61 	rsbeq	r6, r4, r1, ror #28
 608:	7364775f 	cmnvc	r4, #24903680	; 0x17c0000
 60c:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 614 <startup-0x1ffff9ec>
 610:	64775f6d 	ldrbtvs	r5, [r7], #-3949	; 0xfffff093
 614:	5f007961 	svcpl	0x00007961
 618:	65756c67 	ldrbvs	r6, [r5, #-3175]!	; 0xfffff399
 61c:	7a697300 	bvc	1a5d224 <startup-0x1e5a2ddc>
 620:	5f007865 	svcpl	0x00007865
 624:	6134366c 	teqvs	r4, ip, ror #12
 628:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
 62c:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
 630:	75665f67 	strbvc	r5, [r6, #-3943]!	; 0xfffff099
 634:	7000636e 	andvc	r6, r0, lr, ror #6
 638:	0078736f 	rsbseq	r7, r8, pc, ror #6
 63c:	75626e5f 	strbvc	r6, [r2, #-3679]!	; 0xfffff1a1
 640:	755f0066 	ldrbvc	r0, [pc, #-102]	; 5e2 <startup-0x1ffffa1e>
 644:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
 648:	6f700064 	svcvs	0x00700064
 64c:	5f007973 	svcpl	0x00007973
 650:	5f6d745f 	svcpl	0x006d745f
 654:	73647369 	cmnvc	r4, #-1543503871	; 0xa4000001
 658:	6c5f0074 	mrrcvs	0, 7, r0, pc, cr4	; <UNPREDICTABLE>
 65c:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 660:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 664:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
 668:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
 66c:	5f006270 	svcpl	0x00006270
 670:	5f6d745f 	svcpl	0x006d745f
 674:	006e696d 	rsbeq	r6, lr, sp, ror #18
 678:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 67c:	725f0079 	subsvc	r0, pc, #121	; 0x79
 680:	73003834 	movwvc	r3, #2100	; 0x834
 684:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 688:	626d5f00 	rsbvs	r5, sp, #0, 30
 68c:	63776f74 	cmnvs	r7, #116, 30	; 0x1d0
 690:	6174735f 	cmnvs	r4, pc, asr r3
 694:	5f006574 	svcpl	0x00006574
 698:	00733570 	rsbseq	r3, r3, r0, ror r5
 69c:	6e69616d 	powvsez	f6, f1, #5.0
 6a0:	494c5000 	stmdbmi	ip, {ip, lr}^
 6a4:	6400454e 	strvs	r4, [r0], #-1358	; 0xfffffab2
 6a8:	61746c65 	cmnvs	r4, r5, ror #24
 6ac:	65640078 	strbvs	r0, [r4, #-120]!	; 0xffffff88
 6b0:	7961746c 	stmdbvc	r1!, {r2, r3, r5, r6, sl, ip, sp, lr}^
 6b4:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 6bc <startup-0x1ffff944>
 6b8:	646d5f6d 	strbtvs	r5, [sp], #-3949	; 0xfffff093
 6bc:	2f007961 	svccs	0x00007961
 6c0:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
 6c4:	63616d2f 	cmnvs	r1, #3008	; 0xbc0
 6c8:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
 6cc:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 6d0:	6d2f7374 	stcvs	3, cr7, [pc, #-464]!	; 508 <startup-0x1ffffaf8>
 6d4:	6d2f706f 	stcvs	0, cr7, [pc, #-444]!	; 520 <startup-0x1ffffae0>
 6d8:	6f57706f 	svcvs	0x0057706f
 6dc:	70736b72 	rsbsvc	r6, r3, r2, ror fp
 6e0:	2f656361 	svccs	0x00656361
 6e4:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
 6e8:	676e6f70 			; <UNDEFINED> instruction: 0x676e6f70
 6ec:	6172642f 	cmnvs	r2, pc, lsr #8
 6f0:	00632e77 	rsbeq	r2, r3, r7, ror lr
 6f4:	70617267 	rsbvc	r7, r1, r7, ror #4
 6f8:	5f636968 	svcpl	0x00636968
 6fc:	65786970 	ldrbvs	r6, [r8, #-2416]!	; 0xfffff690
 700:	65735f6c 	ldrbvs	r5, [r3, #-3948]!	; 0xfffff094
 704:	72670074 	rsbvc	r0, r7, #116	; 0x74
 708:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 70c:	69705f63 	ldmdbvs	r0!, {r0, r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 710:	5f6c6578 	svcpl	0x006c6578
 714:	61656c63 	cmnvs	r5, r3, ror #24
 718:	72670072 	rsbvc	r0, r7, #114	; 0x72
 71c:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 720:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
 724:	6c617469 	cfstrdvs	mvd7, [r1], #-420	; 0xfffffe5c
 728:	00657a69 	rsbeq	r7, r5, r9, ror #20
 72c:	70617267 	rsbvc	r7, r1, r7, ror #4
 730:	5f636968 	svcpl	0x00636968
 734:	61656c63 	cmnvs	r5, r3, ror #24
 738:	63735f72 	cmnvs	r3, #456	; 0x1c8
 73c:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
 740:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 744:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 748:	Address 0x0000000000000748 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	00000018 	andeq	r0, r0, r8, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	20000010 	andcs	r0, r0, r0, lsl r0
  1c:	00000038 	andeq	r0, r0, r8, lsr r0
  20:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  24:	41018e02 	tstmi	r1, r2, lsl #28
  28:	0000070d 	andeq	r0, r0, sp, lsl #14
  2c:	0000001c 	andeq	r0, r0, ip, lsl r0
  30:	00000000 	andeq	r0, r0, r0
  34:	20000048 	andcs	r0, r0, r8, asr #32
  38:	00000036 	andeq	r0, r0, r6, lsr r0
  3c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  40:	41018e02 	tstmi	r1, r2, lsl #28
  44:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  48:	00000007 	andeq	r0, r0, r7
  4c:	0000001c 	andeq	r0, r0, ip, lsl r0
  50:	00000000 	andeq	r0, r0, r0
  54:	2000007e 	andcs	r0, r0, lr, ror r0
  58:	00000044 	andeq	r0, r0, r4, asr #32
  5c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  60:	41018e02 	tstmi	r1, r2, lsl #28
  64:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  68:	00000007 	andeq	r0, r0, r7
  6c:	0000000c 	andeq	r0, r0, ip
  70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  74:	7c020001 	stcvc	0, cr0, [r2], {1}
  78:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  7c:	0000000c 	andeq	r0, r0, ip
  80:	0000006c 	andeq	r0, r0, ip, rrx
  84:	20000000 	andcs	r0, r0, r0
  88:	0000000c 	andeq	r0, r0, ip
  8c:	0000001c 	andeq	r0, r0, ip, lsl r0
  90:	0000006c 	andeq	r0, r0, ip, rrx
  94:	200000c4 	andcs	r0, r0, r4, asr #1
  98:	00000036 	andeq	r0, r0, r6, lsr r0
  9c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  a0:	41018e02 	tstmi	r1, r2, lsl #28
  a4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  a8:	00000007 	andeq	r0, r0, r7
  ac:	00000020 	andeq	r0, r0, r0, lsr #32
  b0:	0000006c 	andeq	r0, r0, ip, rrx
  b4:	200000fa 	strdcs	r0, [r0], -sl
  b8:	000001d4 	ldrdeq	r0, [r0], -r4
  bc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
  c0:	87038504 	strhi	r8, [r3, -r4, lsl #10]
  c4:	41018e02 	tstmi	r1, r2, lsl #28
  c8:	0d41400e 	stcleq	0, cr4, [r1, #-56]	; 0xffffffc8
  cc:	00000007 	andeq	r0, r0, r7
  d0:	00000020 	andeq	r0, r0, r0, lsr #32
  d4:	0000006c 	andeq	r0, r0, ip, rrx
  d8:	200002ce 	andcs	r0, r0, lr, asr #5
  dc:	00000132 	andeq	r0, r0, r2, lsr r1
  e0:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
  e4:	86048505 	strhi	r8, [r4], -r5, lsl #10
  e8:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  ec:	400e4101 	andmi	r4, lr, r1, lsl #2
  f0:	00070d41 	andeq	r0, r7, r1, asr #26
  f4:	00000020 	andeq	r0, r0, r0, lsr #32
  f8:	0000006c 	andeq	r0, r0, ip, rrx
  fc:	20000400 	andcs	r0, r0, r0, lsl #8
 100:	000000a4 	andeq	r0, r0, r4, lsr #1
 104:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 108:	86048505 	strhi	r8, [r4], -r5, lsl #10
 10c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 110:	380e4101 	stmdacc	lr, {r0, r8, lr}
 114:	00070d41 	andeq	r0, r7, r1, asr #26
 118:	0000001c 	andeq	r0, r0, ip, lsl r0
 11c:	0000006c 	andeq	r0, r0, ip, rrx
 120:	200004a4 	andcs	r0, r0, r4, lsr #9
 124:	0000004c 	andeq	r0, r0, ip, asr #32
 128:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 12c:	41018e02 	tstmi	r1, r2, lsl #28
 130:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 134:	00000007 	andeq	r0, r0, r7
 138:	0000001c 	andeq	r0, r0, ip, lsl r0
 13c:	0000006c 	andeq	r0, r0, ip, rrx
 140:	200004f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 144:	0000004c 	andeq	r0, r0, ip, asr #32
 148:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 14c:	41018e02 	tstmi	r1, r2, lsl #28
 150:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 154:	00000007 	andeq	r0, r0, r7
 158:	0000001c 	andeq	r0, r0, ip, lsl r0
 15c:	0000006c 	andeq	r0, r0, ip, rrx
 160:	2000053c 	andcs	r0, r0, ip, lsr r5
 164:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
 168:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 16c:	41018e02 	tstmi	r1, r2, lsl #28
 170:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 174:	00000007 	andeq	r0, r0, r7
 178:	0000001c 	andeq	r0, r0, ip, lsl r0
 17c:	0000006c 	andeq	r0, r0, ip, rrx
 180:	200005ec 	andcs	r0, r0, ip, ror #11
 184:	00000014 	andeq	r0, r0, r4, lsl r0
 188:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 18c:	41018e02 	tstmi	r1, r2, lsl #28
 190:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 194:	00000007 	andeq	r0, r0, r7
 198:	00000018 	andeq	r0, r0, r8, lsl r0
 19c:	0000006c 	andeq	r0, r0, ip, rrx
 1a0:	20000600 	andcs	r0, r0, r0, lsl #12
 1a4:	0000002c 	andeq	r0, r0, ip, lsr #32
 1a8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1ac:	41018e02 	tstmi	r1, r2, lsl #28
 1b0:	0000070d 	andeq	r0, r0, sp, lsl #14
 1b4:	0000000c 	andeq	r0, r0, ip
 1b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1bc:	7c020001 	stcvc	0, cr0, [r2], {1}
 1c0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1c4:	00000018 	andeq	r0, r0, r8, lsl r0
 1c8:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 1cc:	2000062c 	andcs	r0, r0, ip, lsr #12
 1d0:	0000000a 	andeq	r0, r0, sl
 1d4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1d8:	41018e02 	tstmi	r1, r2, lsl #28
 1dc:	0000070d 	andeq	r0, r0, sp, lsl #14
 1e0:	0000000c 	andeq	r0, r0, ip
 1e4:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 1e8:	20000636 	andcs	r0, r0, r6, lsr r6
 1ec:	00000006 	andeq	r0, r0, r6
 1f0:	0000000c 	andeq	r0, r0, ip
 1f4:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 1f8:	2000063c 	andcs	r0, r0, ip, lsr r6
 1fc:	00000006 	andeq	r0, r0, r6
 200:	0000000c 	andeq	r0, r0, ip
 204:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 208:	20000642 	andcs	r0, r0, r2, asr #12
 20c:	00000006 	andeq	r0, r0, r6
 210:	0000000c 	andeq	r0, r0, ip
 214:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 218:	20000648 	andcs	r0, r0, r8, asr #12
 21c:	00000006 	andeq	r0, r0, r6
 220:	0000000c 	andeq	r0, r0, ip
 224:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 228:	7c010001 	stcvc	0, cr0, [r1], {1}
 22c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 230:	0000000c 	andeq	r0, r0, ip
 234:	00000220 	andeq	r0, r0, r0, lsr #4
 238:	20000651 	andcs	r0, r0, r1, asr r6
 23c:	0000010a 	andeq	r0, r0, sl, lsl #2
 240:	0000000c 	andeq	r0, r0, ip
 244:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 248:	7c020001 	stcvc	0, cr0, [r2], {1}
 24c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 250:	00000014 	andeq	r0, r0, r4, lsl r0
 254:	00000240 	andeq	r0, r0, r0, asr #4
 258:	20000768 	andcs	r0, r0, r8, ror #14
 25c:	00000012 	andeq	r0, r0, r2, lsl r0
 260:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
 264:	00018e02 	andeq	r8, r1, r2, lsl #28

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	200000c4 	andcs	r0, r0, r4, asr #1
   4:	2000062c 	andcs	r0, r0, ip, lsr #12
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...
